###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         17/Dec/2020  14:50:31 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\Source\Coordinator.c                    #
#    Command line       =  -f C:\Users\Administrator\Desktop\eps\ZigBee通信实 #
#                          验\1.ZigBee网络传输温湿度实验\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8w #
#                          Coord.cfg (-DCPU32MHZ -DROOT=__near_func           #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCon #
#                          fig.cfg (-DSECURE=0 -DZG_SECURE_DYNAMIC=0          #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF11                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\Source\Coordinator.c -D ZIGBEEPRO -D    #
#                          ZTOOL_P1 -D MT_SYS_FUNC -D xMT_ZDO_FUNC -D         #
#                          LCD_SUPPORTED=DEBUG -D NV_RESTORE -lC              #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\CoordinatorEB\List\ -lA        #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\CoordinatorEB\List\            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\CoordinatorEB\Obj\ -e --debug  #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I C:\Users\Administrator\Des #
#                          ktop\eps\ZigBee通信实验\1.ZigBee网络传输温湿度实验 #
#                          \Projects\zstack\Samples\SampleApp\CC2530DB\ -I    #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\SOURCE\ -I                  #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I    #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\  #
#                          -I C:\Users\Administrator\Desktop\eps\ZigBee通信实 #
#                          验\1.ZigBee网络传输温湿度实验\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\H #
#                          AL\INCLUDE\ -I C:\Users\Administrator\Desktop\eps\ #
#                          ZigBee通信实验\1.ZigBee网络传输温湿度实验\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ #
#                          COMPONENTS\HAL\TARGET\CC2530EB\ -I                 #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL #
#                          \MCU\CCSOC\ -I C:\Users\Administrator\Desktop\eps\ #
#                          ZigBee通信实验\1.ZigBee网络传输温湿度实验\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ #
#                          COMPONENTS\OSAL\INCLUDE\ -I                        #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\AF\ -I C:\Users\Administrator\Desktop\eps\ZigBee #
#                          通信实验\1.ZigBee网络传输温湿度实验\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\STACK\NWK\ -I C:\Users\Administrator\Desktop\ #
#                          eps\ZigBee通信实验\1.ZigBee网络传输温湿度实验\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. #
#                          \..\COMPONENTS\STACK\SEC\ -I                       #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\SAPI\ -I C:\Users\Administrator\Desktop\eps\ZigB #
#                          ee通信实验\1.ZigBee网络传输温湿度实验\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\STACK\SYS\ -I C:\Users\Administrator\Deskto #
#                          p\eps\ZigBee通信实验\1.ZigBee网络传输温湿度实验\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ #
#                          ..\..\COMPONENTS\STACK\ZDO\ -I                     #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC #
#                          \F8W\ -I C:\Users\Administrator\Desktop\eps\ZigBee #
#                          通信实验\1.ZigBee网络传输温湿度实验\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\ZMAC\ -I C:\Users\Administrator\Desktop\eps\Z #
#                          igBee通信实验\1.ZigBee网络传输温湿度实验\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          OMPONENTS\SERVICES\SADDR\ -I                       #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERV #
#                          ICES\SDATA\ -I C:\Users\Administrator\Desktop\eps\ #
#                          ZigBee通信实验\1.ZigBee网络传输温湿度实验\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ #
#                          COMPONENTS\MAC\INCLUDE\ -I                         #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\ #
#                          HIGH_LEVEL\ -I C:\Users\Administrator\Desktop\eps\ #
#                          ZigBee通信实验\1.ZigBee网络传输温湿度实验\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ #
#                          COMPONENTS\MAC\LOW_LEVEL\srf04\ -I                 #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\ #
#                          LOW_LEVEL\srf04\SINGLE_CHIP\ -I                    #
#                          C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HARD #
#                          WARE\ -Ohz                                         #
#    List file          =  C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\CoordinatorEB\List\Coordinator #
#                          .lst                                               #
#    Object file        =  C:\Users\Administrator\Desktop\eps\ZigBee通信实验\ #
#                          1.ZigBee网络传输温湿度实验\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\CoordinatorEB\Obj\Coordinator. #
#                          r51                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\eps\ZigBee通信实验\1.ZigBee网络传输温湿度实验\Projects\zstack\Samples\SampleApp\Source\Coordinator.c
      1          #include "ZComDef.h"
      2          #include "hal_drivers.h"
      3          #include "OSAL.h"
      4          #include "OSAL_Tasks.h"
      5          #include "nwk.h"
      6          #include "APS.h"
      7          #include "ZDApp.h"
      8          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
      9            #include "ZDNwkMgr.h"
     10          #endif
     11          #if defined ( ZIGBEE_FRAGMENTATION )
     12            #include "aps_frag.h"
     13          #endif
     14          
     15          #include "SampleApp.h"
     16          #include "WiFiGate.h"
     17          #include "OSAL.h"
     18          #include "ZGlobals.h"
     19          #include "AF.h"
     20          #include "aps_groups.h"
     21          #include "ZDApp.h"
     22          
     23          #include "SampleApp.h"
     24          #include "SampleAppHw.h"
     25          
     26          #include "OnBoard.h"
     27          
     28          /* HAL */
     29          #include "hal_lcd.h"
     30          #include "hal_led.h"
     31          #include "hal_key.h"
     32          #include "string.h"
     33          
     34          #include "MT_UART.h"
     35          #include "MT_APP.h"
     36          #include "MT.h"
     37          #include "OLED.h"
     38          #include "SHT20.h"
     39          #include "bottom_led.h"
     40          #include "stdio.h"
     41          #include "UART2RS485.h"
     42          #include "WiFiGate.h"
     43          #include "_bind.h"
     44          #include "led_mode.h"
     45          
     46          // The order in this table must be identical to the task initialization calls below in osalInitTask.

   \                                 In  segment XDATA_ROM_C, align 1
     47          const pTaskEventHandlerFn tasksArr[] = {
   \                     tasksArr:
   \   000000   ....         DW ??macEventLoop?relay
   \   000002   ....         DW ??nwk_event_loop?relay
   \   000004   ....         DW ??Hal_ProcessEvent?relay
   \   000006   ....         DW ??APS_event_loop?relay
   \   000008   ....         DW ??APSF_ProcessEvent?relay
   \   00000A   ....         DW ??ZDApp_event_loop?relay
   \   00000C   ....         DW ??ZDNwkMgr_event_loop?relay
   \   00000E   ....         DW ??SampleApp_ProcessEvent?relay
     48            macEventLoop,
     49            nwk_event_loop,
     50            Hal_ProcessEvent,
     51          #if defined( MT_TASK )
     52            MT_ProcessEvent,
     53          #endif
     54            APS_event_loop,
     55          #if defined ( ZIGBEE_FRAGMENTATION )
     56            APSF_ProcessEvent,
     57          #endif
     58            ZDApp_event_loop,
     59          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     60            ZDNwkMgr_event_loop,
     61          #endif
     62            SampleApp_ProcessEvent,  
     63          };

   \                                 In  segment XDATA_ROM_C, align 1
     64          const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
   \                     tasksCnt:
   \   000000   08           DB 8

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     65          uint16 *tasksEvents;
   \                     tasksEvents:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     66          
     67          /*********************************************************************
     68           * @fn      osalInitTasks
     69           *
     70           * @brief   This function invokes the initialization function for each task.
     71           *
     72           * @param   void
     73           *
     74           * @return  none
     75           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     76          void osalInitTasks( void )
   \                     osalInitTasks:
     77          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     78            uint8 taskID = 0;
     79          
     80            tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
   \   000004                ; Setup parameters for call to function osal_mem_alloc
   \   000004   7A10         MOV     R2,#0x10
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   ??osal_mem_alloc?relay
   \   00000B   90....       MOV     DPTR,#tasksEvents
   \   00000E   EA           MOV     A,R2
   \   00000F   F0           MOVX    @DPTR,A
   \   000010   A3           INC     DPTR
   \   000011   EB           MOV     A,R3
   \   000012   F0           MOVX    @DPTR,A
     81            osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
   \   000013                ; Setup parameters for call to function osal_memset
   \   000013   7C10         MOV     R4,#0x10
   \   000015   7D00         MOV     R5,#0x0
   \   000017   7900         MOV     R1,#0x0
   \   000019   12....       LCALL   ??osal_memset?relay
     82          
     83            macTaskInit( taskID++ );
   \   00001C                ; Setup parameters for call to function macTaskInit
   \   00001C   7900         MOV     R1,#0x0
   \   00001E   12....       LCALL   ??macTaskInit?relay
     84            nwk_init( taskID++ );
   \   000021                ; Setup parameters for call to function nwk_init
   \   000021   7901         MOV     R1,#0x1
   \   000023   12....       LCALL   ??nwk_init?relay
     85            Hal_Init( taskID++ );
   \   000026                ; Setup parameters for call to function Hal_Init
   \   000026   7902         MOV     R1,#0x2
   \   000028   12....       LCALL   ??Hal_Init?relay
     86          #if defined( MT_TASK )
     87            MT_TaskInit( taskID++ );
     88          #endif
     89            APS_Init( taskID++ );
   \   00002B                ; Setup parameters for call to function APS_Init
   \   00002B   7903         MOV     R1,#0x3
   \   00002D   12....       LCALL   ??APS_Init?relay
     90          #if defined ( ZIGBEE_FRAGMENTATION )
     91            APSF_Init( taskID++ );
   \   000030                ; Setup parameters for call to function APSF_Init
   \   000030   7904         MOV     R1,#0x4
   \   000032   12....       LCALL   ??APSF_Init?relay
     92          #endif
     93            ZDApp_Init( taskID++ );
   \   000035                ; Setup parameters for call to function ZDApp_Init
   \   000035   7905         MOV     R1,#0x5
   \   000037   12....       LCALL   ??ZDApp_Init?relay
     94          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     95            ZDNwkMgr_Init( taskID++ );
   \   00003A                ; Setup parameters for call to function ZDNwkMgr_Init
   \   00003A   7906         MOV     R1,#0x6
   \   00003C   12....       LCALL   ??ZDNwkMgr_Init?relay
     96          #endif
     97            SampleApp_Init( taskID++ ); 
   \   00003F                ; Setup parameters for call to function SampleApp_Init
   \   00003F   7907         MOV     R1,#0x7
   \   000041   12....       LCALL   ??SampleApp_Init?relay
     98          }
   \   000044   D083         POP     DPH
   \   000046   D082         POP     DPL
   \   000048   02....       LJMP    ?BRET
     99          

   \                                 In  segment XDATA_ROM_C, align 1
    100          const cId_t InClusterList[1] =
   \                     InClusterList:
   \   000000   0100         DW 1
    101          {
    102            TEMP_HUMI_CLUSTERID
    103          };
    104          

   \                                 In  segment XDATA_ROM_C, align 1
    105          const SimpleDescriptionFormat_t Coordinator_SimpleDesc =
   \                     Coordinator_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW InClusterList
   \   000009   00           DB 0
   \   00000A   0000         DW 0H
    106          {
    107            SAMPLEAPP_ENDPOINT,                 //  int Endpoint;
    108            SAMPLEAPP_PROFID,                   //  uint16 AppProfId[2];
    109            SAMPLEAPP_DEVICEID,                 //  uint16 AppDeviceId[2];
    110            SAMPLEAPP_DEVICE_VERSION,           //  int   AppDevVer:4;
    111            SAMPLEAPP_FLAGS,                    //  int   AppFlags:4;
    112            1,                                  //  uint8  AppNumInClusters;
    113            (cId_t *)InClusterList,             //  uint8 *pAppInClusterList;
    114            0,                                  //  uint8  AppNumOutClusters;
    115            (cId_t *)NULL                       //  uint8 *pAppOutClusterList;
    116          };
    117          // This is the Endpoint/Interface description.  It is defined here, but
    118          // filled-in in SampleApp_Init().  Another way to go would be to fill
    119          // in the structure here and make it a "const" (in code space).  The
    120          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    121          endPointDesc_t Coordinator_epDesc;
   \                     Coordinator_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    122          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    123          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    124                                    // This variable will be received when
    125                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    126          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    127          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    128          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    129          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    130          afAddrType_t Point_To_Point_DstAddr;//点对点通信定义
   \                     Point_To_Point_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    131          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    132          afAddrType_t Boardcast_DstAddr;//点对点通信定义
   \                     Boardcast_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    133          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );//接收到无线消息回调函数
    134          /*********************************************************************
    135           * @fn      SampleApp_Init
    136           *
    137           * @brief   Initialization function for the Generic App Task.
    138           *          This is called during initialization and should contain
    139           *          any application specific initialization (ie. hardware
    140           *          initialization/setup, table initialization, power up
    141           *          notificaiton ... ).
    142           *
    143           * @param   task_id - the ID assigned by OSAL.  This ID should be
    144           *                    used to send messages and set timers.
    145           *
    146           * @return  none
    147           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    148          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    149          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    150            SampleApp_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#SampleApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
    151            SampleApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000D   7401         MOV     A,#0x1
   \   00000F   F0           MOVX    @DPTR,A
    152            SampleApp_TransID = 0;  
   \   000010   90....       MOV     DPTR,#SampleApp_TransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    153          	UartInit(HAL_UART_PORT_1,HAL_UART_BR_115200);//调试串口初始化
   \   000015                ; Setup parameters for call to function UartInit
   \   000015   7A04         MOV     R2,#0x4
   \   000017   7901         MOV     R1,#0x1
   \   000019   12....       LCALL   ??UartInit?relay
    154            OLED_Init();                    //初始化OLED 
   \   00001C                ; Setup parameters for call to function OLED_Init
   \   00001C   12....       LCALL   ??OLED_Init?relay
    155            OLED_P8x16Str(0,0,"coordinator");//OLED显示提示信息
   \   00001F                ; Setup parameters for call to function OLED_P8x16Str
   \   00001F   7C..         MOV     R4,#`?<Constant "coordinator">` & 0xff
   \   000021   7D..         MOV     R5,#(`?<Constant "coordinator">` >> 8) & 0xff
   \   000023   7A00         MOV     R2,#0x0
   \   000025   7900         MOV     R1,#0x0
   \   000027   12....       LCALL   ??OLED_P8x16Str?relay
    156             
    157            // 填写端点
    158            Coordinator_epDesc.endPoint   = SAMPLEAPP_ENDPOINT;
   \   00002A   90....       MOV     DPTR,#Coordinator_epDesc
   \   00002D   7414         MOV     A,#0x14
   \   00002F   F0           MOVX    @DPTR,A
    159            Coordinator_epDesc.task_id    = &SampleApp_TaskID;
   \   000030   A3           INC     DPTR
   \   000031   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000033   F0           MOVX    @DPTR,A
   \   000034   A3           INC     DPTR
   \   000035   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000037   F0           MOVX    @DPTR,A
    160            Coordinator_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&Coordinator_SimpleDesc;
   \   000038   A3           INC     DPTR
   \   000039   74..         MOV     A,#Coordinator_SimpleDesc & 0xff
   \   00003B   F0           MOVX    @DPTR,A
   \   00003C   A3           INC     DPTR
   \   00003D   74..         MOV     A,#(Coordinator_SimpleDesc >> 8) & 0xff
   \   00003F   F0           MOVX    @DPTR,A
    161            Coordinator_epDesc.latencyReq = noLatencyReqs;
   \   000040   A3           INC     DPTR
   \   000041   E4           CLR     A
   \   000042   F0           MOVX    @DPTR,A
    162            // 注册端点
    163            afRegister( &Coordinator_epDesc );
   \   000043                ; Setup parameters for call to function afRegister
   \   000043   7A..         MOV     R2,#Coordinator_epDesc & 0xff
   \   000045   7B..         MOV     R3,#(Coordinator_epDesc >> 8) & 0xff
   \   000047   12....       LCALL   ??afRegister?relay
    164          }
   \   00004A   7F01         MOV     R7,#0x1
   \   00004C   02....       LJMP    ?BANKED_LEAVE_XDATA
    165          
    166          /*********************************************************************
    167           * @fn      SampleApp_ProcessEvent
    168           *
    169           * @brief   Generic Application Task event processor.  This function
    170           *          is called to process all events for the task.  Events
    171           *          include timers, messages and any other user defined events.
    172           *
    173           * @param   task_id  - The OSAL assigned task ID.
    174           * @param   events - events to process.  This is a bit map and can
    175           *                   contain more than one event.
    176           *
    177           * @return  none
    178           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
    179          uint8 SendTemperatureIndicate = 1;
   \                     SendTemperatureIndicate:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for SendTemperatureIndicate>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    180          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    181          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    182            afIncomingMSGPacket_t *MSGpkt;
    183            (void)task_id;  // Intentionally unreferenced parameter
    184          
    185            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   604F         JZ      ??SampleApp_ProcessEvent_0
    186            {
    187              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000E                ; Setup parameters for call to function osal_msg_receive
   \   00000E   8018         SJMP    ??SampleApp_ProcessEvent_1
    188              while ( MSGpkt )
    189              {
    190                switch ( MSGpkt->hdr.event )
    191                {        
    192                  // Received when a messages is received (OTA) for this endpoint
    193                  case AF_INCOMING_MSG_CMD:
    194                    SampleApp_MessageMSGCB( MSGpkt );
    195                    break;
    196          
    197                  // Received whenever the device changes state in the network
    198                  case ZDO_STATE_CHANGE:
    199                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   90....       MOV     DPTR,#SampleApp_NwkState
   \   000015   F0           MOVX    @DPTR,A
    200                    if(SampleApp_NwkState == DEV_ZB_COORD)
   \   000016   6409         XRL     A,#0x9
   \   000018   7007         JNZ     ??SampleApp_ProcessEvent_3
    201                    {
    202                      printf("coord ready!");
   \   00001A                ; Setup parameters for call to function printf
   \   00001A   7A..         MOV     R2,#`?<Constant "coord ready!">` & 0xff
   \   00001C   7B..         MOV     R3,#(`?<Constant "coord ready!">` >> 8) & 0xff
   \   00001E   12....       LCALL   ??printf?relay
    203                    }
    204                    break;
    205          
    206                  default:
    207                    break;
    208                }
    209          
    210                // Release the memory
    211                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   000021                ; Setup parameters for call to function osal_msg_deallocate
   \   000021   EE           MOV     A,R6
   \   000022   FA           MOV     R2,A
   \   000023   EF           MOV     A,R7
   \   000024   FB           MOV     R3,A
   \   000025   12....       LCALL   ??osal_msg_deallocate?relay
    212          
    213                // Next - if one is available
    214                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000028                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   000028   90....       MOV     DPTR,#SampleApp_TaskID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   12....       LCALL   ??osal_msg_receive?relay
   \   000030   8A..         MOV     ?V0 + 2,R2
   \   000032   8B..         MOV     ?V0 + 3,R3
   \   000034   AE..         MOV     R6,?V0 + 2
   \   000036   AF..         MOV     R7,?V0 + 3
   \   000038   EE           MOV     A,R6
   \   000039   4F           ORL     A,R7
   \   00003A   6018         JZ      ??SampleApp_ProcessEvent_4
   \   00003C   8E82         MOV     DPL,R6
   \   00003E   8F83         MOV     DPH,R7
   \   000040   E0           MOVX    A,@DPTR
   \   000041   24E6         ADD     A,#-0x1a
   \   000043   6006         JZ      ??SampleApp_ProcessEvent_5
   \   000045   2449         ADD     A,#0x49
   \   000047   60C7         JZ      ??SampleApp_ProcessEvent_2
   \   000049   80D6         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_5:
   \   00004B                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   00004B   EE           MOV     A,R6
   \   00004C   FA           MOV     R2,A
   \   00004D   EF           MOV     A,R7
   \   00004E   FB           MOV     R3,A
   \   00004F   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000052   80CD         SJMP    ??SampleApp_ProcessEvent_3
    215              }
    216          
    217              // return unprocessed events
    218              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_4:
   \   000054   AA..         MOV     R2,?V0 + 0
   \   000056   E5..         MOV     A,?V0 + 1
   \   000058   6480         XRL     A,#0x80
   \   00005A   FB           MOV     R3,A
   \   00005B   8004         SJMP    ??SampleApp_ProcessEvent_6
    219            }//if ( events & SYS_EVENT_MSG )
    220          
    221            // Discard unknown events
    222            return 0;
   \                     ??SampleApp_ProcessEvent_0:
   \   00005D   7A00         MOV     R2,#0x0
   \   00005F   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_6:
   \   000061   7F04         MOV     R7,#0x4
   \   000063   02....       LJMP    ?BANKED_LEAVE_XDATA
    223          }
    224          /*********************************************************************
    225           * LOCAL FUNCTIONS
    226           */
    227          
    228          /*********************************************************************
    229           * @fn      SampleApp_MessageMSGCB
    230           *
    231           * @brief   Data message processor callback.  This function processes
    232           *          any incoming data - probably from other devices.  So, based
    233           *          on cluster ID, perform the intended action.
    234           *
    235           * @param   none
    236           *
    237           * @return  none
    238          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    239          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    240          { 
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 28
   \   000005   74E4         MOV     A,#-0x1c
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    241            uint8 ShowTemperatureBuf[ ]="temperture=xxC";
   \   00000A   740D         MOV     A,#0xd
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   AC82         MOV     R4,DPL
   \   000011   AD83         MOV     R5,DPH
   \   000013   7583..       MOV     DPH,#(`?<Constant "temperture=xxC">` >> 8) & 0xff
   \   000016   7582..       MOV     DPL,#`?<Constant "temperture=xxC">` & 0xff
   \   000019   740F         MOV     A,#0xf
   \   00001B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    242            uint8 ShowHumiBuf[ ]="humidity=xx%";
   \   00001E   85..82       MOV     DPL,?XSP + 0
   \   000021   85..83       MOV     DPH,?XSP + 1
   \   000024   AC82         MOV     R4,DPL
   \   000026   AD83         MOV     R5,DPH
   \   000028   7583..       MOV     DPH,#(`?<Constant "humidity=xx%">` >> 8) & 0xff
   \   00002B   7582..       MOV     DPL,#`?<Constant "humidity=xx%">` & 0xff
   \   00002E   740D         MOV     A,#0xd
   \   000030   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    243            switch ( pkt->clusterId )
   \   000033   8A82         MOV     DPL,R2
   \   000035   8B83         MOV     DPH,R3
   \   000037   A3           INC     DPTR
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   6401         XRL     A,#0x1
   \   00003E   7002         JNZ     ??SampleApp_MessageMSGCB_0
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \                     ??SampleApp_MessageMSGCB_0:
   \   000042   6003         JZ      $+5
   \   000044   02....       LJMP    ??SampleApp_MessageMSGCB_1 & 0xFFFF
    244            {
    245              case TEMP_HUMI_CLUSTERID://是温湿度数据命令码
    246                  ShowTemperatureBuf[11] = pkt->cmd.Data[0]/10 + 0x30;//HEX 转成ASCII
   \   000047   EA           MOV     A,R2
   \   000048   2421         ADD     A,#0x21
   \   00004A   F8           MOV     R0,A
   \   00004B   EB           MOV     A,R3
   \   00004C   3400         ADDC    A,#0x0
   \   00004E   F9           MOV     R1,A
   \   00004F   E8           MOV     A,R0
   \   000050   FE           MOV     R6,A
   \   000051   E9           MOV     A,R1
   \   000052   FF           MOV     R7,A
   \   000053   75F00A       MOV     B,#0xa
   \   000056   12....       LCALL   ??Subroutine3_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000059   84           DIV     AB
   \   00005A   2430         ADD     A,#0x30
   \   00005C   C0E0         PUSH    A
   \   00005E   7418         MOV     A,#0x18
   \   000060   12....       LCALL   ?XSTACK_DISP0_8
   \   000063   D0E0         POP     A
   \   000065   12....       LCALL   ?Subroutine1 & 0xFFFF
    247                  ShowTemperatureBuf[12] = pkt->cmd.Data[0]%10 + 0x30;//HEX 转成ASCII 
   \                     ??CrossCallReturnLabel_0:
   \   000068   75F00A       MOV     B,#0xa
   \   00006B   84           DIV     AB
   \   00006C   E5F0         MOV     A,B
   \   00006E   2430         ADD     A,#0x30
   \   000070   C0E0         PUSH    A
   \   000072   7419         MOV     A,#0x19
   \   000074   12....       LCALL   ?XSTACK_DISP0_8
   \   000077   D0E0         POP     A
   \   000079   12....       LCALL   ?Subroutine1 & 0xFFFF
    248                  printf("Temperature=%dC\r\n",pkt->cmd.Data[0]);//串口打印
   \                     ??CrossCallReturnLabel_1:
   \   00007C   F5..         MOV     ?V0 + 0,A
   \   00007E   75..00       MOV     ?V0 + 1,#0x0
   \   000081   78..         MOV     R0,#?V0 + 0
   \   000083   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000086   7A..         MOV     R2,#`?<Constant "Temperature=%dC\\r\\n">` & 0xff
   \   000088   7B..         MOV     R3,#(`?<Constant "Temperature=%dC\\r\\n">` >> 8) & 0xff
   \   00008A   12....       LCALL   ??printf?relay
   \   00008D   7402         MOV     A,#0x2
   \   00008F   12....       LCALL   ?DEALLOC_XSTACK8
    249                  OLED_P8x16Str(0,4,ShowTemperatureBuf);//OLED屏显示 
   \   000092                ; Setup parameters for call to function OLED_P8x16Str
   \   000092   740D         MOV     A,#0xd
   \   000094   12....       LCALL   ?XSTACK_DISP0_8
   \   000097   AC82         MOV     R4,DPL
   \   000099   AD83         MOV     R5,DPH
   \   00009B   7A04         MOV     R2,#0x4
   \   00009D   7900         MOV     R1,#0x0
   \   00009F   12....       LCALL   ??OLED_P8x16Str?relay
    250                  
    251                  ShowHumiBuf[9]  = pkt->cmd.Data[1]/10 + 0x30;//HEX 转成ASCII
   \   0000A2   75F00A       MOV     B,#0xa
   \   0000A5   12....       LCALL   ??Subroutine4_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   0000A8   84           DIV     AB
   \   0000A9   2430         ADD     A,#0x30
   \   0000AB   C0E0         PUSH    A
   \   0000AD   7409         MOV     A,#0x9
   \   0000AF   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B2   D0E0         POP     A
   \   0000B4   12....       LCALL   ?Subroutine0 & 0xFFFF
    252                  ShowHumiBuf[10] = pkt->cmd.Data[1]%10 + 0x30;//HEX 转成ASCII 
   \                     ??CrossCallReturnLabel_3:
   \   0000B7   75F00A       MOV     B,#0xa
   \   0000BA   84           DIV     AB
   \   0000BB   E5F0         MOV     A,B
   \   0000BD   2430         ADD     A,#0x30
   \   0000BF   C0E0         PUSH    A
   \   0000C1   740A         MOV     A,#0xa
   \   0000C3   12....       LCALL   ?XSTACK_DISP0_8
   \   0000C6   D0E0         POP     A
   \   0000C8   12....       LCALL   ?Subroutine0 & 0xFFFF
    253                  printf("Humidity=%d%%\r\n",pkt->cmd.Data[1]);//串口打印        
   \                     ??CrossCallReturnLabel_4:
   \   0000CB   F5..         MOV     ?V0 + 0,A
   \   0000CD   78..         MOV     R0,#?V0 + 0
   \   0000CF   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D2   7A..         MOV     R2,#`?<Constant "Humidity=%d%%\\r\\n">` & 0xff
   \   0000D4   7B..         MOV     R3,#(`?<Constant "Humidity=%d%%\\r\\n">` >> 8) & 0xff
   \   0000D6   12....       LCALL   ??printf?relay
   \   0000D9   7402         MOV     A,#0x2
   \   0000DB   12....       LCALL   ?DEALLOC_XSTACK8
    254                  OLED_P8x16Str(0,6,ShowHumiBuf);//OLED屏显示  
   \   0000DE                ; Setup parameters for call to function OLED_P8x16Str
   \   0000DE   85..82       MOV     DPL,?XSP + 0
   \   0000E1   85..83       MOV     DPH,?XSP + 1
   \   0000E4   AC82         MOV     R4,DPL
   \   0000E6   AD83         MOV     R5,DPH
   \   0000E8   7A06         MOV     R2,#0x6
   \   0000EA   7900         MOV     R1,#0x0
   \   0000EC   12....       LCALL   ??OLED_P8x16Str?relay
    255              break;
    256            }
    257          }
   \                     ??SampleApp_MessageMSGCB_1:
   \   0000EF   741C         MOV     A,#0x1c
   \   0000F1   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000F4   7F02         MOV     R7,#0x2
   \   0000F6   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function printf
   \   000001                REQUIRE ??Subroutine3_0
   \   000001                ; // Fall through to label ??Subroutine3_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine3_0:
   \   000000   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function printf
   \   000001                REQUIRE ??Subroutine4_0
   \   000001                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F8           MOV     R0,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8882         MOV     DPL,R0
   \   00000C   22           RET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for SendTemperatureIndicate>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??osalInitTasks?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osalInitTasks

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "coordinator">`:
   \   000000   636F6F72     DB "coordinator"
   \            64696E61
   \            746F7200

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "coord ready!">`:
   \   000000   636F6F72     DB "coord ready!"
   \            64207265
   \            61647921
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "temperture=xxC">`:
   \   000000   74656D70     DB "temperture=xxC"
   \            65727475
   \            72653D78
   \            784300  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "humidity=xx%">`:
   \   000000   68756D69     DB "humidity=xx%"
   \            64697479
   \            3D787825
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temperature=%dC\\r\\n">`:
   \   000000   54656D70     DB "Temperature=%dC\015\012"
   \            65726174
   \            7572653D
   \            2564430D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Humidity=%d%%\\r\\n">`:
   \   000000   48756D69     DB "Humidity=%d%%\015\012"
   \            64697479
   \            3D256425
   \            250D0A00
    258          /*********************************************************************
    259          *********************************************************************/

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     SampleApp_Init                  0      0      9
       -> UartInit                   0      0     18
       -> OLED_Init                  0      0     18
       -> OLED_P8x16Str              0      0     18
       -> afRegister                 0      0     18
     SampleApp_MessageMSGCB          2      0     52
       -> printf                     0      0     80
       -> OLED_P8x16Str              0      0     76
       -> printf                     0      0     80
       -> OLED_P8x16Str              0      0     76
     SampleApp_ProcessEvent          0      0     12
       -> osal_msg_receive           0      0     24
       -> printf                     0      0     24
       -> osal_msg_deallocate        0      0     24
       -> osal_msg_receive           0      0     24
       -> SampleApp_MessageMSGCB     0      0     24
     osalInitTasks                   2      0      0
       -> osal_mem_alloc             4      0      0
       -> osal_memset                4      0      0
       -> macTaskInit                4      0      0
       -> nwk_init                   4      0      0
       -> Hal_Init                   4      0      0
       -> APS_Init                   4      0      0
       -> APSF_Init                  4      0      0
       -> ZDApp_Init                 4      0      0
       -> ZDNwkMgr_Init              4      0      0
       -> SampleApp_Init             4      0      0


   Segment part sizes:

     Function/Label                             Bytes
     --------------                             -----
     tasksArr                                     16
     tasksCnt                                      1
     tasksEvents                                   2
     osalInitTasks                                75
     InClusterList                                 2
     Coordinator_SimpleDesc                       12
     Coordinator_epDesc                            6
     SampleApp_TaskID                              1
     SampleApp_NwkState                            1
     SampleApp_TransID                             1
     Point_To_Point_DstAddr                       12
     Boardcast_DstAddr                            12
     SampleApp_Init                               79
     SendTemperatureIndicate                       1
     SampleApp_ProcessEvent                      102
     SampleApp_MessageMSGCB                      249
     ?Subroutine1                                  1
     ??Subroutine3_0                               5
     ?Subroutine0                                  1
     ??Subroutine4_0                               6
     ?Subroutine2                                 13
     ?<Initializer for SendTemperatureIndicate>    1
     ??osalInitTasks?relay                         6
     ??SampleApp_Init?relay                        6
     ??SampleApp_ProcessEvent?relay                6
     ??SampleApp_MessageMSGCB?relay                6
     ?<Constant "coordinator">                    12
     ?<Constant "coord ready!">                   13
     ?<Constant "temperture=xxC">                 15
     ?<Constant "humidity=xx%">                   13
     ?<Constant "Temperature=%dC\r\n">            18
     ?<Constant "Humidity=%d%%\r\n">              16

 
 531 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
 118 bytes in segment XDATA_ROM_C
  35 bytes in segment XDATA_Z
 
 556 bytes of CODE  memory
 118 bytes of CONST memory
  36 bytes of XDATA memory

Errors: none
Warnings: none
