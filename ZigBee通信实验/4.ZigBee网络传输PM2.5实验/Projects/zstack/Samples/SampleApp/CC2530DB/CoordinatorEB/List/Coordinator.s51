///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        18/Dec/2020  11:22:05 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\Source\Coordinator.c                  /
//    Command line       =  -f C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈  /
//                          µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f /
//                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func        /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f      /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wC /
//                          onfig.cfg (-DSECURE=0 -DZG_SECURE_DYNAMIC=0       /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF11                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\Administrator\Des /
//                          ktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È /
//                          \Projects\zstack\Samples\SampleApp\Source\Coordin /
//                          ator.c -D ZIGBEEPRO -D ZTOOL_P1 -D MT_SYS_FUNC    /
//                          -D xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D         /
//                          NV_RESTORE -lC C:\Users\Administrator\Desktop\eps /
//                          \ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Project /
//                          s\zstack\Samples\SampleApp\CC2530DB\CoordinatorEB /
//                          \List\ -lA C:\Users\Administrator\Desktop\eps\Zig /
//                          BeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zs /
//                          tack\Samples\SampleApp\CC2530DB\CoordinatorEB\Lis /
//                          t\ --diag_suppress Pe001,Pa010 -o                 /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\CoordinatorEB\Obj\ -e        /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈  /
//                          µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\ -I                       /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\SOURCE\ -I                /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I  /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT /
//                          \ -I C:\Users\Administrator\Desktop\eps\ZigBeeÕ®– /
//                          ≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\S /
//                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\HAL\INCLUDE\ -I C:\Users\Administrator\Desktop /
//                          \eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Pro /
//                          jects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ /
//                          ..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I          /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\OS /
//                          AL\MCU\CCSOC\ -I C:\Users\Administrator\Desktop\e /
//                          ps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Proje /
//                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. /
//                          \..\COMPONENTS\OSAL\INCLUDE\ -I                   /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\AF\ -I C:\Users\Administrator\Desktop\eps\Zig /
//                          BeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zs /
//                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\CO /
//                          MPONENTS\STACK\NWK\ -I C:\Users\Administrator\Des /
//                          ktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\STACK\SEC\ -I                /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\SAPI\ -I C:\Users\Administrator\Desktop\eps\Z /
//                          igBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\ /
//                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\STACK\SYS\ -I                          /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\ZDO\ -I C:\Users\Administrator\Desktop\eps\Zi /
//                          gBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\z /
//                          stack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\ZMAC\F8W\ -I C:\Users\Administrator\Des /
//                          ktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\ZMAC\ -I                     /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SE /
//                          RVICES\SADDR\ -I C:\Users\Administrator\Desktop\e /
//                          ps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Proje /
//                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. /
//                          \..\COMPONENTS\SERVICES\SDATA\ -I                 /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MA /
//                          C\INCLUDE\ -I C:\Users\Administrator\Desktop\eps\ /
//                          ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects /
//                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. /
//                          \COMPONENTS\MAC\HIGH_LEVEL\ -I                    /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MA /
//                          C\LOW_LEVEL\srf04\ -I C:\Users\Administrator\Desk /
//                          top\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\ /
//                          Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ /
//                          ..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CH /
//                          IP\ -I C:\Users\Administrator\Desktop\eps\ZigBeeÕ /
//                          ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack /
//                          \Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON /
//                          ENTS\HARDWARE\ -Ohz                               /
//    List file          =  C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È /
//                          \4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\CoordinatorEB\List\Coordinat /
//                          or.s51                                            /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Coordinator

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??SampleApp_Init?relay
        FUNCTION ??SampleApp_Init?relay,0203H
        PUBLIC ??SampleApp_MessageMSGCB?relay
        FUNCTION ??SampleApp_MessageMSGCB?relay,0203H
        PUBLIC ??SampleApp_ProcessEvent?relay
        FUNCTION ??SampleApp_ProcessEvent?relay,0203H
        PUBLIC ??osalInitTasks?relay
        FUNCTION ??osalInitTasks?relay,0203H
        PUBLIC Boardcast_DstAddr
        PUBLIC Coordinator_SimpleDesc
        PUBLIC Coordinator_epDesc
        PUBLIC InClusterList
        PUBLIC Point_To_Point_DstAddr
        PUBLIC SampleApp_Init
        FUNCTION SampleApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC SampleApp_MessageMSGCB
        FUNCTION SampleApp_MessageMSGCB,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC SampleApp_NwkState
        PUBLIC SampleApp_ProcessEvent
        FUNCTION SampleApp_ProcessEvent,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC SampleApp_TaskID
        PUBLIC SampleApp_TransID
        PUBLIC SendTemperatureIndicate
        PUBLIC osalInitTasks
        FUNCTION osalInitTasks,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC tasksArr
        PUBLIC tasksCnt
        PUBLIC tasksEvents
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
osal_mem_alloc      SYMBOL "osal_mem_alloc"
osal_memset         SYMBOL "osal_memset"
macTaskInit         SYMBOL "macTaskInit"
nwk_init            SYMBOL "nwk_init"
Hal_Init            SYMBOL "Hal_Init"
APS_Init            SYMBOL "APS_Init"
APSF_Init           SYMBOL "APSF_Init"
ZDApp_Init          SYMBOL "ZDApp_Init"
ZDNwkMgr_Init       SYMBOL "ZDNwkMgr_Init"
UartInit            SYMBOL "UartInit"
OLED_Init           SYMBOL "OLED_Init"
printf              SYMBOL "printf"
OLED_P8x16Str       SYMBOL "OLED_P8x16Str"
afRegister          SYMBOL "afRegister"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
sprintf             SYMBOL "sprintf"
??APSF_Init?relay   SYMBOL "?relay", APSF_Init
`?<Name APSF_ProcessEvent 18>` SYMBOL "APSF_ProcessEvent"
??APSF_ProcessEvent?relay SYMBOL "?relay", `?<Name APSF_ProcessEvent 18>`
??APS_Init?relay    SYMBOL "?relay", APS_Init
`?<Name APS_event_loop 21>` SYMBOL "APS_event_loop"
??APS_event_loop?relay SYMBOL "?relay", `?<Name APS_event_loop 21>`
??Hal_Init?relay    SYMBOL "?relay", Hal_Init
`?<Name Hal_ProcessEvent 24>` SYMBOL "Hal_ProcessEvent"
??Hal_ProcessEvent?relay SYMBOL "?relay", `?<Name Hal_ProcessEvent 24>`
??OLED_Init?relay   SYMBOL "?relay", OLED_Init
??OLED_P8x16Str?relay SYMBOL "?relay", OLED_P8x16Str
??UartInit?relay    SYMBOL "?relay", UartInit
??ZDApp_Init?relay  SYMBOL "?relay", ZDApp_Init
`?<Name ZDApp_event_loop 30>` SYMBOL "ZDApp_event_loop"
??ZDApp_event_loop?relay SYMBOL "?relay", `?<Name ZDApp_event_loop 30>`
??ZDNwkMgr_Init?relay SYMBOL "?relay", ZDNwkMgr_Init
`?<Name ZDNwkMgr_event_loop 33>` SYMBOL "ZDNwkMgr_event_loop"
??ZDNwkMgr_event_loop?relay SYMBOL "?relay", `?<Name ZDNwkMgr_event_loop 33>`
??afRegister?relay  SYMBOL "?relay", afRegister
`?<Name macEventLoop 36>` SYMBOL "macEventLoop"
??macEventLoop?relay SYMBOL "?relay", `?<Name macEventLoop 36>`
??macTaskInit?relay SYMBOL "?relay", macTaskInit
`?<Name nwk_event_loop 39>` SYMBOL "nwk_event_loop"
??nwk_event_loop?relay SYMBOL "?relay", `?<Name nwk_event_loop 39>`
??nwk_init?relay    SYMBOL "?relay", nwk_init
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
??osal_memset?relay SYMBOL "?relay", osal_memset
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??printf?relay      SYMBOL "?relay", printf
??sprintf?relay     SYMBOL "?relay", sprintf
SampleApp_Init      SYMBOL "SampleApp_Init"
??SampleApp_Init?relay SYMBOL "?relay", SampleApp_Init
SampleApp_MessageMSGCB SYMBOL "SampleApp_MessageMSGCB"
??SampleApp_MessageMSGCB?relay SYMBOL "?relay", SampleApp_MessageMSGCB
SampleApp_ProcessEvent SYMBOL "SampleApp_ProcessEvent"
??SampleApp_ProcessEvent?relay SYMBOL "?relay", SampleApp_ProcessEvent
osalInitTasks       SYMBOL "osalInitTasks"
??osalInitTasks?relay SYMBOL "?relay", osalInitTasks

        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN macTaskInit
        FUNCTION macTaskInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_init
        FUNCTION nwk_init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_Init
        FUNCTION Hal_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_Init
        FUNCTION APS_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSF_Init
        FUNCTION APSF_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_Init
        FUNCTION ZDApp_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDNwkMgr_Init
        FUNCTION ZDNwkMgr_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN UartInit
        FUNCTION UartInit,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN OLED_Init
        FUNCTION OLED_Init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN OLED_P8x16Str
        FUNCTION OLED_P8x16Str,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??APSF_Init?relay
        FUNCTION ??APSF_Init?relay,00H
        EXTERN ??APSF_ProcessEvent?relay
        FUNCTION ??APSF_ProcessEvent?relay,00H
        EXTERN ??APS_Init?relay
        FUNCTION ??APS_Init?relay,00H
        EXTERN ??APS_event_loop?relay
        FUNCTION ??APS_event_loop?relay,00H
        EXTERN ??Hal_Init?relay
        FUNCTION ??Hal_Init?relay,00H
        EXTERN ??Hal_ProcessEvent?relay
        FUNCTION ??Hal_ProcessEvent?relay,00H
        EXTERN ??OLED_Init?relay
        FUNCTION ??OLED_Init?relay,00H
        EXTERN ??OLED_P8x16Str?relay
        FUNCTION ??OLED_P8x16Str?relay,00H
        EXTERN ??UartInit?relay
        FUNCTION ??UartInit?relay,00H
        EXTERN ??ZDApp_Init?relay
        FUNCTION ??ZDApp_Init?relay,00H
        EXTERN ??ZDApp_event_loop?relay
        FUNCTION ??ZDApp_event_loop?relay,00H
        EXTERN ??ZDNwkMgr_Init?relay
        FUNCTION ??ZDNwkMgr_Init?relay,00H
        EXTERN ??ZDNwkMgr_event_loop?relay
        FUNCTION ??ZDNwkMgr_event_loop?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??macEventLoop?relay
        FUNCTION ??macEventLoop?relay,00H
        EXTERN ??macTaskInit?relay
        FUNCTION ??macTaskInit?relay,00H
        EXTERN ??nwk_event_loop?relay
        FUNCTION ??nwk_event_loop?relay,00H
        EXTERN ??nwk_init?relay
        FUNCTION ??nwk_init?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??printf?relay
        FUNCTION ??printf?relay,00H
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H

// C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\SampleApp\Source\Coordinator.c
//    1 #include "ZComDef.h"
//    2 #include "hal_drivers.h"
//    3 #include "OSAL.h"
//    4 #include "OSAL_Tasks.h"
//    5 #include "nwk.h"
//    6 #include "APS.h"
//    7 #include "ZDApp.h"
//    8 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//    9   #include "ZDNwkMgr.h"
//   10 #endif
//   11 #if defined ( ZIGBEE_FRAGMENTATION )
//   12   #include "aps_frag.h"
//   13 #endif
//   14 
//   15 #include "SampleApp.h"
//   16 #include "WiFiGate.h"
//   17 #include "OSAL.h"
//   18 #include "ZGlobals.h"
//   19 #include "AF.h"
//   20 #include "aps_groups.h"
//   21 #include "ZDApp.h"
//   22 
//   23 #include "SampleApp.h"
//   24 #include "SampleAppHw.h"
//   25 
//   26 #include "OnBoard.h"
//   27 
//   28 /* HAL */
//   29 #include "hal_lcd.h"
//   30 #include "hal_led.h"
//   31 #include "hal_key.h"
//   32 #include "string.h"
//   33 
//   34 #include "MT_UART.h"
//   35 #include "MT_APP.h"
//   36 #include "MT.h"
//   37 #include "OLED.h"
//   38 #include "SHT20.h"
//   39 #include "bottom_led.h"
//   40 #include "stdio.h"
//   41 #include "UART2RS485.h"
//   42 #include "WiFiGate.h"
//   43 #include "_bind.h"
//   44 #include "led_mode.h"
//   45 
//   46 // The order in this table must be identical to the task initialization calls below in osalInitTask.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   47 const pTaskEventHandlerFn tasksArr[] = {
tasksArr:
        DATA16
        DW ??macEventLoop?relay
        DW ??nwk_event_loop?relay
        DW ??Hal_ProcessEvent?relay
        DW ??APS_event_loop?relay
        DW ??APSF_ProcessEvent?relay
        DW ??ZDApp_event_loop?relay
        DW ??ZDNwkMgr_event_loop?relay
        DW ??SampleApp_ProcessEvent?relay
//   48   macEventLoop,
//   49   nwk_event_loop,
//   50   Hal_ProcessEvent,
//   51 #if defined( MT_TASK )
//   52   MT_ProcessEvent,
//   53 #endif
//   54   APS_event_loop,
//   55 #if defined ( ZIGBEE_FRAGMENTATION )
//   56   APSF_ProcessEvent,
//   57 #endif
//   58   ZDApp_event_loop,
//   59 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//   60   ZDNwkMgr_event_loop,
//   61 #endif
//   62   SampleApp_ProcessEvent,  
//   63 };

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   64 const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
tasksCnt:
        DB 8

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   65 uint16 *tasksEvents;
tasksEvents:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   66 
//   67 /*********************************************************************
//   68  * @fn      osalInitTasks
//   69  *
//   70  * @brief   This function invokes the initialization function for each task.
//   71  *
//   72  * @param   void
//   73  *
//   74  * @return  none
//   75  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   76 void osalInitTasks( void )
osalInitTasks:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function osalInitTasks
        CODE
//   77 {
        FUNCALL osalInitTasks, osal_mem_alloc
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, osal_memset
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, macTaskInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, nwk_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, Hal_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, APS_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, APSF_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, ZDApp_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, ZDNwkMgr_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, SampleApp_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   78   uint8 taskID = 0;
//   79 
//   80   tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x10
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#tasksEvents
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//   81   osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x10
        MOV     R5,#0x0
        MOV     R1,#0x0
        LCALL   ??osal_memset?relay
//   82 
//   83   macTaskInit( taskID++ );
        ; Setup parameters for call to function macTaskInit
        MOV     R1,#0x0
        LCALL   ??macTaskInit?relay
//   84   nwk_init( taskID++ );
        ; Setup parameters for call to function nwk_init
        MOV     R1,#0x1
        LCALL   ??nwk_init?relay
//   85   Hal_Init( taskID++ );
        ; Setup parameters for call to function Hal_Init
        MOV     R1,#0x2
        LCALL   ??Hal_Init?relay
//   86 #if defined( MT_TASK )
//   87   MT_TaskInit( taskID++ );
//   88 #endif
//   89   APS_Init( taskID++ );
        ; Setup parameters for call to function APS_Init
        MOV     R1,#0x3
        LCALL   ??APS_Init?relay
//   90 #if defined ( ZIGBEE_FRAGMENTATION )
//   91   APSF_Init( taskID++ );
        ; Setup parameters for call to function APSF_Init
        MOV     R1,#0x4
        LCALL   ??APSF_Init?relay
//   92 #endif
//   93   ZDApp_Init( taskID++ );
        ; Setup parameters for call to function ZDApp_Init
        MOV     R1,#0x5
        LCALL   ??ZDApp_Init?relay
//   94 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//   95   ZDNwkMgr_Init( taskID++ );
        ; Setup parameters for call to function ZDNwkMgr_Init
        MOV     R1,#0x6
        LCALL   ??ZDNwkMgr_Init?relay
//   96 #endif
//   97   SampleApp_Init( taskID++ ); 
        ; Setup parameters for call to function SampleApp_Init
        MOV     R1,#0x7
        LCALL   ??SampleApp_Init?relay
//   98 }
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//   99 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  100 const cId_t InClusterList[1] =
InClusterList:
        DW 1
//  101 {
//  102   PM2P5_CLUSTERID
//  103 };
//  104 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  105 const SimpleDescriptionFormat_t Coordinator_SimpleDesc =
Coordinator_SimpleDesc:
        DB 20
        DATA16
        DW 3848
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW InClusterList
        DATA8
        DB 0
        DATA16
        DW 0H
//  106 {
//  107   SAMPLEAPP_ENDPOINT,                 //  int Endpoint;
//  108   SAMPLEAPP_PROFID,                   //  uint16 AppProfId[2];
//  109   SAMPLEAPP_DEVICEID,                 //  uint16 AppDeviceId[2];
//  110   SAMPLEAPP_DEVICE_VERSION,           //  int   AppDevVer:4;
//  111   SAMPLEAPP_FLAGS,                    //  int   AppFlags:4;
//  112   1,                                  //  uint8  AppNumInClusters;
//  113   (cId_t *)InClusterList,             //  uint8 *pAppInClusterList;
//  114   0,                                  //  uint8  AppNumOutClusters;
//  115   (cId_t *)NULL                       //  uint8 *pAppOutClusterList;
//  116 };
//  117 // This is the Endpoint/Interface description.  It is defined here, but
//  118 // filled-in in SampleApp_Init().  Another way to go would be to fill
//  119 // in the structure here and make it a "const" (in code space).  The
//  120 // way it's defined in this sample app it is define in RAM.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  121 endPointDesc_t Coordinator_epDesc;
Coordinator_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//  122 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  123 uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
SampleApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  124                           // This variable will be received when
//  125                           // SampleApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  126 devStates_t SampleApp_NwkState;
SampleApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  127 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  128 uint8 SampleApp_TransID;  // This is the unique message ID (counter)
SampleApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  129 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  130 afAddrType_t Point_To_Point_DstAddr;//µ„∂‘µ„Õ®–≈∂®“Â
Point_To_Point_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//  131 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  132 afAddrType_t Boardcast_DstAddr;//µ„∂‘µ„Õ®–≈∂®“Â
Boardcast_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//  133 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );//Ω” ’µΩŒﬁœﬂœ˚œ¢ªÿµ˜∫Ø ˝
//  134 /*********************************************************************
//  135  * @fn      SampleApp_Init
//  136  *
//  137  * @brief   Initialization function for the Generic App Task.
//  138  *          This is called during initialization and should contain
//  139  *          any application specific initialization (ie. hardware
//  140  *          initialization/setup, table initialization, power up
//  141  *          notificaiton ... ).
//  142  *
//  143  * @param   task_id - the ID assigned by OSAL.  This ID should be
//  144  *                    used to send messages and set timers.
//  145  *
//  146  * @return  none
//  147  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  148 void SampleApp_Init( uint8 task_id )
SampleApp_Init:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function SampleApp_Init
        CODE
//  149 {
        FUNCALL SampleApp_Init, UartInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, OLED_Init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, OLED_P8x16Str
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//  150   SampleApp_TaskID = task_id;
        MOV     DPTR,#SampleApp_TaskID
        MOVX    @DPTR,A
//  151   SampleApp_NwkState = DEV_INIT;
        MOV     DPTR,#SampleApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//  152   SampleApp_TransID = 0;  
        MOV     DPTR,#SampleApp_TransID
        CLR     A
        MOVX    @DPTR,A
//  153 
//  154 	UartInit(HAL_UART_PORT_1,HAL_UART_BR_115200);//µ˜ ‘¥Æø⁄≥ı ºªØ
        ; Setup parameters for call to function UartInit
        MOV     R2,#0x4
        MOV     R1,#0x1
        LCALL   ??UartInit?relay
//  155   OLED_Init();                    //≥ı ºªØOLED 
        ; Setup parameters for call to function OLED_Init
        LCALL   ??OLED_Init?relay
//  156   printf("i am coordinator\r\n"); //¥Æø⁄¥Ú”°
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "i am coordinator\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "i am coordinator\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  157   OLED_P8x16Str(0,0,"coordinator");
        ; Setup parameters for call to function OLED_P8x16Str
        MOV     R4,#`?<Constant "coordinator">` & 0xff
        MOV     R5,#(`?<Constant "coordinator">` >> 8) & 0xff
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   ??OLED_P8x16Str?relay
//  158   
//  159   // µ„∂‘µ„Õ®—∂∂®“Â
//  160   Point_To_Point_DstAddr.addrMode       = (afAddrMode_t)Addr16Bit; //µ„≤•
        MOV     DPTR,#Point_To_Point_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  161   Point_To_Point_DstAddr.endPoint       = SAMPLEAPP_ENDPOINT;      
        INC     DPTR
        MOV     A,#0x14
        MOVX    @DPTR,A
//  162   Point_To_Point_DstAddr.addr.shortAddr = 0;
        MOV     DPTR,#Point_To_Point_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  163   
//  164   // ÃÓ–¥∂Àµ„
//  165   Coordinator_epDesc.endPoint   = SAMPLEAPP_ENDPOINT;
        MOV     DPTR,#Coordinator_epDesc
        MOV     A,#0x14
        MOVX    @DPTR,A
//  166   Coordinator_epDesc.task_id    = &SampleApp_TaskID;
        INC     DPTR
        MOV     A,#SampleApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//  167   Coordinator_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&Coordinator_SimpleDesc;
        INC     DPTR
        MOV     A,#Coordinator_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(Coordinator_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//  168   Coordinator_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  169   // ◊¢≤·∂Àµ„
//  170   afRegister( &Coordinator_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#Coordinator_epDesc & 0xff
        MOV     R3,#(Coordinator_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  171 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  172 
//  173 /*********************************************************************
//  174  * @fn      SampleApp_ProcessEvent
//  175  *
//  176  * @brief   Generic Application Task event processor.  This function
//  177  *          is called to process all events for the task.  Events
//  178  *          include timers, messages and any other user defined events.
//  179  *
//  180  * @param   task_id  - The OSAL assigned task ID.
//  181  * @param   events - events to process.  This is a bit map and can
//  182  *                   contain more than one event.
//  183  *
//  184  * @return  none
//  185  */

        RSEG XDATA_I:XDATA:NOROOT(0)
//  186 uint8 SendTemperatureIndicate = 1;
SendTemperatureIndicate:
        DATA8
        DS 1
        REQUIRE `?<Initializer for SendTemperatureIndicate>`
        REQUIRE __INIT_XDATA_I

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  187 uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
SampleApp_ProcessEvent:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function SampleApp_ProcessEvent
        CODE
//  188 {
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SampleApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  189   afIncomingMSGPacket_t *MSGpkt;
//  190   (void)task_id;  // Intentionally unreferenced parameter
//  191 
//  192   if ( events & SYS_EVENT_MSG )
        MOV     A,R3
        ANL     A,#0x80
        JZ      ??SampleApp_ProcessEvent_0
//  193   {
//  194     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??SampleApp_ProcessEvent_1
//  195     while ( MSGpkt )
//  196     {
//  197       switch ( MSGpkt->hdr.event )
//  198       {        
//  199         // Received when a messages is received (OTA) for this endpoint
//  200         case AF_INCOMING_MSG_CMD:
//  201           SampleApp_MessageMSGCB( MSGpkt );
//  202           break;
//  203 
//  204         // Received whenever the device changes state in the network
//  205         case ZDO_STATE_CHANGE:
//  206           SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??SampleApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#SampleApp_NwkState
        MOVX    @DPTR,A
//  207           if(SampleApp_NwkState == DEV_ZB_COORD)
        XRL     A,#0x9
        JNZ     ??SampleApp_ProcessEvent_3
//  208           {
//  209             printf("coord ready!");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "coord ready!">` & 0xff
        MOV     R3,#(`?<Constant "coord ready!">` >> 8) & 0xff
        LCALL   ??printf?relay
//  210           }
//  211           break;
//  212 
//  213         default:
//  214           break;
//  215       }
//  216 
//  217       // Release the memory
//  218       osal_msg_deallocate( (uint8 *)MSGpkt );
??SampleApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_msg_deallocate?relay
//  219 
//  220       // Next - if one is available
//  221       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??SampleApp_ProcessEvent_1:
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JZ      ??SampleApp_ProcessEvent_4
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#0x2f
        JZ      ??SampleApp_ProcessEvent_2
        ADD     A,#-0x49
        JNZ     ??SampleApp_ProcessEvent_3
        ; Setup parameters for call to function SampleApp_MessageMSGCB
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??SampleApp_MessageMSGCB?relay
        SJMP    ??SampleApp_ProcessEvent_3
//  222     }
//  223 
//  224     // return unprocessed events
//  225     return (events ^ SYS_EVENT_MSG);
??SampleApp_ProcessEvent_4:
        MOV     R2,?V0 + 0
        MOV     A,?V0 + 1
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??SampleApp_ProcessEvent_5
//  226   }//if ( events & SYS_EVENT_MSG )
//  227 
//  228   // Discard unknown events
//  229   return 0;
??SampleApp_ProcessEvent_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??SampleApp_ProcessEvent_5:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  230 }
//  231 /*********************************************************************
//  232  * LOCAL FUNCTIONS
//  233  */
//  234 
//  235 /*********************************************************************
//  236  * @fn      SampleApp_MessageMSGCB
//  237  *
//  238  * @brief   Data message processor callback.  This function processes
//  239  *          any incoming data - probably from other devices.  So, based
//  240  *          on cluster ID, perform the intended action.
//  241  *
//  242  * @param   none
//  243  *
//  244  * @return  none
//  245 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  246 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
SampleApp_MessageMSGCB:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function SampleApp_MessageMSGCB
        CODE
//  247 { 
        FUNCALL SampleApp_MessageMSGCB, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, OLED_P8x16Str
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 16
        MOV     A,#-0x10
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 26)
//  248   uint8 DispBuf[ ]="PM2.5=XXX ug/m3";
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant "PM2.5=XXX ug/m3">` >> 8) & 0xff
        MOV     DPL,#`?<Constant "PM2.5=XXX ug/m3">` & 0xff
        MOV     A,#0x10
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  249   switch ( pkt->clusterId )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??SampleApp_MessageMSGCB_0
        INC     DPTR
        MOVX    A,@DPTR
??SampleApp_MessageMSGCB_0:
        JNZ     ??SampleApp_MessageMSGCB_1
//  250   {
//  251     case PM2P5_CLUSTERID:// «≥¨…˘≤® ˝æ›
//  252 			sprintf((void*)DispBuf,(char*)"PM2.5:%03d ug/m3",pkt->cmd.Data[0]);//◊™ªª≥…◊÷∑˚∆˜
        ; Setup parameters for call to function sprintf
        MOV     A,R2
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     R4,#`?<Constant "PM2.5:%03d ug/m3">` & 0xff
        MOV     R5,#(`?<Constant "PM2.5:%03d ug/m3">` >> 8) & 0xff
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 26)
//  253 				printf("=%s\r\n",DispBuf);            //¥Æø⁄¥Ú”°
        ; Setup parameters for call to function printf
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     R2,#`?<Constant "=%s\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "=%s\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 26)
//  254         OLED_P8x16Str(0,4,DispBuf);//OLED∆¡œ‘ æ 
        ; Setup parameters for call to function OLED_P8x16Str
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   ??OLED_P8x16Str?relay
//  255         
//  256     break;
//  257   }
//  258 }
??SampleApp_MessageMSGCB_1:
        MOV     A,#0x10
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for SendTemperatureIndicate>`:
        DATA8
        DB 1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osalInitTasks?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osalInitTasks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_MessageMSGCB

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "i am coordinator\\r\\n">`:
        DB "i am coordinator\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "coordinator">`:
        DB "coordinator"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "coord ready!">`:
        DB "coord ready!"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "PM2.5=XXX ug/m3">`:
        DB "PM2.5=XXX ug/m3"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "PM2.5:%03d ug/m3">`:
        DB "PM2.5:%03d ug/m3"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "=%s\\r\\n">`:
        DB "=%s\015\012"

        END
//  259 /*********************************************************************
//  260 *********************************************************************/
// 
// 432 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//   1 byte  in segment XDATA_I
//   1 byte  in segment XDATA_ID
// 114 bytes in segment XDATA_ROM_C
//  35 bytes in segment XDATA_Z
// 
// 457 bytes of CODE  memory
// 114 bytes of CONST memory
//  36 bytes of XDATA memory
//
//Errors: none
//Warnings: none
