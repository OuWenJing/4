###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         18/Dec/2020  11:23:21 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\Source\EndDevice.c                       #
#    Command line       =  -f C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ #
#                          —È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wE #
#                          ndev.cfg (-DCPU32MHZ -DROOT=__near_func            #
#                          -DBLINK_LEDS) -f C:\Users\Administrator\Desktop\ep #
#                          s\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools #
#                          \CC2530DB\f8wConfig.cfg (-DSECURE=0                #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF11                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\Source\EndDevice.c -D NWK_AUTO_POLL -D   #
#                          ZTOOL_P1 -D MT_SYS_FUNC -D MT_ZDO_FUNC -D          #
#                          LCD_SUPPORTED=DEBUG -lC C:\Users\Administrator\Des #
#                          ktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\ #
#                          Projects\zstack\Samples\SampleApp\CC2530DB\EndDevi #
#                          ceEB\List\ -lA C:\Users\Administrator\Desktop\eps\ #
#                          ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List #
#                          \ --diag_suppress Pe001,Pa010 -o                   #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\EndDeviceEB\Obj\ -e             #
#                          --no_unroll --no_inline --no_tbaa --debug          #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I C:\Users\Administrator\Des #
#                          ktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\ #
#                          Projects\zstack\Samples\SampleApp\CC2530DB\ -I     #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\SOURCE\ -I                   #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I     #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\   #
#                          -I C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ #
#                          —È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HA #
#                          L\INCLUDE\ -I C:\Users\Administrator\Desktop\eps\Z #
#                          igBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\z #
#                          stack\Samples\SampleApp\CC2530DB\..\..\..\..\..\CO #
#                          MPONENTS\HAL\TARGET\CC2530EB\ -I                   #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\ #
#                          MCU\CCSOC\ -I C:\Users\Administrator\Desktop\eps\Z #
#                          igBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\z #
#                          stack\Samples\SampleApp\CC2530DB\..\..\..\..\..\CO #
#                          MPONENTS\OSAL\INCLUDE\ -I                          #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK #
#                          \AF\ -I C:\Users\Administrator\Desktop\eps\ZigBeeÕ #
#                          ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\NWK\ -I C:\Users\Administrator\Desktop\ep #
#                          s\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\SEC\ -I                          #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK #
#                          \SAPI\ -I C:\Users\Administrator\Desktop\eps\ZigBe #
#                          eÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\STACK\SYS\ -I C:\Users\Administrator\Desktop\ #
#                          eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Proje #
#                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\ #
#                          ..\COMPONENTS\STACK\ZDO\ -I                        #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\ #
#                          F8W\ -I C:\Users\Administrator\Desktop\eps\ZigBeeÕ #
#                          ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\ZMAC\ -I C:\Users\Administrator\Desktop\eps\Zig #
#                          BeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\SERVICES\SADDR\ -I                          #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVI #
#                          CES\SDATA\ -I C:\Users\Administrator\Desktop\eps\Z #
#                          igBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\z #
#                          stack\Samples\SampleApp\CC2530DB\..\..\..\..\..\CO #
#                          MPONENTS\MAC\INCLUDE\ -I                           #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\H #
#                          IGH_LEVEL\ -I C:\Users\Administrator\Desktop\eps\Z #
#                          igBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\z #
#                          stack\Samples\SampleApp\CC2530DB\..\..\..\..\..\CO #
#                          MPONENTS\MAC\LOW_LEVEL\srf04\ -I                   #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\L #
#                          OW_LEVEL\srf04\SINGLE_CHIP\ -I                     #
#                          C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HARDW #
#                          ARE\ -Om                                           #
#    List file          =  C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\EndDeviceEB\List\EndDevice.lst  #
#    Object file        =  C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\ #
#                          4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\ #
#                          SampleApp\CC2530DB\EndDeviceEB\Obj\EndDevice.r51   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\eps\ZigBeeÕ®–≈ µ—È\4.ZigBeeÕ¯¬Á¥´ ‰PM2.5 µ—È\Projects\zstack\Samples\SampleApp\Source\EndDevice.c
      1          #include "ZComDef.h"
      2          #include "hal_drivers.h"
      3          #include "OSAL.h"
      4          #include "OSAL_Tasks.h"
      5          #include "nwk.h"
      6          #include "APS.h"
      7          #include "ZDApp.h"
      8          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
      9            #include "ZDNwkMgr.h"
     10          #endif
     11          #if defined ( ZIGBEE_FRAGMENTATION )
     12            #include "aps_frag.h"
     13          #endif
     14          
     15          #include "SampleApp.h"
     16          #include "WiFiGate.h"
     17          #include "OSAL.h"
     18          #include "ZGlobals.h"
     19          #include "AF.h"
     20          #include "aps_groups.h"
     21          #include "ZDApp.h"
     22          #include "SampleApp.h"
     23          #include "SampleAppHw.h"
     24          #include "OnBoard.h"
     25          
     26          /* HAL */
     27          #include "hal_lcd.h"
     28          #include "hal_led.h"
     29          #include "hal_key.h"
     30          #include "string.h"
     31          
     32          #include "MT_UART.h"
     33          #include "MT_APP.h"
     34          #include "MT.h"
     35          #include "OLED.h"
     36          #include "SHT20.h"
     37          #include "bottom_led.h"
     38          #include "stdio.h"
     39          #include "UART2RS485.h"
     40          #include "WiFiGate.h"
     41          #include "_bind.h"
     42          #include "Fan.h"
     43          #include "led_mode.h"
     44          
     45          #define SEND_COOR_MSG_EVT  0x0001
     46          void SendPM2P5ToCoordinator(uint8 val);
     47          // The order in this table must be identical to the task initialization calls below in osalInitTask.

   \                                 In  segment XDATA_ROM_C, align 1
     48          const pTaskEventHandlerFn tasksArr[] = {
   \                     tasksArr:
   \   000000   ....         DW ??macEventLoop?relay
   \   000002   ....         DW ??nwk_event_loop?relay
   \   000004   ....         DW ??Hal_ProcessEvent?relay
   \   000006   ....         DW ??APS_event_loop?relay
   \   000008   ....         DW ??ZDApp_event_loop?relay
   \   00000A   ....         DW ??SampleApp_ProcessEvent?relay
     49            macEventLoop,
     50            nwk_event_loop,
     51            Hal_ProcessEvent,
     52          #if defined( MT_TASK )
     53            MT_ProcessEvent,
     54          #endif
     55            APS_event_loop,
     56          #if defined ( ZIGBEE_FRAGMENTATION )
     57            APSF_ProcessEvent,
     58          #endif
     59            ZDApp_event_loop,
     60          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     61            ZDNwkMgr_event_loop,
     62          #endif
     63            SampleApp_ProcessEvent, 
     64          };

   \                                 In  segment XDATA_ROM_C, align 1
     65          const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
   \                     tasksCnt:
   \   000000   06           DB 6

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     66          uint16 *tasksEvents;
   \                     tasksEvents:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     67          /*********************************************************************
     68           * @fn      osalInitTasks
     69           *
     70           * @brief   This function invokes the initialization function for each task.
     71           *
     72           * @param   void
     73           *
     74           * @return  none
     75           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     76          void osalInitTasks( void )
   \                     osalInitTasks:
     77          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     78            uint8 taskID = 0;
     79          
     80            tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
   \   000004                ; Setup parameters for call to function osal_mem_alloc
   \   000004   7A0C         MOV     R2,#0xc
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   ??osal_mem_alloc?relay
   \   00000B   90....       MOV     DPTR,#tasksEvents
   \   00000E   EA           MOV     A,R2
   \   00000F   F0           MOVX    @DPTR,A
   \   000010   A3           INC     DPTR
   \   000011   EB           MOV     A,R3
   \   000012   F0           MOVX    @DPTR,A
     81            osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
   \   000013                ; Setup parameters for call to function osal_memset
   \   000013   7C0C         MOV     R4,#0xc
   \   000015   7D00         MOV     R5,#0x0
   \   000017   7900         MOV     R1,#0x0
   \   000019   90....       MOV     DPTR,#tasksEvents
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   FA           MOV     R2,A
   \   00001E   A3           INC     DPTR
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   FB           MOV     R3,A
   \   000021   12....       LCALL   ??osal_memset?relay
     82          
     83            macTaskInit( taskID++ );
   \   000024                ; Setup parameters for call to function macTaskInit
   \   000024   7900         MOV     R1,#0x0
   \   000026   12....       LCALL   ??macTaskInit?relay
     84            nwk_init( taskID++ );
   \   000029                ; Setup parameters for call to function nwk_init
   \   000029   7901         MOV     R1,#0x1
   \   00002B   12....       LCALL   ??nwk_init?relay
     85            Hal_Init( taskID++ );
   \   00002E                ; Setup parameters for call to function Hal_Init
   \   00002E   7902         MOV     R1,#0x2
   \   000030   12....       LCALL   ??Hal_Init?relay
     86          #if defined( MT_TASK )
     87            MT_TaskInit( taskID++ );
     88          #endif
     89            APS_Init( taskID++ );
   \   000033                ; Setup parameters for call to function APS_Init
   \   000033   7903         MOV     R1,#0x3
   \   000035   12....       LCALL   ??APS_Init?relay
     90          #if defined ( ZIGBEE_FRAGMENTATION )
     91            APSF_Init( taskID++ );
     92          #endif
     93            ZDApp_Init( taskID++ );
   \   000038                ; Setup parameters for call to function ZDApp_Init
   \   000038   7904         MOV     R1,#0x4
   \   00003A   12....       LCALL   ??ZDApp_Init?relay
     94          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     95            ZDNwkMgr_Init( taskID++ );
     96          #endif
     97            SampleApp_Init( taskID++ ); 
   \   00003D                ; Setup parameters for call to function SampleApp_Init
   \   00003D   7905         MOV     R1,#0x5
   \   00003F   12....       LCALL   ??SampleApp_Init?relay
     98          }
   \   000042   D083         POP     DPH
   \   000044   D082         POP     DPL
   \   000046   02....       LJMP    ?BRET
     99          

   \                                 In  segment XDATA_ROM_C, align 1
    100          const cId_t OutClusterList[1] =
   \                     OutClusterList:
   \   000000   0100         DW 1
    101          {
    102            PM2P5_CLUSTERID
    103          };
    104          

   \                                 In  segment XDATA_ROM_C, align 1
    105          const SimpleDescriptionFormat_t EndDevice_SimpleDesc = 
   \                     EndDevice_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   00           DB 0
   \   000007   0000         DW 0H
   \   000009   01           DB 1
   \   00000A   ....         DW OutClusterList
    106          {
    107            SAMPLEAPP_ENDPOINT,                 //  int Endpoint;
    108            SAMPLEAPP_PROFID,                   //  uint16 AppProfId[2];
    109            SAMPLEAPP_DEVICEID,                 //  uint16 AppDeviceId[2];
    110            SAMPLEAPP_DEVICE_VERSION,           //  int   AppDevVer:4;
    111            SAMPLEAPP_FLAGS,                    //  int   AppFlags:4;
    112            0,                                  //  uint8  AppNumInClusters;
    113            (cId_t *)NULL,                      //  uint8 *pAppInClusterList;
    114            1,                                  //  uint8  AppNumOutClusters;
    115            (cId_t *)OutClusterList             //  uint8 *pAppOutClusterList;
    116          };
    117          // This is the Endpoint/Interface description.  It is defined here, but
    118          // filled-in in SampleApp_Init().  Another way to go would be to fill
    119          // in the structure here and make it a "const" (in code space).  The
    120          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    121          endPointDesc_t EndDevice_epDesc;
   \                     EndDevice_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    122          /*********************************************************************
    123           * EXTERNAL VARIABLES
    124           */
    125          
    126          /*********************************************************************
    127           * EXTERNAL FUNCTIONS
    128           */
    129          
    130          /*********************************************************************
    131           * LOCAL VARIABLES
    132           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    133          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    134                                    // This variable will be received when
    135                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    136          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    137          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    138          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    139          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    140          afAddrType_t Point_To_Point_DstAddr;//µ„∂‘µ„Õ®–≈∂®“Â
   \                     Point_To_Point_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    141          afAddrType_t Boardcast_DstAddr;//µ„∂‘µ„Õ®–≈∂®“Â
   \                     Boardcast_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    142          /*********************************************************************
    143           * LOCAL FUNCTIONS
    144           */
    145          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    146          /*********************************************************************
    147           * @fn      SampleApp_Init
    148           *
    149           * @brief   Initialization function for the Generic App Task.
    150           *          This is called during initialization and should contain
    151           *          any application specific initialization (ie. hardware
    152           *          initialization/setup, table initialization, power up
    153           *          notificaiton ... ).
    154           *
    155           * @param   task_id - the ID assigned by OSAL.  This ID should be
    156           *                    used to send messages and set timers.
    157           *
    158           * @return  none
    159           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    160          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    161          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    162            SampleApp_TaskID   = task_id;
   \   000006   90....       MOV     DPTR,#SampleApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
    163            SampleApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000D   7401         MOV     A,#0x1
   \   00000F   F0           MOVX    @DPTR,A
    164            SampleApp_TransID  = 0; 
   \   000010   90....       MOV     DPTR,#SampleApp_TransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    165          	
    166          	UartInit(HAL_UART_PORT_1,HAL_UART_BR_115200);//µ˜ ‘¥Æø⁄≥ı ºªØ
   \   000015                ; Setup parameters for call to function UartInit
   \   000015   7A04         MOV     R2,#0x4
   \   000017   7901         MOV     R1,#0x1
   \   000019   12....       LCALL   ??UartInit?relay
    167          	
    168          	PM2p5_Init();//≥ı ºªØPM2.5ƒ£øÈ
   \   00001C                ; Setup parameters for call to function PM2p5_Init
   \   00001C   12....       LCALL   ??PM2p5_Init?relay
    169          	
    170            printf("i am end device\r\n");//¥Æø⁄¥Ú”°
   \   00001F                ; Setup parameters for call to function printf
   \   00001F   7A..         MOV     R2,#`?<Constant "i am end device\\r\\n">` & 0xff
   \   000021   7B..         MOV     R3,#(`?<Constant "i am end device\\r\\n">` >> 8) & 0xff
   \   000023   12....       LCALL   ??printf?relay
    171            // µ„∂‘µ„Õ®—∂∂®“Â
    172            Point_To_Point_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µ„≤•
   \   000026   90....       MOV     DPTR,#Point_To_Point_DstAddr + 8
   \   000029   7402         MOV     A,#0x2
   \   00002B   F0           MOVX    @DPTR,A
    173            Point_To_Point_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;     //ƒø±Í∂Àµ„∫≈
   \   00002C   A3           INC     DPTR
   \   00002D   7414         MOV     A,#0x14
   \   00002F   F0           MOVX    @DPTR,A
    174          	/*∑¢∏¯–≠µ˜∆˜,–≠µ˜∆˜µÿ÷∑πÃ∂®Œ™0x0000*/
    175            Point_To_Point_DstAddr.addr.shortAddr = 0x0000;
   \   000030   90....       MOV     DPTR,#Point_To_Point_DstAddr
   \   000033   E4           CLR     A
   \   000034   F0           MOVX    @DPTR,A
   \   000035   A3           INC     DPTR
   \   000036   F0           MOVX    @DPTR,A
    176            // ÃÓ–¥∂Àµ„
    177            EndDevice_epDesc.endPoint   = SAMPLEAPP_ENDPOINT;
   \   000037   90....       MOV     DPTR,#EndDevice_epDesc
   \   00003A   7414         MOV     A,#0x14
   \   00003C   F0           MOVX    @DPTR,A
    178            EndDevice_epDesc.task_id    = &SampleApp_TaskID;
   \   00003D   A3           INC     DPTR
   \   00003E   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000040   F0           MOVX    @DPTR,A
   \   000041   A3           INC     DPTR
   \   000042   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000044   F0           MOVX    @DPTR,A
    179            EndDevice_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&EndDevice_SimpleDesc;
   \   000045   A3           INC     DPTR
   \   000046   74..         MOV     A,#EndDevice_SimpleDesc & 0xff
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   74..         MOV     A,#(EndDevice_SimpleDesc >> 8) & 0xff
   \   00004C   F0           MOVX    @DPTR,A
    180            EndDevice_epDesc.latencyReq = noLatencyReqs;
   \   00004D   A3           INC     DPTR
   \   00004E   E4           CLR     A
   \   00004F   F0           MOVX    @DPTR,A
    181            // ◊¢≤·∂Àµ„
    182            afRegister( &EndDevice_epDesc );
   \   000050                ; Setup parameters for call to function afRegister
   \   000050   7A..         MOV     R2,#EndDevice_epDesc & 0xff
   \   000052   7B..         MOV     R3,#(EndDevice_epDesc >> 8) & 0xff
   \   000054   12....       LCALL   ??afRegister?relay
    183          }
   \   000057   7F01         MOV     R7,#0x1
   \   000059   02....       LJMP    ?BANKED_LEAVE_XDATA
    184          
    185          /*********************************************************************
    186           * @fn      SampleApp_ProcessEvent
    187           *
    188           * @brief   Generic Application Task event processor.  This function
    189           *          is called to process all events for the task.  Events
    190           *          include timers, messages and any other user defined events.
    191           *
    192           * @param   task_id  - The OSAL assigned task ID.
    193           * @param   events - events to process.  This is a bit map and can
    194           *                   contain more than one event.
    195           *
    196           * @return  none
    197           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    198          uint8 PM2P5_Data;
   \                     PM2P5_Data:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    199          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    200          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    201            afIncomingMSGPacket_t *MSGpkt;
    202            (void)task_id;  // Intentionally unreferenced parameter
    203          
    204            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6064         JZ      ??SampleApp_ProcessEvent_0
    205            {
    206              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   802E         SJMP    ??SampleApp_ProcessEvent_1
    207              while ( MSGpkt )
    208              {
    209                switch ( MSGpkt->hdr.event )
    210                {
    211                  // Received when a messages is received (OTA) for this endpoint
    212                  case AF_INCOMING_MSG_CMD:
    213                    SampleApp_MessageMSGCB( MSGpkt );
    214                    break;
    215          
    216                  // Received whenever the device changes state in the network
    217                  case ZDO_STATE_CHANGE:          
    218                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   F0           MOVX    @DPTR,A
    219                    if ((SampleApp_NwkState == DEV_ROUTER)
    220                       ||(SampleApp_NwkState == DEV_END_DEVICE) )
   \   000015   E0           MOVX    A,@DPTR
   \   000016   6407         XRL     A,#0x7
   \   000018   6005         JZ      ??SampleApp_ProcessEvent_3
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   6406         XRL     A,#0x6
   \   00001D   7017         JNZ     ??SampleApp_ProcessEvent_4
    221                    {
    222                      printf("connect coordinator\r\n");            
   \                     ??SampleApp_ProcessEvent_3:
   \   00001F                ; Setup parameters for call to function printf
   \   00001F   7A..         MOV     R2,#`?<Constant "connect coordinator\\r\\n">` & 0xff
   \   000021   7B..         MOV     R3,#(`?<Constant "connect coordinator\\r\\n">` >> 8) & 0xff
   \   000023   12....       LCALL   ??printf?relay
    223          						/*¡¨Ω”µΩ–≠µ˜∆˜¡À£¨PM2.5ºÏ≤‚ø™ º*/
    224                      osal_start_timerEx( SampleApp_TaskID, SEND_COOR_MSG_EVT,100);
   \   000026                ; Setup parameters for call to function osal_start_timerEx
   \   000026   7C64         MOV     R4,#0x64
   \   000028   7D00         MOV     R5,#0x0
   \   00002A   7A01         MOV     R2,#0x1
   \   00002C   7B00         MOV     R3,#0x0
   \   00002E   90....       MOV     DPTR,#SampleApp_TaskID
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F9           MOV     R1,A
   \   000033   12....       LCALL   ??osal_start_timerEx?relay
    225                    }
    226                    break;
    227          
    228                  default:
    229                    break;
    230                }
    231          
    232                // Release the memory
    233                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_4:
   \   000036                ; Setup parameters for call to function osal_msg_deallocate
   \   000036   AA..         MOV     R2,?V0 + 0
   \   000038   AB..         MOV     R3,?V0 + 1
   \   00003A   12....       LCALL   ??osal_msg_deallocate?relay
    234          
    235                // Next - if one is available
    236                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00003D                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   00003D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000040   E0           MOVX    A,@DPTR
   \   000041   F9           MOV     R1,A
   \   000042   12....       LCALL   ??osal_msg_receive?relay
   \   000045   8A..         MOV     ?V0 + 0,R2
   \   000047   8B..         MOV     ?V0 + 1,R3
   \   000049   E5..         MOV     A,?V0 + 0
   \   00004B   45..         ORL     A,?V0 + 1
   \   00004D   601A         JZ      ??SampleApp_ProcessEvent_5
   \   00004F   85..82       MOV     DPL,?V0 + 0
   \   000052   85..83       MOV     DPH,?V0 + 1
   \   000055   E0           MOVX    A,@DPTR
   \   000056   24E6         ADD     A,#-0x1a
   \   000058   6006         JZ      ??SampleApp_ProcessEvent_6
   \   00005A   2449         ADD     A,#0x49
   \   00005C   60B1         JZ      ??SampleApp_ProcessEvent_2
   \   00005E   80D6         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_6:
   \   000060                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000060   AA..         MOV     R2,?V0 + 0
   \   000062   AB..         MOV     R3,?V0 + 1
   \   000064   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000067   80CD         SJMP    ??SampleApp_ProcessEvent_4
    237              }
    238          
    239              // return unprocessed events
    240              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_5:
   \   000069   EE           MOV     A,R6
   \   00006A   FA           MOV     R2,A
   \   00006B   EF           MOV     A,R7
   \   00006C   6480         XRL     A,#0x80
   \   00006E   FB           MOV     R3,A
   \   00006F   8026         SJMP    ??SampleApp_ProcessEvent_7
    241            }//if ( events & SYS_EVENT_MSG )
    242          /***********************≥¨…˘≤®ºÏ≤‚************************************/	
    243            if(events & SEND_COOR_MSG_EVT)//SEND_COOR_MSG_EVT
   \                     ??SampleApp_ProcessEvent_0:
   \   000071   EE           MOV     A,R6
   \   000072   A2E0         MOV     C,0xE0 /* A   */.0
   \   000074   501D         JNC     ??SampleApp_ProcessEvent_8
    244            {
    245          			PM2P5_Data = PM2p5_Read();//∂¡µΩPM2.5 ˝æ›µ•Œªug/m3
   \   000076                ; Setup parameters for call to function PM2p5_Read
   \   000076   12....       LCALL   ??PM2p5_Read?relay
   \   000079   EA           MOV     A,R2
   \   00007A   90....       MOV     DPTR,#PM2P5_Data
   \   00007D   F0           MOVX    @DPTR,A
    246          			SendPM2P5ToCoordinator(PM2P5_Data);//œÚ–≠µ˜∆˜∑¢ÀÕ ˝æ›
   \   00007E                ; Setup parameters for call to function SendPM2P5ToCoordinator
   \   00007E   E0           MOVX    A,@DPTR
   \   00007F   F9           MOV     R1,A
   \   000080   12....       LCALL   ??SendPM2P5ToCoordinator?relay
    247          			//∆Ù∂Ø∂® ±∆˜1000ms∫Û¥•∑¢ SEND_COOR_MSG_EVT
    248          			osal_start_timerEx( SampleApp_TaskID, SEND_COOR_MSG_EVT,1000);
   \   000083                ; Setup parameters for call to function osal_start_timerEx
   \   000083   7CE8         MOV     R4,#-0x18
   \   000085   7D03         MOV     R5,#0x3
   \   000087   7A01         MOV     R2,#0x1
   \   000089   7B00         MOV     R3,#0x0
   \   00008B   90....       MOV     DPTR,#SampleApp_TaskID
   \   00008E   E0           MOVX    A,@DPTR
   \   00008F   F9           MOV     R1,A
   \   000090   12....       LCALL   ??osal_start_timerEx?relay
    249            }
    250          /***********************≥¨…˘≤®ºÏ≤‚************************************/		
    251            return 0;
   \                     ??SampleApp_ProcessEvent_8:
   \   000093   7A00         MOV     R2,#0x0
   \   000095   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_7:
   \   000097   7F04         MOV     R7,#0x4
   \   000099   02....       LJMP    ?BANKED_LEAVE_XDATA
    252          }
    253          /*********************************************************************
    254           * LOCAL FUNCTIONS
    255           */
    256          
    257          /*********************************************************************
    258           * @fn      SampleApp_MessageMSGCB
    259           *
    260           * @brief   Data message processor callback.  This function processes
    261           *          any incoming data - probably from other devices.  So, based
    262           *          on cluster ID, perform the intended action.
    263           *
    264           * @param   none
    265           *
    266           * @return  none
    267           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    268          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    269          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    270            switch ( pkt->clusterId )
    271            {
    272              ;
    273            }
    274          }
   \   000000   02....       LJMP    ?BRET
    275          /*
    276          ÷’∂ÀœÚ–≠µ˜∆˜∑¢ÀÕ ˝æ›
    277          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    278          void SendPM2P5ToCoordinator(uint8 val)
   \                     SendPM2P5ToCoordinator:
    279          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 1
   \   000005   74FF         MOV     A,#-0x1
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
    280            uint8 tmp = val;
   \   00000B   85..82       MOV     DPL,?XSP + 0
   \   00000E   85..83       MOV     DPH,?XSP + 1
   \   000011   F0           MOVX    @DPTR,A
    281            if ( AF_DataRequest( &Point_To_Point_DstAddr,&EndDevice_epDesc,
    282                                 PM2P5_CLUSTERID,
    283                                 1,
    284                                 &tmp,
    285                                 &SampleApp_TransID,
    286                                 AF_DISCV_ROUTE,
    287                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000012                ; Setup parameters for call to function AF_DataRequest
   \   000012   75..1E       MOV     ?V0 + 0,#0x1e
   \   000015   78..         MOV     R0,#?V0 + 0
   \   000017   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00001A   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00001D   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000020   78..         MOV     R0,#?V0 + 0
   \   000022   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000025   7403         MOV     A,#0x3
   \   000027   12....       LCALL   ?XSTACK_DISP0_8
   \   00002A   8582..       MOV     ?V0 + 0,DPL
   \   00002D   8583..       MOV     ?V0 + 1,DPH
   \   000030   78..         MOV     R0,#?V0 + 0
   \   000032   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000035   75..01       MOV     ?V0 + 0,#0x1
   \   000038   75..00       MOV     ?V0 + 1,#0x0
   \   00003B   78..         MOV     R0,#?V0 + 0
   \   00003D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000040   78..         MOV     R0,#?V0 + 0
   \   000042   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000045   7920         MOV     R1,#0x20
   \   000047   7C..         MOV     R4,#EndDevice_epDesc & 0xff
   \   000049   7D..         MOV     R5,#(EndDevice_epDesc >> 8) & 0xff
   \   00004B   7A..         MOV     R2,#Point_To_Point_DstAddr & 0xff
   \   00004D   7B..         MOV     R3,#(Point_To_Point_DstAddr >> 8) & 0xff
   \   00004F   12....       LCALL   ??AF_DataRequest?relay
   \   000052   7409         MOV     A,#0x9
   \   000054   12....       LCALL   ?DEALLOC_XSTACK8
    288            {
    289              //printf("tx success\r\n");//¥Æø⁄¥Ú”°Ã· æ£¨∑¢ÀÕ≥…π¶
    290            }
    291          }
   \   000057   7401         MOV     A,#0x1
   \   000059   12....       LCALL   ?DEALLOC_XSTACK8
   \   00005C   7F02         MOV     R7,#0x2
   \   00005E   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??osalInitTasks?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osalInitTasks

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SendPM2P5ToCoordinator?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SendPM2P5ToCoordinator

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "i am end device\\r\\n">`:
   \   000000   6920616D     DB "i am end device\015\012"
   \            20656E64
   \            20646576
   \            6963650D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "connect coordinator\\r\\n">`:
   \   000000   636F6E6E     DB "connect coordinator\015\012"
   \            65637420
   \            636F6F72
   \            64696E61
   \            746F720D
   \            0A00    
    292          
    293          
    294          /*********************************************************************
    295          *********************************************************************/

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     SampleApp_Init                  0      0      9
       -> UartInit                   0      0     18
       -> PM2p5_Init                 0      0     18
       -> printf                     0      0     18
       -> afRegister                 0      0     18
     SampleApp_MessageMSGCB          0      0     12
     SampleApp_ProcessEvent          0      0     12
       -> osal_msg_receive           0      0     24
       -> printf                     0      0     24
       -> osal_start_timerEx         0      0     24
       -> osal_msg_deallocate        0      0     24
       -> osal_msg_receive           0      0     24
       -> SampleApp_MessageMSGCB     0      0     24
       -> PM2p5_Read                 0      0     24
       -> SendPM2P5ToCoordinator     0      0     24
       -> osal_start_timerEx         0      0     24
     SendPM2P5ToCoordinator          1      0     32
       -> AF_DataRequest             0      0     40
     osalInitTasks                   2      0      0
       -> osal_mem_alloc             4      0      0
       -> osal_memset                4      0      0
       -> macTaskInit                4      0      0
       -> nwk_init                   4      0      0
       -> Hal_Init                   4      0      0
       -> APS_Init                   4      0      0
       -> ZDApp_Init                 4      0      0
       -> SampleApp_Init             4      0      0


   Segment part sizes:

     Function/Label                        Bytes
     --------------                        -----
     tasksArr                                12
     tasksCnt                                 1
     tasksEvents                              2
     osalInitTasks                           73
     OutClusterList                           2
     EndDevice_SimpleDesc                    12
     EndDevice_epDesc                         6
     SampleApp_TaskID                         1
     SampleApp_NwkState                       1
     SampleApp_TransID                        1
     Point_To_Point_DstAddr                  12
     Boardcast_DstAddr                       12
     SampleApp_Init                          92
     PM2P5_Data                               1
     SampleApp_ProcessEvent                 156
     SampleApp_MessageMSGCB                   3
     SendPM2P5ToCoordinator                  97
     ??osalInitTasks?relay                    6
     ??SampleApp_Init?relay                   6
     ??SampleApp_ProcessEvent?relay           6
     ??SampleApp_MessageMSGCB?relay           6
     ??SendPM2P5ToCoordinator?relay           6
     ?<Constant "i am end device\r\n">       18
     ?<Constant "connect coordinator\r\n">   22

 
 421 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
  67 bytes in segment XDATA_ROM_C
  36 bytes in segment XDATA_Z
 
 451 bytes of CODE  memory
  67 bytes of CONST memory
  36 bytes of XDATA memory

Errors: none
Warnings: none
