///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        18/Dec/2020  11:28:03 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\Source\EndDevice.c                 /
//    Command line       =  -f C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊ /
//                          µÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\ /
//                          Samples\SampleApp\CC2530DB\..\..\..\Tools\CC2530D /
//                          B\f8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func     /
//                          -DBLINK_LEDS) -f C:\Users\Administrator\Desktop\e /
//                          ps\ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0         /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF11                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\Administrator\Des /
//                          ktop\eps\ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊ /
//                          µÑé\Projects\zstack\Samples\SampleApp\Source\EndD /
//                          evice.c -D NWK_AUTO_POLL -D ZTOOL_P1 -D           /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\EndDeviceEB\List\ -lA     /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\EndDeviceEB\List\         /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\EndDeviceEB\Obj\ -e       /
//                          --no_unroll --no_inline --no_tbaa --debug         /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\ -I                       /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\SOURCE\ -I             /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\  /
//                          -I C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊ /
//                          µÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\ /
//                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONE /
//                          NTS\MT\ -I C:\Users\Administrator\Desktop\eps\Zig /
//                          BeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects /
//                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. /
//                          \COMPONENTS\HAL\INCLUDE\ -I                       /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \HAL\TARGET\CC2530EB\ -I                          /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \OSAL\MCU\CCSOC\ -I C:\Users\Administrator\Deskto /
//                          p\eps\ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\OSAL\INCLUDE\ -I             /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \STACK\AF\ -I C:\Users\Administrator\Desktop\eps\ /
//                          ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Proje /
//                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. /
//                          \..\COMPONENTS\STACK\NWK\ -I                      /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \STACK\SEC\ -I C:\Users\Administrator\Desktop\eps /
//                          \ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\SAPI\ -I                    /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \STACK\SYS\ -I C:\Users\Administrator\Desktop\eps /
//                          \ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\ZDO\ -I                     /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \ZMAC\F8W\ -I C:\Users\Administrator\Desktop\eps\ /
//                          ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Proje /
//                          cts\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. /
//                          \..\COMPONENTS\ZMAC\ -I                           /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \SERVICES\SADDR\ -I C:\Users\Administrator\Deskto /
//                          p\eps\ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\..\..\COMPONENTS\SERVICES\SDATA\ -I           /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \MAC\INCLUDE\ -I C:\Users\Administrator\Desktop\e /
//                          ps\ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I              /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \MAC\LOW_LEVEL\srf04\ -I                          /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -I              /
//                          C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \HARDWARE\ -Om                                    /
//    List file          =  C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé /
//                          \5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\EndDeviceEB\List\EndDevic /
//                          e.s51                                             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME EndDevice

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??SampleApp_Init?relay
        FUNCTION ??SampleApp_Init?relay,0203H
        PUBLIC ??SampleApp_MessageMSGCB?relay
        FUNCTION ??SampleApp_MessageMSGCB?relay,0203H
        PUBLIC ??SampleApp_ProcessEvent?relay
        FUNCTION ??SampleApp_ProcessEvent?relay,0203H
        PUBLIC ??SendPIRToCoordinator?relay
        FUNCTION ??SendPIRToCoordinator?relay,0203H
        PUBLIC ??osalInitTasks?relay
        FUNCTION ??osalInitTasks?relay,0203H
        PUBLIC Boardcast_DstAddr
        PUBLIC EndDevice_SimpleDesc
        PUBLIC EndDevice_epDesc
        PUBLIC OutClusterList
        PUBLIC PIRSta0
        PUBLIC PIRSta1
        PUBLIC Point_To_Point_DstAddr
        PUBLIC SampleApp_Init
        FUNCTION SampleApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC SampleApp_MessageMSGCB
        FUNCTION SampleApp_MessageMSGCB,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC SampleApp_NwkState
        PUBLIC SampleApp_ProcessEvent
        FUNCTION SampleApp_ProcessEvent,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC SampleApp_TaskID
        PUBLIC SampleApp_TransID
        PUBLIC SendPIRToCoordinator
        FUNCTION SendPIRToCoordinator,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBWEAK _A_P1
        PUBLIC osalInitTasks
        FUNCTION osalInitTasks,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC tasksArr
        PUBLIC tasksCnt
        PUBLIC tasksEvents
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
osal_mem_alloc      SYMBOL "osal_mem_alloc"
osal_memset         SYMBOL "osal_memset"
macTaskInit         SYMBOL "macTaskInit"
nwk_init            SYMBOL "nwk_init"
Hal_Init            SYMBOL "Hal_Init"
APS_Init            SYMBOL "APS_Init"
ZDApp_Init          SYMBOL "ZDApp_Init"
UartInit            SYMBOL "UartInit"
PIR_Init            SYMBOL "PIR_Init"
printf              SYMBOL "printf"
afRegister          SYMBOL "afRegister"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??APS_Init?relay    SYMBOL "?relay", APS_Init
`?<Name APS_event_loop 17>` SYMBOL "APS_event_loop"
??APS_event_loop?relay SYMBOL "?relay", `?<Name APS_event_loop 17>`
??Hal_Init?relay    SYMBOL "?relay", Hal_Init
`?<Name Hal_ProcessEvent 20>` SYMBOL "Hal_ProcessEvent"
??Hal_ProcessEvent?relay SYMBOL "?relay", `?<Name Hal_ProcessEvent 20>`
??PIR_Init?relay    SYMBOL "?relay", PIR_Init
??UartInit?relay    SYMBOL "?relay", UartInit
??ZDApp_Init?relay  SYMBOL "?relay", ZDApp_Init
`?<Name ZDApp_event_loop 25>` SYMBOL "ZDApp_event_loop"
??ZDApp_event_loop?relay SYMBOL "?relay", `?<Name ZDApp_event_loop 25>`
??afRegister?relay  SYMBOL "?relay", afRegister
`?<Name macEventLoop 28>` SYMBOL "macEventLoop"
??macEventLoop?relay SYMBOL "?relay", `?<Name macEventLoop 28>`
??macTaskInit?relay SYMBOL "?relay", macTaskInit
`?<Name nwk_event_loop 31>` SYMBOL "nwk_event_loop"
??nwk_event_loop?relay SYMBOL "?relay", `?<Name nwk_event_loop 31>`
??nwk_init?relay    SYMBOL "?relay", nwk_init
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
??osal_memset?relay SYMBOL "?relay", osal_memset
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??printf?relay      SYMBOL "?relay", printf
SampleApp_Init      SYMBOL "SampleApp_Init"
??SampleApp_Init?relay SYMBOL "?relay", SampleApp_Init
SampleApp_MessageMSGCB SYMBOL "SampleApp_MessageMSGCB"
??SampleApp_MessageMSGCB?relay SYMBOL "?relay", SampleApp_MessageMSGCB
SampleApp_ProcessEvent SYMBOL "SampleApp_ProcessEvent"
??SampleApp_ProcessEvent?relay SYMBOL "?relay", SampleApp_ProcessEvent
SendPIRToCoordinator SYMBOL "SendPIRToCoordinator"
??SendPIRToCoordinator?relay SYMBOL "?relay", SendPIRToCoordinator
osalInitTasks       SYMBOL "osalInitTasks"
??osalInitTasks?relay SYMBOL "?relay", osalInitTasks

        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN macTaskInit
        FUNCTION macTaskInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_init
        FUNCTION nwk_init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_Init
        FUNCTION Hal_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_Init
        FUNCTION APS_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_Init
        FUNCTION ZDApp_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN UartInit
        FUNCTION UartInit,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN PIR_Init
        FUNCTION PIR_Init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??APS_Init?relay
        FUNCTION ??APS_Init?relay,00H
        EXTERN ??APS_event_loop?relay
        FUNCTION ??APS_event_loop?relay,00H
        EXTERN ??Hal_Init?relay
        FUNCTION ??Hal_Init?relay,00H
        EXTERN ??Hal_ProcessEvent?relay
        FUNCTION ??Hal_ProcessEvent?relay,00H
        EXTERN ??PIR_Init?relay
        FUNCTION ??PIR_Init?relay,00H
        EXTERN ??UartInit?relay
        FUNCTION ??UartInit?relay,00H
        EXTERN ??ZDApp_Init?relay
        FUNCTION ??ZDApp_Init?relay,00H
        EXTERN ??ZDApp_event_loop?relay
        FUNCTION ??ZDApp_event_loop?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??macEventLoop?relay
        FUNCTION ??macEventLoop?relay,00H
        EXTERN ??macTaskInit?relay
        FUNCTION ??macTaskInit?relay,00H
        EXTERN ??nwk_event_loop?relay
        FUNCTION ??nwk_event_loop?relay,00H
        EXTERN ??nwk_init?relay
        FUNCTION ??nwk_init?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??printf?relay
        FUNCTION ??printf?relay,00H

// C:\Users\Administrator\Desktop\eps\ZigBeeÍ¨ĞÅÊµÑé\5.ZigBeeÍøÂç´«ÊäÈËÌåºìÍâÊµÑé\Projects\zstack\Samples\SampleApp\Source\EndDevice.c
//    1 #include "ZComDef.h"
//    2 #include "hal_drivers.h"
//    3 #include "OSAL.h"
//    4 #include "OSAL_Tasks.h"
//    5 #include "nwk.h"
//    6 #include "APS.h"
//    7 #include "ZDApp.h"
//    8 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//    9   #include "ZDNwkMgr.h"
//   10 #endif
//   11 #if defined ( ZIGBEE_FRAGMENTATION )
//   12   #include "aps_frag.h"
//   13 #endif
//   14 
//   15 #include "SampleApp.h"

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1
//   16 #include "WiFiGate.h"
//   17 #include "OSAL.h"
//   18 #include "ZGlobals.h"
//   19 #include "AF.h"
//   20 #include "aps_groups.h"
//   21 #include "ZDApp.h"
//   22 #include "SampleApp.h"
//   23 #include "SampleAppHw.h"
//   24 #include "OnBoard.h"
//   25 
//   26 /* HAL */
//   27 #include "hal_lcd.h"
//   28 #include "hal_led.h"
//   29 #include "hal_key.h"
//   30 #include "string.h"
//   31 
//   32 #include "MT_UART.h"
//   33 #include "MT_APP.h"
//   34 #include "MT.h"
//   35 #include "OLED.h"
//   36 #include "SHT20.h"
//   37 #include "bottom_led.h"
//   38 #include "stdio.h"
//   39 #include "UART2RS485.h"
//   40 #include "WiFiGate.h"
//   41 #include "_bind.h"
//   42 #include "Fan.h"
//   43 #include "led_mode.h"
//   44 
//   45 #define READ_PIR_MSG_EVT  0x0001
//   46 void SendPIRToCoordinator(uint8 val);
//   47 // The order in this table must be identical to the task initialization calls below in osalInitTask.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   48 const pTaskEventHandlerFn tasksArr[] = {
tasksArr:
        DATA16
        DW ??macEventLoop?relay
        DW ??nwk_event_loop?relay
        DW ??Hal_ProcessEvent?relay
        DW ??APS_event_loop?relay
        DW ??ZDApp_event_loop?relay
        DW ??SampleApp_ProcessEvent?relay
//   49   macEventLoop,
//   50   nwk_event_loop,
//   51   Hal_ProcessEvent,
//   52 #if defined( MT_TASK )
//   53   MT_ProcessEvent,
//   54 #endif
//   55   APS_event_loop,
//   56 #if defined ( ZIGBEE_FRAGMENTATION )
//   57   APSF_ProcessEvent,
//   58 #endif
//   59   ZDApp_event_loop,
//   60 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//   61   ZDNwkMgr_event_loop,
//   62 #endif
//   63   SampleApp_ProcessEvent, 
//   64 };

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   65 const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
tasksCnt:
        DB 6

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   66 uint16 *tasksEvents;
tasksEvents:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   67 /*********************************************************************
//   68  * @fn      osalInitTasks
//   69  *
//   70  * @brief   This function invokes the initialization function for each task.
//   71  *
//   72  * @param   void
//   73  *
//   74  * @return  none
//   75  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   76 void osalInitTasks( void )
osalInitTasks:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function osalInitTasks
        CODE
//   77 {
        FUNCALL osalInitTasks, osal_mem_alloc
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, osal_memset
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, macTaskInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, nwk_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, Hal_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, APS_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, ZDApp_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, SampleApp_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   78   uint8 taskID = 0;
//   79 
//   80   tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0xc
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#tasksEvents
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//   81   osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     DPTR,#tasksEvents
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??osal_memset?relay
//   82 
//   83   macTaskInit( taskID++ );
        ; Setup parameters for call to function macTaskInit
        MOV     R1,#0x0
        LCALL   ??macTaskInit?relay
//   84   nwk_init( taskID++ );
        ; Setup parameters for call to function nwk_init
        MOV     R1,#0x1
        LCALL   ??nwk_init?relay
//   85   Hal_Init( taskID++ );
        ; Setup parameters for call to function Hal_Init
        MOV     R1,#0x2
        LCALL   ??Hal_Init?relay
//   86 #if defined( MT_TASK )
//   87   MT_TaskInit( taskID++ );
//   88 #endif
//   89   APS_Init( taskID++ );
        ; Setup parameters for call to function APS_Init
        MOV     R1,#0x3
        LCALL   ??APS_Init?relay
//   90 #if defined ( ZIGBEE_FRAGMENTATION )
//   91   APSF_Init( taskID++ );
//   92 #endif
//   93   ZDApp_Init( taskID++ );
        ; Setup parameters for call to function ZDApp_Init
        MOV     R1,#0x4
        LCALL   ??ZDApp_Init?relay
//   94 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//   95   ZDNwkMgr_Init( taskID++ );
//   96 #endif
//   97   SampleApp_Init( taskID++ ); 
        ; Setup parameters for call to function SampleApp_Init
        MOV     R1,#0x5
        LCALL   ??SampleApp_Init?relay
//   98 }
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//   99 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  100 const cId_t OutClusterList[1] =
OutClusterList:
        DW 1
//  101 {
//  102   PIR_CLUSTERID
//  103 };
//  104 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  105 const SimpleDescriptionFormat_t EndDevice_SimpleDesc = 
EndDevice_SimpleDesc:
        DB 20
        DATA16
        DW 3848
        DW 1
        DATA8
        DB 0
        DB 0
        DATA16
        DW 0H
        DATA8
        DB 1
        DATA16
        DW OutClusterList
//  106 {
//  107   SAMPLEAPP_ENDPOINT,                 //  int Endpoint;
//  108   SAMPLEAPP_PROFID,                   //  uint16 AppProfId[2];
//  109   SAMPLEAPP_DEVICEID,                 //  uint16 AppDeviceId[2];
//  110   SAMPLEAPP_DEVICE_VERSION,           //  int   AppDevVer:4;
//  111   SAMPLEAPP_FLAGS,                    //  int   AppFlags:4;
//  112   0,                                  //  uint8  AppNumInClusters;
//  113   (cId_t *)NULL,                      //  uint8 *pAppInClusterList;
//  114   1,                                  //  uint8  AppNumOutClusters;
//  115   (cId_t *)OutClusterList             //  uint8 *pAppOutClusterList;
//  116 };
//  117 // This is the Endpoint/Interface description.  It is defined here, but
//  118 // filled-in in SampleApp_Init().  Another way to go would be to fill
//  119 // in the structure here and make it a "const" (in code space).  The
//  120 // way it's defined in this sample app it is define in RAM.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  121 endPointDesc_t EndDevice_epDesc;
EndDevice_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//  122 /*********************************************************************
//  123  * EXTERNAL VARIABLES
//  124  */
//  125 
//  126 /*********************************************************************
//  127  * EXTERNAL FUNCTIONS
//  128  */
//  129 
//  130 /*********************************************************************
//  131  * LOCAL VARIABLES
//  132  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  133 uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
SampleApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  134                           // This variable will be received when
//  135                           // SampleApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  136 devStates_t SampleApp_NwkState;
SampleApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  137 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  138 uint8 SampleApp_TransID;  // This is the unique message ID (counter)
SampleApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  139 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  140 afAddrType_t Point_To_Point_DstAddr;//µã¶ÔµãÍ¨ĞÅ¶¨Òå
Point_To_Point_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  141 afAddrType_t Boardcast_DstAddr;//µã¶ÔµãÍ¨ĞÅ¶¨Òå
Boardcast_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//  142 /*********************************************************************
//  143  * LOCAL FUNCTIONS
//  144  */
//  145 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//  146 /*********************************************************************
//  147  * @fn      SampleApp_Init
//  148  *
//  149  * @brief   Initialization function for the Generic App Task.
//  150  *          This is called during initialization and should contain
//  151  *          any application specific initialization (ie. hardware
//  152  *          initialization/setup, table initialization, power up
//  153  *          notificaiton ... ).
//  154  *
//  155  * @param   task_id - the ID assigned by OSAL.  This ID should be
//  156  *                    used to send messages and set timers.
//  157  *
//  158  * @return  none
//  159  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  160 void SampleApp_Init( uint8 task_id )
SampleApp_Init:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function SampleApp_Init
        CODE
//  161 {
        FUNCALL SampleApp_Init, UartInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, PIR_Init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//  162   SampleApp_TaskID   = task_id;
        MOV     DPTR,#SampleApp_TaskID
        MOVX    @DPTR,A
//  163   SampleApp_NwkState = DEV_INIT;
        MOV     DPTR,#SampleApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//  164   SampleApp_TransID  = 0; 
        MOV     DPTR,#SampleApp_TransID
        CLR     A
        MOVX    @DPTR,A
//  165 	
//  166 	UartInit(HAL_UART_PORT_1,HAL_UART_BR_115200);//µ÷ÊÔ´®¿Ú³õÊ¼»¯
        ; Setup parameters for call to function UartInit
        MOV     R2,#0x4
        MOV     R1,#0x1
        LCALL   ??UartInit?relay
//  167   PIR_Init();      //³õÊ¼»¯ÈËÌåºìÍâÄ£¿é
        ; Setup parameters for call to function PIR_Init
        LCALL   ??PIR_Init?relay
//  168   printf("i am end device\r\n");//´®¿Ú´òÓ¡
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "i am end device\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "i am end device\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  169   // µã¶ÔµãÍ¨Ñ¶¶¨Òå
//  170   Point_To_Point_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥
        MOV     DPTR,#Point_To_Point_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  171   Point_To_Point_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;     //Ä¿±ê¶ËµãºÅ
        INC     DPTR
        MOV     A,#0x14
        MOVX    @DPTR,A
//  172 	/*·¢¸øĞ­µ÷Æ÷,Ğ­µ÷Æ÷µØÖ·¹Ì¶¨Îª0x0000*/
//  173   Point_To_Point_DstAddr.addr.shortAddr = 0x0000;
        MOV     DPTR,#Point_To_Point_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  174   // ÌîĞ´¶Ëµã
//  175   EndDevice_epDesc.endPoint   = SAMPLEAPP_ENDPOINT;
        MOV     DPTR,#EndDevice_epDesc
        MOV     A,#0x14
        MOVX    @DPTR,A
//  176   EndDevice_epDesc.task_id    = &SampleApp_TaskID;
        INC     DPTR
        MOV     A,#SampleApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//  177   EndDevice_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&EndDevice_SimpleDesc;
        INC     DPTR
        MOV     A,#EndDevice_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(EndDevice_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//  178   EndDevice_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  179   // ×¢²á¶Ëµã
//  180   afRegister( &EndDevice_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#EndDevice_epDesc & 0xff
        MOV     R3,#(EndDevice_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  181 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  182 
//  183 /*********************************************************************
//  184  * @fn      SampleApp_ProcessEvent
//  185  *
//  186  * @brief   Generic Application Task event processor.  This function
//  187  *          is called to process all events for the task.  Events
//  188  *          include timers, messages and any other user defined events.
//  189  *
//  190  * @param   task_id  - The OSAL assigned task ID.
//  191  * @param   events - events to process.  This is a bit map and can
//  192  *                   contain more than one event.
//  193  *
//  194  * @return  none
//  195  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  196 uint8 PIRSta0=0,PIRSta1=0xff;
PIRSta0:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
PIRSta1:
        DATA8
        DS 1
        REQUIRE `?<Initializer for PIRSta1>`
        REQUIRE __INIT_XDATA_I

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  197 uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
SampleApp_ProcessEvent:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function SampleApp_ProcessEvent
        CODE
//  198 {
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SampleApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SendPIRToCoordinator
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  199   afIncomingMSGPacket_t *MSGpkt;
//  200   (void)task_id;  // Intentionally unreferenced parameter
//  201 
//  202   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??SampleApp_ProcessEvent_0
//  203   {
//  204     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??SampleApp_ProcessEvent_1
//  205     while ( MSGpkt )
//  206     {
//  207       switch ( MSGpkt->hdr.event )
//  208       {
//  209         // Received when a messages is received (OTA) for this endpoint
//  210         case AF_INCOMING_MSG_CMD:
//  211           SampleApp_MessageMSGCB( MSGpkt );
//  212           break;
//  213 
//  214         // Received whenever the device changes state in the network
//  215         case ZDO_STATE_CHANGE:          
//  216           SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??SampleApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#SampleApp_NwkState
        MOVX    @DPTR,A
//  217           if ((SampleApp_NwkState == DEV_ROUTER)
//  218              ||(SampleApp_NwkState == DEV_END_DEVICE) )
        MOVX    A,@DPTR
        XRL     A,#0x7
        JZ      ??SampleApp_ProcessEvent_3
        MOVX    A,@DPTR
        XRL     A,#0x6
        JNZ     ??SampleApp_ProcessEvent_4
//  219           {
//  220             printf("connect coordinator\r\n");            
??SampleApp_ProcessEvent_3:
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "connect coordinator\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "connect coordinator\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  221 						/*Á¬½Óµ½Ğ­µ÷Æ÷ÁË£¬¿ª¹Ø¼ì²â¿ªÊ¼*/
//  222             osal_start_timerEx( SampleApp_TaskID, READ_PIR_MSG_EVT,100);
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0x64
        MOV     R5,#0x0
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  223           }
//  224           break;
//  225 
//  226         default:
//  227           break;
//  228       }
//  229 
//  230       // Release the memory
//  231       osal_msg_deallocate( (uint8 *)MSGpkt );
??SampleApp_ProcessEvent_4:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
//  232 
//  233       // Next - if one is available
//  234       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??SampleApp_ProcessEvent_1:
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??SampleApp_ProcessEvent_5
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??SampleApp_ProcessEvent_6
        ADD     A,#0x49
        JZ      ??SampleApp_ProcessEvent_2
        SJMP    ??SampleApp_ProcessEvent_4
??SampleApp_ProcessEvent_6:
        ; Setup parameters for call to function SampleApp_MessageMSGCB
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??SampleApp_MessageMSGCB?relay
        SJMP    ??SampleApp_ProcessEvent_4
//  235     }
//  236 
//  237     // return unprocessed events
//  238     return (events ^ SYS_EVENT_MSG);
??SampleApp_ProcessEvent_5:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??SampleApp_ProcessEvent_7
//  239   }//if ( events & SYS_EVENT_MSG )
//  240 /***********************¼ì²â************************************/	
//  241   if(events & READ_PIR_MSG_EVT)//READ_PIR_MSG_EVT
??SampleApp_ProcessEvent_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??SampleApp_ProcessEvent_8
//  242   {
//  243 		PIRSta0 = PIR_Read();
        MOV     C,0x90.1
        CLR     A
        RLC     A
        MOV     DPTR,#PIRSta0
        MOVX    @DPTR,A
//  244 		/*×î½üÁ½´Î¼ì²âµÄIOµçÆ½²»Ò»Ñù£¬±íÃ÷ÕÚµ²Îï¸Õ·ÅÈë»òÕßÕÚµ²Îï¸Õ³·×ß*/
//  245 		if(PIRSta0^PIRSta1){			
        MOV     DPTR,#PIRSta1
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPTR,#PIRSta0
        MOVX    A,@DPTR
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     R0,A
        MOVX    A,@DPTR
        XRL     A,R0
        JZ      ??SampleApp_ProcessEvent_9
//  246 				SendPIRToCoordinator(PIRSta0);
        ; Setup parameters for call to function SendPIRToCoordinator
        MOV     DPTR,#PIRSta0
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??SendPIRToCoordinator?relay
//  247 				printf("get signal\r\n");//´®¿Ú´òÓ¡
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "get signal\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "get signal\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  248 		}
//  249 		PIRSta1 = PIRSta0;//±£´æÉÏÒ»´ÎµÄÖµ
??SampleApp_ProcessEvent_9:
        MOV     DPTR,#PIRSta0
        MOVX    A,@DPTR
        MOV     DPTR,#PIRSta1
        MOVX    @DPTR,A
//  250 		/*ÉèÖÃ¶¨Ê±Æ÷200ms³¬Ê±£¬READ_PIR_MSG_EVT*/
//  251 		osal_start_timerEx( SampleApp_TaskID, READ_PIR_MSG_EVT,200);
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x38
        MOV     R5,#0x0
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  252   }
//  253 /***********************¼ì²â************************************/		
//  254   return 0;
??SampleApp_ProcessEvent_8:
        MOV     R2,#0x0
        MOV     R3,#0x0
??SampleApp_ProcessEvent_7:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
        REQUIRE _A_P1
//  255 }
//  256 /*********************************************************************
//  257  * LOCAL FUNCTIONS
//  258  */
//  259 
//  260 /*********************************************************************
//  261  * @fn      SampleApp_MessageMSGCB
//  262  *
//  263  * @brief   Data message processor callback.  This function processes
//  264  *          any incoming data - probably from other devices.  So, based
//  265  *          on cluster ID, perform the intended action.
//  266  *
//  267  * @param   none
//  268  *
//  269  * @return  none
//  270  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  271 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
SampleApp_MessageMSGCB:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function SampleApp_MessageMSGCB
        CODE
//  272 {
        ; Saved register size: 0
        ; Auto size: 0
//  273   switch ( pkt->clusterId )
//  274   {
//  275     ;
//  276   }
//  277 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock3
//  278 /*
//  279 ÖÕ¶ËÏòĞ­µ÷Æ÷·¢ËÍÊı¾İ
//  280 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  281 void SendPIRToCoordinator(uint8 val)
SendPIRToCoordinator:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function SendPIRToCoordinator
        CODE
//  282 {
        FUNCALL SendPIRToCoordinator, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
//  283   uint8 tmp = val;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//  284   if ( AF_DataRequest( &Point_To_Point_DstAddr,&EndDevice_epDesc,
//  285                        PIR_CLUSTERID,
//  286                        1,
//  287                        &tmp,
//  288                        &SampleApp_TransID,
//  289                        AF_DISCV_ROUTE,
//  290                        AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,#SampleApp_TransID & 0xff
        MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,#0x20
        MOV     R4,#EndDevice_epDesc & 0xff
        MOV     R5,#(EndDevice_epDesc >> 8) & 0xff
        MOV     R2,#Point_To_Point_DstAddr & 0xff
        MOV     R3,#(Point_To_Point_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
//  291   {
//  292     //printf("tx success\r\n");//´®¿Ú´òÓ¡ÌáÊ¾£¬·¢ËÍ³É¹¦
//  293   }
//  294 }
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock4

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for PIRSta1>`:
        DATA8
        DB 255

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??osalInitTasks?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    osalInitTasks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_MessageMSGCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SendPIRToCoordinator?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SendPIRToCoordinator

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "i am end device\\r\\n">`:
        DB "i am end device\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "connect coordinator\\r\\n">`:
        DB "connect coordinator\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "get signal\\r\\n">`:
        DB "get signal\015\012"

        END
//  295 
//  296 
//  297 /*********************************************************************
//  298 *********************************************************************/
// 
// 459 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   1 byte  in segment SFR_AN
//   1 byte  in segment XDATA_I
//   1 byte  in segment XDATA_ID
//  80 bytes in segment XDATA_ROM_C
//  36 bytes in segment XDATA_Z
// 
// 490 bytes of CODE  memory
//  80 bytes of CONST memory
//   0 bytes of DATA  memory (+ 1 byte shared)
//  37 bytes of XDATA memory
//
//Errors: none
//Warnings: none
