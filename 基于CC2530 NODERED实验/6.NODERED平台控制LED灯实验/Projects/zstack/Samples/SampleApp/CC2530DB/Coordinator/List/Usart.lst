###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         01/May/2023  07:52:23 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Components\HARDWARE\Usart.c                     #
#    Command line       =  -f D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LE #
#                          D¿ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ    #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f     #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0      #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF11                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Components\HARDWARE\Usart.c -D ZIGBEEPRO -D     #
#                          ZTOOL_P1 -D MT_SYS_FUNC -D xMT_ZDO_FUNC -D         #
#                          LCD_SUPPORTED=DEBUG -D NV_RESTORE -lC              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinator\List\ -lA D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC #
#                          2530\NODERED-LED¿ØÖÆ\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\Coordinator\List\ --diag_suppress    #
#                          Pe001,Pa010 -o D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC253 #
#                          0\NODERED-LED¿ØÖÆ\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\Coordinator\Obj\ -e --debug             #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½ #
#                          Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½ #
#                          Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\SOURCE\ -I                  #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\ZMAIN\TI2530DB\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½ #
#                          Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\  #
#                          -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LE #
#                          D¿ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I      #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\OSAL\INCLUDE\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\STACK\AF\ -I                 #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\STACK\NWK\ -I                #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\STACK\SEC\ -I                #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\STACK\SAPI\ -I               #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\STACK\SYS\ -I                #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\STACK\ZDO\ -I                #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\ZMAC\F8W\ -I                 #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\ZMAC\ -I                     #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\SERVICES\SADDR\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\SERVICES\SDATA\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\MAC\INCLUDE\ -I              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I      #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_C #
#                          HIP\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODER #
#                          ED-LED¿ØÖÆ\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\COMPONENTS\HARDWARE\ -Ohz       #
#    List file          =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinator\List\Usart.lst                             #
#    Object file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿Ø #
#                          ÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinator\Obj\Usart.r51                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Components\HARDWARE\Usart.c
      1          #include "Usart.h"	

   \                                 In  segment SFR_AN, at 0x86
   \   unsigned char volatile __sfr U0CSR
   \                     U0CSR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x88
   \   union <unnamed> volatile __sfr _A_TCON
   \                     _A_TCON:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc1
   \   unsigned char volatile __sfr U0DBUF
   \                     U0DBUF:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc2
   \   unsigned char volatile __sfr U0BAUD
   \                     U0BAUD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc4
   \   unsigned char volatile __sfr U0UCR
   \                     U0UCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc5
   \   unsigned char volatile __sfr U0GCR
   \                     U0GCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xe8
   \   union <unnamed> volatile __sfr _A_IRCON2
   \                     _A_IRCON2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf8
   \   union <unnamed> volatile __sfr _A_U1CSR
   \                     _A_U1CSR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf9
   \   unsigned char volatile __sfr U1DBUF
   \                     U1DBUF:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfa
   \   unsigned char volatile __sfr U1BAUD
   \                     U1BAUD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfb
   \   unsigned char volatile __sfr U1UCR
   \                     U1UCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfc
   \   unsigned char volatile __sfr U1GCR
   \                     U1GCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1

  #ifndef __DELAY_H
                  ^
"D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Components\HARDWARE\delay.h",1  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)
      2          #include "delay.h"
      3          #include "Rs485.h"
      4          #include "Time.h"
      5          
      6          #if UART0   //Ê¹ÄÜ½ÓÊÕ
      7          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      8          unsigned char WiFi_AT_STA = 0;                  //WiFi³õÊ¼»¯Íê³É±êÖ¾Î»
   \                     WiFi_AT_STA:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      9          unsigned char USART0_RX_BUF[USART0_REC_LEN];    //½ÓÊÕ»º³å,×î´óUSART0_REC_LEN¸ö×Ö½Ú.
   \                     USART0_RX_BUF:
   \   000000                DS 200
   \   0000C8                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     10          unsigned int  USART0_RX_STA = 0;       		//½ÓÊÕ×´Ì¬±ê¼Ç	
   \                     USART0_RX_STA:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     11          uint8_t Temp = 0;				//ÎÂ¶ÈÊý¾Ý
   \                     Temp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     12          uint8_t Humi = 0;				//Êª¶ÈÊý¾Ý
   \                     Humi:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     13          uint8_t Command_LED[10];			//¿ØÖÆLEDµÆÃüÁîÂë
   \                     Command_LED:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     14          uint8_t Send_OneNET[10];			//·¢ËÍµ½OneNETÏÔÊ¾Êý¾Ý
   \                     Send_OneNET:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z
     15          
     16          //==========================================================
     17          //	º¯ÊýÃû³Æ£º	USRT0_Init()
     18          //
     19          //	º¯Êý¹¦ÄÜ£º	³õÊ¼»¯´®¿Ú0
     20          //
     21          //	Èë¿Ú²ÎÊý£º	ÎÞ
     22          //
     23          //	·µ»Ø²ÎÊý£º	ÎÞ
     24          //
     25          //	ËµÃ÷£º		
     26          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     27          void USRT0_Init(void)
   \                     USRT0_Init:
     28          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     29            PERCFG = 0x00;    //´®¿Ú0µÄÒý½ÅÓ³Éäµ½Î»ÖÃ1£¬¼´P0_2ºÍP0_3
   \   000000   75F100       MOV     0xf1,#0x0
     30            P0SEL = 0x0C;     //½«P0_2ºÍP0_3¶Ë¿ÚÉèÖÃ³ÉÍâÉè¹¦ÄÜ
   \   000003   75F30C       MOV     0xf3,#0xc
     31            U0BAUD = 216;     //32MHzµÄÏµÍ³Ê±ÖÓ²úÉú115200BPSµÄ²¨ÌØÂÊ
   \   000006   75C2D8       MOV     0xc2,#-0x28
     32            U0GCR = 11;
   \   000009   75C50B       MOV     0xc5,#0xb
     33            U0UCR |= 0x80;    //½ûÖ¹Á÷¿Ø£¬8Î»Êý¾Ý£¬Çå³ý»º³åÆ÷
   \   00000C   43C480       ORL     0xc4,#0x80
     34            U0CSR |= 0xC0;    //Ñ¡ÔñUARTÄ£Ê½£¬Ê¹ÄÜ½ÓÊÕÆ÷
   \   00000F   4386C0       ORL     0x86,#0xc0
     35            UTX0IF = 0;       //Çå³ýTX·¢ËÍÖÐ¶Ï±êÖ¾
   \   000012   C2E9         CLR     0xe8.1
     36            URX0IF = 0;       //Çå³ýRX½ÓÊÕÖÐ¶Ï±êÖ¾
   \   000014   C28B         CLR     0x88.3
     37            URX0IE = 1;       //Ê¹ÄÜURAT0µÄ½ÓÊÕÖÐ¶Ï
   \   000016   D2AA         SETB    0xa8.2
     38            EA = 1;           //Ê¹ÄÜ×ÜÖÐ¶Ï
   \   000018                REQUIRE ?Subroutine1
   \   000018                REQUIRE PERCFG
   \   000018                REQUIRE P0SEL
   \   000018                REQUIRE U0BAUD
   \   000018                REQUIRE U0GCR
   \   000018                REQUIRE U0UCR
   \   000018                REQUIRE U0CSR
   \   000018                REQUIRE _A_IRCON2
   \   000018                REQUIRE _A_TCON
   \   000018                REQUIRE _A_IEN0
   \   000018                ; // Fall through to label ?Subroutine1
     39          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D2AF         SETB    0xa8.7
   \   000002   02....       LJMP    ?BRET
     40          
     41          //==========================================================
     42          //	º¯ÊýÃû³Æ£º	UR0_RecvInt()
     43          //
     44          //	º¯Êý¹¦ÄÜ£º	´®¿Ú0½ÓÊÕÖÐ¶Ï·þÎñº¯Êý
     45          //
     46          //	Èë¿Ú²ÎÊý£º	ÎÞ
     47          //
     48          //	·µ»Ø²ÎÊý£º	ÎÞ
     49          //
     50          //	ËµÃ÷£º		
     51          //==========================================================
     52          #pragma vector = URX0_VECTOR

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
     53          __interrupt void UR0_RecvInt()
   \                     UR0_RecvInt:
     54          {
   \   000000   C0E0         PUSH    A
   \   000002   74F2         MOV     A,#-0xe
   \   000004   12....       LCALL   ?INTERRUPT_ENTER_XSP
   \   000007                ; Saved register size: 14
   \   000007                ; Auto size: 0
     55            URX0IF = 0;                             //Çå³ýRX½ÓÊÕÖÐ¶Ï±êÖ¾
   \   000007   C28B         CLR     0x88.3
     56          
     57            if((USART0_RX_STA&0x8000)==0)	          //½ÓÊÕÎ´Íê³É
   \   000009   90....       MOV     DPTR,#USART0_RX_STA + 1
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   5480         ANL     A,#0x80
   \   00000F   7048         JNZ     ??UR0_RecvInt_0
     58            {
     59              if(WiFi_AT_STA)                       //WiFi³õÊ¼»¯Íê±Ï
   \   000011   90....       MOV     DPTR,#WiFi_AT_STA
   \   000014   E0           MOVX    A,@DPTR
   \   000015   6007         JZ      ??UR0_RecvInt_1
     60              {
     61                  USART0_Receive(U0DBUF);		  //´®¿Ú0Êý¾Ý´¦Àí
   \   000017                ; Setup parameters for call to function USART0_Receive
   \   000017   A9C1         MOV     R1,0xc1
   \   000019   12....       LCALL   ??USART0_Receive?relay
   \   00001C   803B         SJMP    ??UR0_RecvInt_0
     62              }
     63              else
     64              {
     65                  USART0_RX_BUF[USART0_RX_STA&0X3FFF]=U0DBUF ;
   \                     ??UR0_RecvInt_1:
   \   00001E   E5C1         MOV     A,0xc1
   \   000020   C0E0         PUSH    A
   \   000022   90....       MOV     DPTR,#USART0_RX_STA
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F8           MOV     R0,A
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   543F         ANL     A,#0x3f
   \   00002B   F9           MOV     R1,A
   \   00002C   74..         MOV     A,#USART0_RX_BUF & 0xff
   \   00002E   28           ADD     A,R0
   \   00002F   F582         MOV     DPL,A
   \   000031   74..         MOV     A,#(USART0_RX_BUF >> 8) & 0xff
   \   000033   39           ADDC    A,R1
   \   000034   F583         MOV     DPH,A
   \   000036   D0E0         POP     A
   \   000038   F0           MOVX    @DPTR,A
     66                  USART0_RX_STA++;
   \   000039   90....       MOV     DPTR,#USART0_RX_STA
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   2401         ADD     A,#0x1
   \   00003F   F0           MOVX    @DPTR,A
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \   000042   3400         ADDC    A,#0x0
   \   000044   F0           MOVX    @DPTR,A
     67                  if(USART0_RX_STA>(200-1))USART0_RX_STA=0;//½ÓÊÕÊý¾Ý´íÎó,ÖØÐÂ¿ªÊ¼½ÓÊÕ	  
   \   000045   90....       MOV     DPTR,#USART0_RX_STA
   \   000048   C3           CLR     C
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   94C8         SUBB    A,#-0x38
   \   00004C   A3           INC     DPTR
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   9400         SUBB    A,#0x0
   \   000050   4007         JC      ??UR0_RecvInt_0
   \   000052   90....       MOV     DPTR,#USART0_RX_STA
   \   000055   E4           CLR     A
   \   000056   F0           MOVX    @DPTR,A
   \   000057   A3           INC     DPTR
   \   000058   F0           MOVX    @DPTR,A
     68              }
     69            } 
     70          }
   \                     ??UR0_RecvInt_0:
   \   000059                REQUIRE ?Subroutine3
   \   000059                REQUIRE _A_TCON
   \   000059                REQUIRE U0DBUF
   \   000059                ; // Fall through to label ?Subroutine3

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?INTERRUPT_LEAVE_XSP
     71          
     72          //==========================================================
     73          //	º¯ÊýÃû³Æ£º	USART0_Receive()
     74          //
     75          //	º¯Êý¹¦ÄÜ£º	´®¿Ú0½ÓÊÕ
     76          //
     77          //	Èë¿Ú²ÎÊý£º	data:´®¿Ú0Êý¾Ý
     78          //
     79          //	·µ»Ø²ÎÊý£º	ÎÞ
     80          //
     81          //	ËµÃ÷£º		
     82          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     83          void USART0_Receive(uint8_t data)
   \                     USART0_Receive:
     84          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     85            static uint8_t End_Flag 	= 0;	//Ö¡Î²±êÖ¾Î»
     86            static uint8_t Header_Flag 	= 0;	//Ö¡Í·±êÖ¾Î»
     87            static uint8_t Receive_Flag   = 0;	//½ÓÊÕ±êÖ¾Î»
     88          
     89          /*
     90          *
     91          *	Ö¡Í·½ÓÊÕ
     92          *
     93          */
     94            /*Ö¡Í·1 Êý¾ÝÖ¡Í·ÖÐµÚÒ»¸ö×Ö½Ú*/
     95            if(Header_Flag == 0 && data == 0x43)
   \   000004   90....       MOV     DPTR,#??Header_Flag
   \   000007   E0           MOVX    A,@DPTR
   \   000008   7009         JNZ     ??USART0_Receive_0
   \   00000A   7443         MOV     A,#0x43
   \   00000C   69           XRL     A,R1
   \   00000D   7022         JNZ     ??USART0_Receive_1
     96            {
     97                Header_Flag = 1;
   \   00000F   7401         MOV     A,#0x1
   \   000011   801F         SJMP    ??USART0_Receive_2
     98            }
     99          
    100            /*Ö¡Í·2 Êý¾ÝÖ¡Í·ÖÐµÚ¶þ¸ö×Ö½Ú*/
    101            else if(Header_Flag == 1 && data == 0x47)
   \                     ??USART0_Receive_0:
   \   000013   6401         XRL     A,#0x1
   \   000015   701A         JNZ     ??USART0_Receive_1
   \   000017   7447         MOV     A,#0x47
   \   000019   69           XRL     A,R1
   \   00001A   7015         JNZ     ??USART0_Receive_1
    102            {
    103                USART0_RX_STA = 1;  //´æ·ÅÊý¾ÝÊý×éÏÂ±êÇåÁã
   \   00001C   90....       MOV     DPTR,#USART0_RX_STA
   \   00001F   7401         MOV     A,#0x1
   \   000021   F0           MOVX    @DPTR,A
   \   000022   A3           INC     DPTR
   \   000023   E4           CLR     A
   \   000024   F0           MOVX    @DPTR,A
    104                Receive_Flag = 1;	  //¿ªÊ¼½ÓÊÕÊý¾Ý±êÖ¾Î»
   \   000025   90....       MOV     DPTR,#??Receive_Flag
   \   000028   04           INC     A
   \   000029   F0           MOVX    @DPTR,A
    105                USART0_RX_BUF[0] = 0x41;//½«»º´æÖµ´æµ½½ÓÊÕÊý×éÖÐ
   \   00002A   90....       MOV     DPTR,#USART0_RX_BUF
   \   00002D   7441         MOV     A,#0x41
   \   00002F   8023         SJMP    ??USART0_Receive_3
    106            }
    107          
    108            else Header_Flag = 0;
   \                     ??USART0_Receive_1:
   \   000031   E4           CLR     A
   \                     ??USART0_Receive_2:
   \   000032   F0           MOVX    @DPTR,A
    109            
    110          /*
    111          *
    112          *	Êý¾Ý+Ö¡Î²½ÓÊÕ
    113          *
    114          */
    115            if(Receive_Flag)	//Ö¡Í·½ÓÊÕÍê³É
   \   000033   90....       MOV     DPTR,#??Receive_Flag
   \   000036   E0           MOVX    A,@DPTR
   \   000037   605E         JZ      ??USART0_Receive_4
    116            {
    117                if(USART0_RX_STA>=(Receive_REC_LEN-1))
   \   000039   90....       MOV     DPTR,#USART0_RX_STA
   \   00003C   C3           CLR     C
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   94C7         SUBB    A,#-0x39
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \   000042   9400         SUBB    A,#0x0
   \   000044   400F         JC      ??USART0_Receive_5
    118                {
    119                    End_Flag = 0;
   \   000046   90....       MOV     DPTR,#??End_Flag
   \   000049   E4           CLR     A
   \   00004A   F0           MOVX    @DPTR,A
    120                    Receive_Flag = 0;
   \   00004B   90....       MOV     DPTR,#??Receive_Flag
   \   00004E   F0           MOVX    @DPTR,A
    121                    USART0_RX_STA = 0;
   \   00004F   90....       MOV     DPTR,#USART0_RX_STA
   \   000052   F0           MOVX    @DPTR,A
   \   000053   A3           INC     DPTR
   \                     ??USART0_Receive_3:
   \   000054   F0           MOVX    @DPTR,A
    122                }
    123                
    124                USART0_RX_BUF[USART0_RX_STA++] = data;//Êý¾Ý½ÓÊÕ
   \                     ??USART0_Receive_5:
   \   000055   90....       MOV     DPTR,#USART0_RX_STA
   \   000058   E0           MOVX    A,@DPTR
   \   000059   24..         ADD     A,#USART0_RX_BUF & 0xff
   \   00005B   FA           MOV     R2,A
   \   00005C   A3           INC     DPTR
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   34..         ADDC    A,#(USART0_RX_BUF >> 8) & 0xff
   \   000060   FB           MOV     R3,A
   \   000061   8A82         MOV     DPL,R2
   \   000063   8B83         MOV     DPH,R3
   \   000065   E9           MOV     A,R1
   \   000066   F0           MOVX    @DPTR,A
   \   000067   90....       MOV     DPTR,#USART0_RX_STA
   \   00006A   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   00006D   F0           MOVX    @DPTR,A
    125          
    126                /*Ö¡Î²1  Êý¾ÝÖ¡Î²ÖÐµÚÒ»¸ö×Ö½Ú*/
    127                if(!End_Flag && data == 0x53)
   \   00006E   90....       MOV     DPTR,#??End_Flag
   \   000071   E0           MOVX    A,@DPTR
   \   000072   7009         JNZ     ??USART0_Receive_6
   \   000074   7453         MOV     A,#0x53
   \   000076   69           XRL     A,R1
   \   000077   701C         JNZ     ??USART0_Receive_7
    128                {
    129                    End_Flag = 1;
   \   000079   7401         MOV     A,#0x1
   \   00007B   8019         SJMP    ??USART0_Receive_8
    130                }
    131                /*Ö¡Î²2  Êý¾ÝÖ¡Î²ÖÐµÚ¶þ¸ö×Ö½Ú*/
    132                else if(End_Flag && data == 0x57)
   \                     ??USART0_Receive_6:
   \   00007D   7457         MOV     A,#0x57
   \   00007F   69           XRL     A,R1
   \   000080   7013         JNZ     ??USART0_Receive_7
    133                {
    134                    USART0_RX_STA = 0x8000;	//½ÓÊÕÍê³É
   \   000082   90....       MOV     DPTR,#USART0_RX_STA
   \   000085   E4           CLR     A
   \   000086   F0           MOVX    @DPTR,A
   \   000087   A3           INC     DPTR
   \   000088   7480         MOV     A,#-0x80
   \   00008A   F0           MOVX    @DPTR,A
    135                    Receive_Flag = 0;
   \   00008B   90....       MOV     DPTR,#??Receive_Flag
   \   00008E   E4           CLR     A
   \   00008F   F0           MOVX    @DPTR,A
    136                    End_Flag = 0;
   \   000090   90....       MOV     DPTR,#??End_Flag
   \   000093   8001         SJMP    ??USART0_Receive_8
    137                }
    138          
    139                /*½ÓÊÕ´íÎó ÖØÐÂ½ÓÊÕ*/
    140                else End_Flag = 0;
   \                     ??USART0_Receive_7:
   \   000095   E4           CLR     A
   \                     ??USART0_Receive_8:
   \   000096   F0           MOVX    @DPTR,A
    141            }
    142          }
   \                     ??USART0_Receive_4:
   \   000097                REQUIRE ?Subroutine0
   \   000097                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   2401         ADD     A,#0x1
   \   000003   F0           MOVX    @DPTR,A
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   3400         ADDC    A,#0x0
   \   000008   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??End_Flag:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Header_Flag:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Receive_Flag:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    143          
    144          //==========================================================
    145          //	º¯ÊýÃû³Æ£º	USART0_SendByte()
    146          //
    147          //	º¯Êý¹¦ÄÜ£º	´®¿Ú0·¢ËÍµ¥×Ö½Úº¯Êý
    148          //
    149          //	Èë¿Ú²ÎÊý£º	ÎÞ
    150          //
    151          //	·µ»Ø²ÎÊý£º	ÎÞ
    152          //
    153          //	ËµÃ÷£º		
    154          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    155          void USART0_SendByte(unsigned char dat)
   \                     USART0_SendByte:
    156          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    157            U0DBUF = dat;         //½«Òª·¢ËÍµÄ1×Ö½ÚÊý¾ÝÐ´ÈëU0DBUF
   \   000000   89C1         MOV     0xc1,R1
    158            while(!UTX0IF);       //µÈ´ýTXÖÐ¶Ï±êÖ¾£¬¼´Êý¾Ý·¢ËÍÍê³É
   \                     ??USART0_SendByte_0:
   \   000002   A2E9         MOV     C,0xe8.1
   \   000004   50FC         JNC     ??USART0_SendByte_0
    159            UTX0IF = 0;           //Çå³ýTXÖÐ¶Ï±êÖ¾£¬×¼±¸ÏÂÒ»´Î·¢ËÍ
   \   000006   C2E9         CLR     0xe8.1
    160          }
   \   000008   02....       LJMP    ?BRET
   \   00000B                REQUIRE U0DBUF
   \   00000B                REQUIRE _A_IRCON2
    161          
    162          //==========================================================
    163          //	º¯ÊýÃû³Æ£º	USART0_SendString()
    164          //
    165          //	º¯Êý¹¦ÄÜ£º	´®¿Ú0·¢ËÍ×Ö·û´®º¯Êý
    166          //
    167          //	Èë¿Ú²ÎÊý£º	*str: ·¢ËÍµÄÊý¾Ý
    168          //                      Len:  Êý¾Ý³¤¶È
    169          //          
    170          //	·µ»Ø²ÎÊý£º	ÎÞ
    171          //
    172          //	ËµÃ÷£º		
    173          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    174          void USART0_SendString(unsigned char *str,uint16_t Len)
   \                     USART0_SendString:
    175          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
   \   00000D   8012         SJMP    ??USART0_SendString_0
    176            while(Len--)
    177            {
    178              USART0_SendByte(*str++);    //Öð¸ö·¢ËÍ×Ö·û´®ÖÐµÄ×Ö½Ú
   \                     ??USART0_SendString_1:
   \   00000F                ; Setup parameters for call to function USART0_SendByte
   \   00000F   8E82         MOV     DPL,R6
   \   000011   8F83         MOV     DPH,R7
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F9           MOV     R1,A
   \   000015   12....       LCALL   ??USART0_SendByte?relay
   \   000018   8E82         MOV     DPL,R6
   \   00001A   8F83         MOV     DPH,R7
   \   00001C   A3           INC     DPTR
   \   00001D   AE82         MOV     R6,DPL
   \   00001F   AF83         MOV     R7,DPH
    179            }
   \                     ??USART0_SendString_0:
   \   000021   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000024   70E9         JNZ     ??USART0_SendString_1
    180          }
   \   000026                REQUIRE ?Subroutine2
   \   000026                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   A8..         MOV     R0,?V0 + 0
   \   000002   A9..         MOV     R1,?V0 + 1
   \   000004   E8           MOV     A,R0
   \   000005   24FF         ADD     A,#-0x1
   \   000007   F5..         MOV     ?V0 + 0,A
   \   000009   E9           MOV     A,R1
   \   00000A   34FF         ADDC    A,#-0x1
   \   00000C   F5..         MOV     ?V0 + 1,A
   \   00000E   E8           MOV     A,R0
   \   00000F   49           ORL     A,R1
   \   000010   22           RET
    181          
    182          //==========================================================
    183          //	º¯ÊýÃû³Æ£º	WiFi_Send_Cmd()
    184          //
    185          //	º¯Êý¹¦ÄÜ£º	ÏòWiFi·¢ËÍÃüÁî
    186          //
    187          //	Èë¿Ú²ÎÊý£º	waittime:µÈ´ýÊ±¼ä(µ¥Î»:ms)
    188          //			cmd:·¢ËÍµÄÃüÁî×Ö·û´®
    189          //			ack:ÆÚ´ýµÄÓ¦´ð½á¹û,Èç¹ûÎª¿Õ,Ôò±íÊ¾²»ÐèÒªµÈ´ýÓ¦´ð
    190          //
    191          //	·µ»Ø²ÎÊý£º	
    192          //		        ·µ»ØÖµ:	·Ç0,·¢ËÍ³É¹¦(µÃµ½ÁËÆÚ´ýµÄÓ¦´ð½á¹û)
    193          //       			  0,·¢ËÍÊ§°Ü
    194          //
    195          //	ËµÃ÷£º		
    196          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    197          uint8_t* WiFi_Send_Cmd(uint8_t *cmd,uint8_t *ack,uint16_t waittime)
   \                     WiFi_Send_Cmd:
    198          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 4,R4
   \   00000B   8D..         MOV     ?V0 + 5,R5
   \   00000D   7410         MOV     A,#0x10
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 1,A
    199              static uint8_t len = 0;	//´æ·ÅÊý¾Ý³¤¶È
    200              static uint16_t j = 0;
    201              char *strx=0;
   \   000019   75..00       MOV     ?V0 + 2,#0x0
   \   00001C   75..00       MOV     ?V0 + 3,#0x0
    202            
    203              len = strlen((char *)cmd);	//»ñÈ¡Êý¾Ý³¤¶È
   \   00001F                ; Setup parameters for call to function strlen
   \   00001F   12....       LCALL   ??strlen?relay
   \   000022   EA           MOV     A,R2
   \   000023   90....       MOV     DPTR,#??len
   \   000026   F0           MOVX    @DPTR,A
    204            
    205              memset((void*)USART0_RX_BUF,0,USART0_REC_LEN);//Çå¿ÕÊý×é
   \   000027                ; Setup parameters for call to function memset
   \   000027   75..C8       MOV     ?V0 + 6,#-0x38
   \   00002A   75..00       MOV     ?V0 + 7,#0x0
   \   00002D   78..         MOV     R0,#?V0 + 6
   \   00002F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000032   7C00         MOV     R4,#0x0
   \   000034   7D00         MOV     R5,#0x0
   \   000036   7A..         MOV     R2,#USART0_RX_BUF & 0xff
   \   000038   7B..         MOV     R3,#(USART0_RX_BUF >> 8) & 0xff
   \   00003A   12....       LCALL   ??memset?relay
   \   00003D   7402         MOV     A,#0x2
   \   00003F   12....       LCALL   ?DEALLOC_XSTACK8
    206              
    207              USART0_SendString(cmd,len); //´®¿Ú0·¢ËÍÊý¾Ý
   \   000042                ; Setup parameters for call to function USART0_SendString
   \   000042   90....       MOV     DPTR,#??len
   \   000045   E0           MOVX    A,@DPTR
   \   000046   FC           MOV     R4,A
   \   000047   7D00         MOV     R5,#0x0
   \   000049   EE           MOV     A,R6
   \   00004A   FA           MOV     R2,A
   \   00004B   EF           MOV     A,R7
   \   00004C   FB           MOV     R3,A
   \   00004D   12....       LCALL   ??USART0_SendString?relay
    208              
    209              for(j=0;j<waittime;j++)
   \   000050   90....       MOV     DPTR,#??j
   \   000053   E4           CLR     A
   \   000054   F0           MOVX    @DPTR,A
   \   000055   A3           INC     DPTR
   \   000056   8006         SJMP    ??CrossCallReturnLabel_3
   \                     ??WiFi_Send_Cmd_0:
   \   000058   90....       MOV     DPTR,#??j
   \   00005B   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   00005E   F0           MOVX    @DPTR,A
   \   00005F   90....       MOV     DPTR,#??j
   \   000062   C3           CLR     C
   \   000063   E0           MOVX    A,@DPTR
   \   000064   95..         SUBB    A,?V0 + 0
   \   000066   A3           INC     DPTR
   \   000067   E0           MOVX    A,@DPTR
   \   000068   95..         SUBB    A,?V0 + 1
   \   00006A   501D         JNC     ??WiFi_Send_Cmd_1
    210              {
    211                  delay_ms(50);
   \   00006C                ; Setup parameters for call to function delay_ms
   \   00006C   90....       MOV     DPTR,#__Constant_32
   \   00006F   12....       LCALL   ?XLOAD_R2345
   \   000072   12....       LCALL   ??delay_ms?relay
    212                  strx=strstr((const char*)USART0_RX_BUF,(const char*)ack);
   \   000075                ; Setup parameters for call to function strstr
   \   000075   AC..         MOV     R4,?V0 + 4
   \   000077   AD..         MOV     R5,?V0 + 5
   \   000079   7A..         MOV     R2,#USART0_RX_BUF & 0xff
   \   00007B   7B..         MOV     R3,#(USART0_RX_BUF >> 8) & 0xff
   \   00007D   12....       LCALL   ??strstr?relay
   \   000080   8A..         MOV     ?V0 + 2,R2
   \   000082   8B..         MOV     ?V0 + 3,R3
    213                  if(strx)
   \   000084   EA           MOV     A,R2
   \   000085   45..         ORL     A,?V0 + 3
   \   000087   60CF         JZ      ??WiFi_Send_Cmd_0
    214                    break;
    215              }
    216          
    217              USART0_RX_STA=0;
   \                     ??WiFi_Send_Cmd_1:
   \   000089   90....       MOV     DPTR,#USART0_RX_STA
   \   00008C   E4           CLR     A
   \   00008D   F0           MOVX    @DPTR,A
   \   00008E   A3           INC     DPTR
   \   00008F   F0           MOVX    @DPTR,A
    218              return (uint8_t*)strx;
   \   000090   AA..         MOV     R2,?V0 + 2
   \   000092   AB..         MOV     R3,?V0 + 3
   \   000094   7F08         MOV     R7,#0x8
   \   000096   02....       LJMP    ?BANKED_LEAVE_XDATA
    219          }

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??len:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??j:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    220          
    221          //==========================================================
    222          //	º¯ÊýÃû³Æ£º	USART0_IRQHand()
    223          //
    224          //	º¯Êý¹¦ÄÜ£º	´¦Àí´®¿Ú0Êý¾Ý
    225          //
    226          //	Èë¿Ú²ÎÊý£º	ÎÞ
    227          //              
    228          //	·µ»Ø²ÎÊý£º	ÎÞ
    229          //
    230          //	ËµÃ÷£º				
    231          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    232          void USART0_IRQHand(void)
   \                     USART0_IRQHand:
    233          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    234            static uint16_t Command;	//ÔÆÆ½Ì¨ÏÂ·¢ÃüÁî
    235            
    236            if(USART0_RX_STA == 0x8000)
   \   000005   90....       MOV     DPTR,#USART0_RX_STA
   \   000008   E0           MOVX    A,@DPTR
   \   000009   7004         JNZ     ??USART0_IRQHand_0
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   6480         XRL     A,#0x80
   \                     ??USART0_IRQHand_0:
   \   00000F   6003         JZ      $+5
   \   000011   02....       LJMP    ??USART0_IRQHand_1 & 0xFFFF
    237            {
    238              Command = ((USART0_RX_BUF[2]-0x30)*1000)+((USART0_RX_BUF[3]-0x30)*100)
    239              +((USART0_RX_BUF[4]-0x30)*10)+(USART0_RX_BUF[5]-0x30);//»ñÈ¡Æ½Ì¨ÏÂ·¢ÃüÁîÂë
   \   000014   90....       MOV     DPTR,#USART0_RX_BUF + 2
   \   000017   E0           MOVX    A,@DPTR
   \   000018   F8           MOV     R0,A
   \   000019   75F0E8       MOV     B,#-0x18
   \   00001C   A4           MUL     AB
   \   00001D   C8           XCH     A,R0
   \   00001E   AAF0         MOV     R2,B
   \   000020   75F003       MOV     B,#0x3
   \   000023   A4           MUL     AB
   \   000024   2A           ADD     A,R2
   \   000025   F9           MOV     R1,A
   \   000026   A3           INC     DPTR
   \   000027   E0           MOVX    A,@DPTR
   \   000028   75F064       MOV     B,#0x64
   \   00002B   A4           MUL     AB
   \   00002C   FA           MOV     R2,A
   \   00002D   ABF0         MOV     R3,B
   \   00002F   E8           MOV     A,R0
   \   000030   2A           ADD     A,R2
   \   000031   F8           MOV     R0,A
   \   000032   E9           MOV     A,R1
   \   000033   3B           ADDC    A,R3
   \   000034   F9           MOV     R1,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   75F00A       MOV     B,#0xa
   \   00003A   A4           MUL     AB
   \   00003B   FA           MOV     R2,A
   \   00003C   ABF0         MOV     R3,B
   \   00003E   E8           MOV     A,R0
   \   00003F   2A           ADD     A,R2
   \   000040   F8           MOV     R0,A
   \   000041   E9           MOV     A,R1
   \   000042   3B           ADDC    A,R3
   \   000043   F9           MOV     R1,A
   \   000044   A3           INC     DPTR
   \   000045   E0           MOVX    A,@DPTR
   \   000046   FA           MOV     R2,A
   \   000047   E8           MOV     A,R0
   \   000048   2A           ADD     A,R2
   \   000049   F8           MOV     R0,A
   \   00004A   E9           MOV     A,R1
   \   00004B   3400         ADDC    A,#0x0
   \   00004D   F9           MOV     R1,A
   \   00004E   E8           MOV     A,R0
   \   00004F   24B0         ADD     A,#-0x50
   \   000051   F8           MOV     R0,A
   \   000052   E9           MOV     A,R1
   \   000053   342F         ADDC    A,#0x2f
   \   000055   F9           MOV     R1,A
   \   000056   90....       MOV     DPTR,#??Command
   \   000059   E8           MOV     A,R0
   \   00005A   F0           MOVX    @DPTR,A
   \   00005B   A3           INC     DPTR
   \   00005C   E9           MOV     A,R1
   \   00005D   F0           MOVX    @DPTR,A
    240            
    241              switch(Command)
   \   00005E   90....       MOV     DPTR,#??Command
   \   000061   E0           MOVX    A,@DPTR
   \   000062   F5..         MOV     ?V0 + 0,A
   \   000064   A3           INC     DPTR
   \   000065   E0           MOVX    A,@DPTR
   \   000066   F5..         MOV     ?V0 + 1,A
   \   000068   78..         MOV     R0,#?V0 + 0
   \   00006A   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for USART0_IRQHand>_0`:
   \   00006D   0000         DW        0
   \   00006F   0800         DW        8
   \   000071   1011         DW        4368
   \   000073   ....         DW        ??USART0_IRQHand_2
   \   000075   1111         DW        4369
   \   000077   ....         DW        ??USART0_IRQHand_3
   \   000079   2011         DW        4384
   \   00007B   ....         DW        ??USART0_IRQHand_4
   \   00007D   2111         DW        4385
   \   00007F   ....         DW        ??USART0_IRQHand_5
   \   000081   3011         DW        4400
   \   000083   ....         DW        ??USART0_IRQHand_6
   \   000085   3111         DW        4401
   \   000087   ....         DW        ??USART0_IRQHand_7
   \   000089   4011         DW        4416
   \   00008B   ....         DW        ??USART0_IRQHand_8
   \   00008D   4111         DW        4417
   \   00008F   ....         DW        ??USART0_IRQHand_9
   \   000091   ....         DW        ??USART0_IRQHand_10
    242              {
    243                case LED_ON1:
    244                  Command_LED[0] = 1;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_3:
   \   000093   90....       MOV     DPTR,#Command_LED
   \                     ??USART0_IRQHand_11:
   \   000096   7401         MOV     A,#0x1
   \   000098   8022         SJMP    ??USART0_IRQHand_12
    245                  break;
    246                case LED_OFF1:
    247                  Command_LED[0] = 0;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_2:
   \   00009A   90....       MOV     DPTR,#Command_LED
   \   00009D   801C         SJMP    ??USART0_IRQHand_13
    248                  break;
    249                case LED_ON2:
    250                  Command_LED[1] = 1;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_5:
   \   00009F   90....       MOV     DPTR,#Command_LED + 1
   \   0000A2   80F2         SJMP    ??USART0_IRQHand_11
    251                  break;
    252                case LED_OFF2:
    253                  Command_LED[1] = 0;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_4:
   \   0000A4   90....       MOV     DPTR,#Command_LED + 1
   \   0000A7   8012         SJMP    ??USART0_IRQHand_13
    254                  break;
    255                case LED_ON3:
    256                  Command_LED[2] = 1;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_7:
   \   0000A9   90....       MOV     DPTR,#Command_LED + 2
   \   0000AC   80E8         SJMP    ??USART0_IRQHand_11
    257                  break;
    258                case LED_OFF3:
    259                  Command_LED[2] = 0;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_6:
   \   0000AE   90....       MOV     DPTR,#Command_LED + 2
   \   0000B1   8008         SJMP    ??USART0_IRQHand_13
    260                  break;
    261                case LED_ON4:
    262                  Command_LED[3] = 1;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_9:
   \   0000B3   90....       MOV     DPTR,#Command_LED + 3
   \   0000B6   80DE         SJMP    ??USART0_IRQHand_11
    263                  break;
    264                case LED_OFF4:
    265                  Command_LED[3] = 0;	//½«ÃüÁîÂë×°ÔØµ½LEDÃüÁîÂëÖÐ
   \                     ??USART0_IRQHand_8:
   \   0000B8   90....       MOV     DPTR,#Command_LED + 3
   \                     ??USART0_IRQHand_13:
   \   0000BB   E4           CLR     A
   \                     ??USART0_IRQHand_12:
   \   0000BC   F0           MOVX    @DPTR,A
    266                  break;
    267                default: break;
    268              }
    269              memset((void*)USART0_RX_BUF,0,10);//Çå¿ÕÊý×é
   \                     ??USART0_IRQHand_10:
   \   0000BD                ; Setup parameters for call to function memset
   \   0000BD   75..0A       MOV     ?V0 + 0,#0xa
   \   0000C0   75..00       MOV     ?V0 + 1,#0x0
   \   0000C3   78..         MOV     R0,#?V0 + 0
   \   0000C5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C8   7C00         MOV     R4,#0x0
   \   0000CA   7D00         MOV     R5,#0x0
   \   0000CC   7A..         MOV     R2,#USART0_RX_BUF & 0xff
   \   0000CE   7B..         MOV     R3,#(USART0_RX_BUF >> 8) & 0xff
   \   0000D0   12....       LCALL   ??memset?relay
   \   0000D3   7402         MOV     A,#0x2
   \   0000D5   12....       LCALL   ?DEALLOC_XSTACK8
    270              USART0_RX_STA = 0;
   \   0000D8   90....       MOV     DPTR,#USART0_RX_STA
   \   0000DB   E4           CLR     A
   \   0000DC   F0           MOVX    @DPTR,A
   \   0000DD   A3           INC     DPTR
   \   0000DE   F0           MOVX    @DPTR,A
    271            }
    272          }
   \                     ??USART0_IRQHand_1:
   \   0000DF   02....       LJMP    ?Subroutine2 & 0xFFFF

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Command:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    273          
    274          #endif
    275          
    276          
    277          #if UART1   //Ê¹ÄÜ½ÓÊÕ
    278          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    279          unsigned char USART1_RX_BUF[USART1_REC_LEN];    //½ÓÊÕ»º³å,×î´óUSART1_REC_LEN¸ö×Ö½Ú.
   \                     USART1_RX_BUF:
   \   000000                DS 200
   \   0000C8                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    280          unsigned int  USART1_RX_STA=0;       		//½ÓÊÕ×´Ì¬±ê¼Ç	
   \                     USART1_RX_STA:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    281          
    282          //==========================================================
    283          //	º¯ÊýÃû³Æ£º	USRT1_Init()
    284          //
    285          //	º¯Êý¹¦ÄÜ£º	´®¿Ú1³õÊ¼»¯º¯Êý
    286          //
    287          //	Èë¿Ú²ÎÊý£º	ÎÞ
    288          //
    289          //	·µ»Ø²ÎÊý£º	ÎÞ
    290          //
    291          //	ËµÃ÷£º		
    292          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    293          void USRT1_Init(void)
   \                     USRT1_Init:
    294          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    295            P2DIR = 0x40;
   \   000000   75FF40       MOV     0xff,#0x40
    296            PERCFG = 0x00;    //´®¿Ú1µÄÒý½ÅÓ³Éäµ½Î»ÖÃ1£¬¼´P0_4ºÍP0_5
   \   000003   75F100       MOV     0xf1,#0x0
    297            P0SEL |= 0x30;    //½«P0_4ºÍP0_5¶Ë¿ÚÉèÖÃ³ÉÍâÉè¹¦ÄÜ
   \   000006   43F330       ORL     0xf3,#0x30
    298            U1BAUD = 216;     //32MHzµÄÏµÍ³Ê±ÖÓ²úÉú115200BPSµÄ²¨ÌØÂÊ
   \   000009   75FAD8       MOV     0xfa,#-0x28
    299            U1GCR = 11;
   \   00000C   75FC0B       MOV     0xfc,#0xb
    300            U1UCR = 0x80;     //½ûÖ¹Á÷¿Ø£¬8Î»Êý¾Ý£¬Çå³ý»º³åÆ÷
   \   00000F   75FB80       MOV     0xfb,#-0x80
    301            U1CSR = 0xC0;     //Ñ¡ÔñUARTÄ£Ê½£¬Ê¹ÄÜ½ÓÊÕÆ÷
   \   000012   75F8C0       MOV     0xf8,#-0x40
    302            UTX1IF = 0;       //Çå³ýTX·¢ËÍÖÐ¶Ï±êÖ¾
   \   000015   C2EA         CLR     0xe8.2
    303            URX1IF = 0;       //Çå³ýRX½ÓÊÕÖÐ¶Ï±êÖ¾
   \   000017   C28F         CLR     0x88.7
    304            URX1IE = 1;       //Ê¹ÄÜURAT1µÄ½ÓÊÕÖÐ¶Ï
   \   000019   D2AB         SETB    0xa8.3
    305            EA = 1;           //Ê¹ÄÜ×ÜÖÐ¶Ï
   \   00001B   02....       LJMP    ?Subroutine1 & 0xFFFF
   \   00001E                REQUIRE P2DIR
   \   00001E                REQUIRE PERCFG
   \   00001E                REQUIRE P0SEL
   \   00001E                REQUIRE U1BAUD
   \   00001E                REQUIRE U1GCR
   \   00001E                REQUIRE U1UCR
   \   00001E                REQUIRE _A_U1CSR
   \   00001E                REQUIRE _A_IRCON2
   \   00001E                REQUIRE _A_TCON
   \   00001E                REQUIRE _A_IEN0
    306          }
    307          
    308          //==========================================================
    309          //	º¯ÊýÃû³Æ£º	UR1_RecvInt()
    310          //
    311          //	º¯Êý¹¦ÄÜ£º	UR1½ÓÊÕÖÐ¶Ï·þÎñº¯Êý
    312          //
    313          //	Èë¿Ú²ÎÊý£º	ÎÞ
    314          //
    315          //	·µ»Ø²ÎÊý£º	ÎÞ
    316          //
    317          //	ËµÃ÷£º		
    318          //==========================================================
    319          #pragma vector = URX1_VECTOR

   \                                 In  segment NEAR_CODE, align 1, keep-with-next
    320          __interrupt void UR1_RecvInt()
   \                     UR1_RecvInt:
    321          {
   \   000000   C0E0         PUSH    A
   \   000002   74F2         MOV     A,#-0xe
   \   000004   12....       LCALL   ?INTERRUPT_ENTER_XSP
   \   000007                ; Saved register size: 14
   \   000007                ; Auto size: 0
    322            URX1IF = 0;                   //Çå³ýRX½ÓÊÕÖÐ¶Ï±êÖ¾
   \   000007   C28F         CLR     0x88.7
    323            
    324            if((USART1_RX_STA&0x8000)==0)	//½ÓÊÕÎ´Íê³É
   \   000009   90....       MOV     DPTR,#USART1_RX_STA + 1
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   5480         ANL     A,#0x80
   \   00000F   7005         JNZ     ??UR1_RecvInt_0
    325            {
    326                Rs485_Receive(U1DBUF);	//½øÈë485½ÓÊÕº¯Êý
   \   000011                ; Setup parameters for call to function Rs485_Receive
   \   000011   A9F9         MOV     R1,0xf9
   \   000013   12....       LCALL   ??Rs485_Receive?relay
    327            } 
    328          }
   \                     ??UR1_RecvInt_0:
   \   000016   80..         SJMP    ?Subroutine3
   \   000018                REQUIRE _A_TCON
   \   000018                REQUIRE U1DBUF
    329          
    330          //==========================================================
    331          //	º¯ÊýÃû³Æ£º	USART1_SendByte()
    332          //
    333          //	º¯Êý¹¦ÄÜ£º	´®¿Ú1·¢ËÍµ¥×Ö½Úº¯Êý
    334          //
    335          //	Èë¿Ú²ÎÊý£º	ÎÞ
    336          //
    337          //	·µ»Ø²ÎÊý£º	ÎÞ
    338          //
    339          //	ËµÃ÷£º		
    340          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    341          void USART1_SendByte(unsigned char dat)
   \                     USART1_SendByte:
    342          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    343            U1DBUF = dat;         //½«Òª·¢ËÍµÄ1×Ö½ÚÊý¾ÝÐ´ÈëU1DBUF
   \   000000   89F9         MOV     0xf9,R1
    344            while(!UTX1IF);       //µÈ´ýTXÖÐ¶Ï±êÖ¾£¬¼´Êý¾Ý·¢ËÍÍê³É
   \                     ??USART1_SendByte_0:
   \   000002   A2EA         MOV     C,0xe8.2
   \   000004   50FC         JNC     ??USART1_SendByte_0
    345            UTX1IF = 0;           //Çå³ýTXÖÐ¶Ï±êÖ¾£¬×¼±¸ÏÂÒ»´Î·¢ËÍ
   \   000006   C2EA         CLR     0xe8.2
    346          }
   \   000008   02....       LJMP    ?BRET
   \   00000B                REQUIRE U1DBUF
   \   00000B                REQUIRE _A_IRCON2
    347          
    348          //==========================================================
    349          //	º¯ÊýÃû³Æ£º	USART1_SendString()
    350          //
    351          //	º¯Êý¹¦ÄÜ£º	´®¿Ú1·¢ËÍ×Ö·û´®º¯Êý
    352          //
    353          //	Èë¿Ú²ÎÊý£º	*str: ·¢ËÍµÄÊý¾Ý
    354          //                      Len:  Êý¾Ý³¤¶È
    355          //          
    356          //	·µ»Ø²ÎÊý£º	ÎÞ
    357          //
    358          //	ËµÃ÷£º		
    359          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    360          void USART1_SendString(unsigned char *str,uint16_t Len)
   \                     USART1_SendString:
    361          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   8C..         MOV     ?V0 + 0,R4
   \   00000B   8D..         MOV     ?V0 + 1,R5
   \   00000D   8012         SJMP    ??USART1_SendString_0
    362            while(Len--)
    363            {
    364              USART1_SendByte(*str++);    //Öð¸ö·¢ËÍ×Ö·û´®ÖÐµÄ×Ö½Ú
   \                     ??USART1_SendString_1:
   \   00000F                ; Setup parameters for call to function USART1_SendByte
   \   00000F   8E82         MOV     DPL,R6
   \   000011   8F83         MOV     DPH,R7
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F9           MOV     R1,A
   \   000015   12....       LCALL   ??USART1_SendByte?relay
   \   000018   8E82         MOV     DPL,R6
   \   00001A   8F83         MOV     DPH,R7
   \   00001C   A3           INC     DPTR
   \   00001D   AE82         MOV     R6,DPL
   \   00001F   AF83         MOV     R7,DPH
    365            }
   \                     ??USART1_SendString_0:
   \   000021   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000024   70E9         JNZ     ??USART1_SendString_1
    366          }
   \   000026   02....       LJMP    ?Subroutine2 & 0xFFFF
    367          
    368          //==========================================================
    369          //	º¯ÊýÃû³Æ£º	USART1_IRQHand()
    370          //
    371          //	º¯Êý¹¦ÄÜ£º	´¦Àí485Êý¾Ý
    372          //
    373          //	Èë¿Ú²ÎÊý£º	ÎÞ
    374          //              
    375          //	·µ»Ø²ÎÊý£º	ÎÞ
    376          //
    377          //	ËµÃ÷£º				
    378          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    379          void USART1_IRQHand(void)
   \                     USART1_IRQHand:
    380          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    381            if(!DataHandling_485(Addr_WiFi))	//485Êý¾Ý´¦Àí
   \   000004                ; Setup parameters for call to function DataHandling_485
   \   000004   7A01         MOV     R2,#0x1
   \   000006   7B1F         MOV     R3,#0x1f
   \   000008   12....       LCALL   ??DataHandling_485?relay
   \   00000B   E9           MOV     A,R1
   \   00000C   701E         JNZ     ??USART1_IRQHand_0
    382            {
    383              if(Rx_Stack.Src_Adr == Addr_SHT20)	//»ñÈ¡ÎÂÊª¶ÈÊý¾Ý
   \   00000E   90....       MOV     DPTR,#Rx_Stack + 5
   \   000011   E0           MOVX    A,@DPTR
   \   000012   6401         XRL     A,#0x1
   \   000014   7004         JNZ     ??USART1_IRQHand_1
   \   000016   A3           INC     DPTR
   \   000017   E0           MOVX    A,@DPTR
   \   000018   6416         XRL     A,#0x16
   \                     ??USART1_IRQHand_1:
   \   00001A   7010         JNZ     ??USART1_IRQHand_0
    384              {
    385                Temp = Rx_Stack.Data[0];		//ÎÂ¶ÈÊý¾Ý
   \   00001C   90....       MOV     DPTR,#Rx_Stack + 12
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   90....       MOV     DPTR,#Temp
   \   000023   F0           MOVX    @DPTR,A
    386                Humi = Rx_Stack.Data[1];		//Êª¶ÈÊý¾Ý
   \   000024   90....       MOV     DPTR,#Rx_Stack + 13
   \   000027   E0           MOVX    A,@DPTR
   \   000028   90....       MOV     DPTR,#Humi
   \   00002B   F0           MOVX    @DPTR,A
    387              }
    388            }
    389          }
   \                     ??USART1_IRQHand_0:
   \   00002C   02....       LJMP    ?Subroutine0 & 0xFFFF
    390          
    391          //==========================================================
    392          //	º¯ÊýÃû³Æ£º	USART_Data_Send()
    393          //
    394          //	º¯Êý¹¦ÄÜ£º	´®¿ÚÊý¾Ý·¢ËÍº¯Êý
    395          //
    396          //	Èë¿Ú²ÎÊý£º	ÎÞ
    397          //
    398          //	·µ»Ø²ÎÊý£º	ÎÞ
    399          //
    400          //	ËµÃ÷£º
    401          //==========================================================

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    402          void USART_Data_Send(void)
   \                     USART_Data_Send:
    403          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    404            static uint8_t Send_Flag = 0;
    405            
    406            if(Task_Count>=200 && Send_Flag == 0)		//200ms	¿ØÖÆLEDÄ£¿é
   \   000005   90....       MOV     DPTR,#__Constant_c8
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?L_MOV_X
   \   00000D   7583..       MOV     DPH,#(Task_Count >> 8) & 0xff
   \   000010   7582..       MOV     DPL,#Task_Count & 0xff
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?UL_GT_X
   \   000018   4036         JC      ??USART_Data_Send_0
   \   00001A   90....       MOV     DPTR,#??Send_Flag
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   7030         JNZ     ??USART_Data_Send_0
    407            {
    408              Rs485_Send(Addr_WiFi,Addr_LED,LED_Control,4,Command_LED);
   \   000020                ; Setup parameters for call to function Rs485_Send
   \   000020   75....       MOV     ?V0 + 0,#Command_LED & 0xff
   \   000023   75....       MOV     ?V0 + 1,#(Command_LED >> 8) & 0xff
   \   000026   78..         MOV     R0,#?V0 + 0
   \   000028   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002B   75..00       MOV     ?V0 + 0,#0x0
   \   00002E   75..11       MOV     ?V0 + 1,#0x11
   \   000031   78..         MOV     R0,#?V0 + 0
   \   000033   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000036   7904         MOV     R1,#0x4
   \   000038   7C01         MOV     R4,#0x1
   \   00003A   7D11         MOV     R5,#0x11
   \   00003C   7A01         MOV     R2,#0x1
   \   00003E   7B1F         MOV     R3,#0x1f
   \   000040   12....       LCALL   ??Rs485_Send?relay
   \   000043   7404         MOV     A,#0x4
   \   000045   12....       LCALL   ?DEALLOC_XSTACK8
    409              Send_Flag = 1;
   \   000048   90....       MOV     DPTR,#??Send_Flag
   \   00004B   7401         MOV     A,#0x1
   \   00004D   F0           MOVX    @DPTR,A
   \   00004E   8056         SJMP    ??USART_Data_Send_1
    410            }
    411            else if(Task_Count>=300 && Send_Flag == 1)	//300ms »ñÈ¡ÎÂÊª¶ÈÊý¾Ý
   \                     ??USART_Data_Send_0:
   \   000050   90....       MOV     DPTR,#__Constant_12c
   \   000053   78..         MOV     R0,#?V0 + 0
   \   000055   12....       LCALL   ?L_MOV_X
   \   000058   7583..       MOV     DPH,#(Task_Count >> 8) & 0xff
   \   00005B   7582..       MOV     DPL,#Task_Count & 0xff
   \   00005E   78..         MOV     R0,#?V0 + 0
   \   000060   12....       LCALL   ?UL_GT_X
   \   000063   4041         JC      ??USART_Data_Send_1
   \   000065   90....       MOV     DPTR,#??Send_Flag
   \   000068   E0           MOVX    A,@DPTR
   \   000069   6401         XRL     A,#0x1
   \   00006B   7039         JNZ     ??USART_Data_Send_1
    412            {
    413              Rs485_Send(Addr_WiFi,Addr_SHT20,SHT20_Get_All,0,"");
   \   00006D                ; Setup parameters for call to function Rs485_Send
   \   00006D   75....       MOV     ?V0 + 0,#`?<Constant "">` & 0xff
   \   000070   75....       MOV     ?V0 + 1,#(`?<Constant "">` >> 8) & 0xff
   \   000073   78..         MOV     R0,#?V0 + 0
   \   000075   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000078   75..30       MOV     ?V0 + 0,#0x30
   \   00007B   75..16       MOV     ?V0 + 1,#0x16
   \   00007E   78..         MOV     R0,#?V0 + 0
   \   000080   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000083   7900         MOV     R1,#0x0
   \   000085   7C01         MOV     R4,#0x1
   \   000087   7D16         MOV     R5,#0x16
   \   000089   7A01         MOV     R2,#0x1
   \   00008B   7B1F         MOV     R3,#0x1f
   \   00008D   12....       LCALL   ??Rs485_Send?relay
   \   000090   7404         MOV     A,#0x4
   \   000092   12....       LCALL   ?DEALLOC_XSTACK8
    414              Send_Flag = 0;
   \   000095   90....       MOV     DPTR,#??Send_Flag
   \   000098   E4           CLR     A
   \   000099   F0           MOVX    @DPTR,A
    415              Task_Count = 0;
   \   00009A   90....       MOV     DPTR,#__Constant_0
   \   00009D   12....       LCALL   ?XLOAD_R2345
   \   0000A0   90....       MOV     DPTR,#Task_Count
   \   0000A3   12....       LCALL   ?XSTORE_R2345
    416            }
    417          
    418            if(Send_OneNET_Count>=1550)
   \                     ??USART_Data_Send_1:
   \   0000A6   90....       MOV     DPTR,#__Constant_60e
   \   0000A9   78..         MOV     R0,#?V0 + 0
   \   0000AB   12....       LCALL   ?L_MOV_X
   \   0000AE   7583..       MOV     DPH,#(Send_OneNET_Count >> 8) & 0xff
   \   0000B1   7582..       MOV     DPL,#Send_OneNET_Count & 0xff
   \   0000B4   78..         MOV     R0,#?V0 + 0
   \   0000B6   12....       LCALL   ?UL_GT_X
   \   0000B9   4040         JC      ??USART_Data_Send_2
    419            {
    420              sprintf((char *)Send_OneNET,"%d%d",Temp,Humi);
   \   0000BB                ; Setup parameters for call to function sprintf
   \   0000BB   90....       MOV     DPTR,#Humi
   \   0000BE   E0           MOVX    A,@DPTR
   \   0000BF   F5..         MOV     ?V0 + 0,A
   \   0000C1   75..00       MOV     ?V0 + 1,#0x0
   \   0000C4   78..         MOV     R0,#?V0 + 0
   \   0000C6   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C9   90....       MOV     DPTR,#Temp
   \   0000CC   E0           MOVX    A,@DPTR
   \   0000CD   F5..         MOV     ?V0 + 0,A
   \   0000CF   78..         MOV     R0,#?V0 + 0
   \   0000D1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D4   7C..         MOV     R4,#`?<Constant "%d%d">` & 0xff
   \   0000D6   7D..         MOV     R5,#(`?<Constant "%d%d">` >> 8) & 0xff
   \   0000D8   7A..         MOV     R2,#Send_OneNET & 0xff
   \   0000DA   7B..         MOV     R3,#(Send_OneNET >> 8) & 0xff
   \   0000DC   12....       LCALL   ??sprintf?relay
   \   0000DF   7404         MOV     A,#0x4
   \   0000E1   12....       LCALL   ?DEALLOC_XSTACK8
    421              USART0_SendString(Send_OneNET,4);//·¢ËÍÊý¾Ýµ½OneNET
   \   0000E4                ; Setup parameters for call to function USART0_SendString
   \   0000E4   7C04         MOV     R4,#0x4
   \   0000E6   7D00         MOV     R5,#0x0
   \   0000E8   7A..         MOV     R2,#Send_OneNET & 0xff
   \   0000EA   7B..         MOV     R3,#(Send_OneNET >> 8) & 0xff
   \   0000EC   12....       LCALL   ??USART0_SendString?relay
    422              Send_OneNET_Count = 0;
   \   0000EF   90....       MOV     DPTR,#__Constant_0
   \   0000F2   12....       LCALL   ?XLOAD_R2345
   \   0000F5   90....       MOV     DPTR,#Send_OneNET_Count
   \   0000F8   12....       LCALL   ?XSTORE_R2345
    423            }
    424          }
   \                     ??USART_Data_Send_2:
   \   0000FB   7F04         MOV     R7,#0x4
   \   0000FD   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Send_Flag:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment INTVEC, offset 0x13, root
   \                     `??UR0_RecvInt??INTVEC 19`:
   \   000013   02....       LJMP       (UR0_RecvInt)

   \                                 In  segment INTVEC, offset 0x1b, root
   \                     `??UR1_RecvInt??INTVEC 27`:
   \   00001B   02....       LJMP       (UR1_RecvInt)

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USRT0_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USRT0_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART0_Receive?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART0_Receive

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART0_SendByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART0_SendByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART0_SendString?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART0_SendString

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??WiFi_Send_Cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    WiFi_Send_Cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART0_IRQHand?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART0_IRQHand

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USRT1_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USRT1_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART1_SendByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART1_SendByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART1_SendString?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART1_SendString

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART1_IRQHand?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART1_IRQHand

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??USART_Data_Send?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USART_Data_Send

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%d%d">`:
   \   000000   25642564     DB "%d%d"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_32:
   \   000000   32000000     DD 50

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c8:
   \   000000   C8000000     DD 200

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_12c:
   \   000000   2C010000     DD 300

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_0:
   \   000000   00000000     DD 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_60e:
   \   000000   0E060000     DD 1550
    425          
    426          #endif

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     UR0_RecvInt                1      0     14
       -> USART0_Receive        0      0     28
     UR1_RecvInt                0      0     14
       -> Rs485_Receive         0      0     28
     USART0_IRQHand             0      0     12
       -> memset                0      0     24
     USART0_Receive             3      0     14
     USART0_SendByte            0      0     10
     USART0_SendString          0      0     26
       -> USART0_SendByte       0      0     20
     USART1_IRQHand             2      0      0
       -> DataHandling_485      4      0      0
     USART1_SendByte            0      0     10
     USART1_SendString          0      0     10
       -> USART1_SendByte       0      0     20
     USART_Data_Send            2      0     16
       -> Rs485_Send            0      0     32
       -> Rs485_Send            0      0     32
       -> sprintf               0      0     32
       -> USART0_SendString     0      0     24
     USRT0_Init                 0      0      0
     USRT1_Init                 0      0      0
     WiFi_Send_Cmd              0      0     20
       -> strlen                0      0     32
       -> memset                0      0     36
       -> USART0_SendString     0      0     32
       -> delay_ms              0      0     32
       -> strstr                0      0     32


   Segment part sizes:

     Function/Label            Bytes
     --------------            -----
     U0CSR                        1
     _A_TCON                      1
     _A_IEN0                      1
     U0DBUF                       1
     U0BAUD                       1
     U0UCR                        1
     U0GCR                        1
     _A_IRCON2                    1
     PERCFG                       1
     P0SEL                        1
     _A_U1CSR                     1
     U1DBUF                       1
     U1BAUD                       1
     U1UCR                        1
     U1GCR                        1
     P2DIR                        1
     WiFi_AT_STA                  1
     USART0_RX_BUF              200
     USART0_RX_STA                2
     Temp                         1
     Humi                         1
     Command_LED                 10
     Send_OneNET                 10
     USRT0_Init                  24
     ?Subroutine1                 5
     UR0_RecvInt                 89
     ?Subroutine3                 5
     USART0_Receive             151
     ?Subroutine0                 7
     ?Subroutine5                 9
     End_Flag                     1
     Header_Flag                  1
     Receive_Flag                 1
     USART0_SendByte             11
     USART0_SendString           38
     ?Subroutine2                 5
     ?Subroutine4                17
     WiFi_Send_Cmd              153
     len                          1
     j                            2
     USART0_IRQHand             226
     Command                      2
     USART1_RX_BUF              200
     USART1_RX_STA                2
     USRT1_Init                  30
     UR1_RecvInt                 24
     USART1_SendByte             11
     USART1_SendString           41
     USART1_IRQHand              47
     USART_Data_Send            256
     Send_Flag                    1
     ??UR0_RecvInt??INTVEC 19     3
     ??UR1_RecvInt??INTVEC 27     3
     ??USRT0_Init?relay           6
     ??USART0_Receive?relay       6
     ??USART0_SendByte?relay      6
     ??USART0_SendString?relay    6
     ??WiFi_Send_Cmd?relay        6
     ??USART0_IRQHand?relay       6
     ??USRT1_Init?relay           6
     ??USART1_SendByte?relay      6
     ??USART1_SendString?relay    6
     ??USART1_IRQHand?relay       6
     ??USART_Data_Send?relay      6
     ?<Constant "">               1
     ?<Constant "%d%d">           5
     __Constant_32                4
     __Constant_c8                4
     __Constant_12c               4
     __Constant_0                 4
     __Constant_60e               4

 
 1 031 bytes in segment BANKED_CODE
    66 bytes in segment BANK_RELAYS
     6 bytes in segment INTVEC
   118 bytes in segment NEAR_CODE
    16 bytes in segment SFR_AN
    26 bytes in segment XDATA_ROM_C
   436 bytes in segment XDATA_Z
 
 1 215 bytes of CODE  memory (+  6 bytes shared)
     6 bytes of CONST memory (+ 20 bytes shared)
     0 bytes of DATA  memory (+ 16 bytes shared)
   436 bytes of XDATA memory

Errors: none
Warnings: 1
