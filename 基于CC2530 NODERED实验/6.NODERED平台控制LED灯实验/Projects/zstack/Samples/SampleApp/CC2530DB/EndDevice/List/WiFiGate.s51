///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        01/May/2023  09:24:48 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Components\HARDWARE\WiFiGate.c                /
//    Command line       =  -f D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-L /
//                          ED¿ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB /
//                          \..\..\..\Tools\CC2530DB\f8wEndev.cfg             /
//                          (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS) -f   /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0   /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF11                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½ /
//                          Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Components\HARDWARE\Wi /
//                          FiGate.c -D NWK_AUTO_POLL -D ZTOOL_P1 -D          /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\En /
//                          dDevice\List\ -lA D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\C /
//                          C2530\NODERED-LED¿ØÖÆ\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\EndDevice\List\ --diag_suppress   /
//                          Pe001,Pa010 -o D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC25 /
//                          30\NODERED-LED¿ØÖÆ\Projects\zstack\Samples\Sample /
//                          App\CC2530DB\EndDevice\Obj\ -e --no_unroll        /
//                          --no_inline --no_tbaa --debug --core=plain        /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\   /
//                          -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-L /
//                          ED¿ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB /
//                          \..\SOURCE\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC25 /
//                          30\NODERED-LED¿ØÖÆ\Projects\zstack\Samples\Sample /
//                          App\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I          /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\MT\ -I                    /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I           /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I   /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\ -I        /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\OSAL\INCLUDE\ -I          /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\STACK\AF\ -I              /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\STACK\NWK\ -I             /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\STACK\SEC\ -I             /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\STACK\SAPI\ -I            /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\STACK\SYS\ -I             /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\STACK\ZDO\ -I             /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\ZMAC\F8W\ -I              /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\ZMAC\ -I                  /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\SERVICES\SADDR\ -I        /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\SERVICES\SDATA\ -I        /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\MAC\INCLUDE\ -I           /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I        /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I   /
//                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGL /
//                          E_CHIP\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\N /
//                          ODERED-LED¿ØÖÆ\Projects\zstack\Samples\SampleApp\ /
//                          CC2530DB\..\..\..\..\..\COMPONENTS\HARDWARE\ -Om  /
//    List file          =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ /
//                          ØÖÆ\Projects\zstack\Samples\SampleApp\CC2530DB\En /
//                          dDevice\List\WiFiGate.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME WiFiGate

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_ADD_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?UL_GT_X
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_Z

        PUBLIC ??SendToWiFiNetwork?relay
        FUNCTION ??SendToWiFiNetwork?relay,0203H
        PUBLIC ??WiFiGate_Init?relay
        FUNCTION ??WiFiGate_Init?relay,0203H
        PUBLIC ??WiFiGate_ProcessEvent?relay
        FUNCTION ??WiFiGate_ProcessEvent?relay,0203H
        PUBLIC ??WiFi_Send_ATCommand?relay
        FUNCTION ??WiFi_Send_ATCommand?relay,0203H
        PUBLIC NextEvent
        PUBWEAK P1DIR
        PUBWEAK P1SEL
        PUBLIC SendToWiFiNetwork
        FUNCTION SendToWiFiNetwork,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC Ticks_SendATCmd_Count
        PUBLIC WiFiCmdHandle
        PUBLIC WiFiGate_Init
        FUNCTION WiFiGate_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC WiFiGate_ProcessEvent
        FUNCTION WiFiGate_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC WiFiGate_TaskId
        PUBLIC WiFiModeInitDone
        PUBLIC WiFiRecvDataBuffer
        PUBLIC WiFiRecvLenght
        PUBLIC WiFi_Send_ATCommand
        FUNCTION WiFi_Send_ATCommand,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        PUBWEAK _A_P1
        PUBWEAK __Constant_0
        PUBWEAK __Constant_1
        PUBWEAK __Constant_14
        PUBWEAK __Constant_1e
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
osal_start_timerEx  SYMBOL "osal_start_timerEx"
UartInit            SYMBOL "UartInit"
printf              SYMBOL "printf"
memset              SYMBOL "memset"
HalUARTResetRxQueue SYMBOL "HalUARTResetRxQueue"
strlen              SYMBOL "strlen"
HalUARTWrite        SYMBOL "HalUARTWrite"
Hal_UART_RxBufLen   SYMBOL "Hal_UART_RxBufLen"
HalUARTRead         SYMBOL "HalUARTRead"
strstr              SYMBOL "strstr"
Send_LEDCtrl        SYMBOL "Send_LEDCtrl"
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
??HalUARTResetRxQueue?relay SYMBOL "?relay", HalUARTResetRxQueue
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??Hal_UART_RxBufLen?relay SYMBOL "?relay", Hal_UART_RxBufLen
??Send_LEDCtrl?relay SYMBOL "?relay", Send_LEDCtrl
??UartInit?relay    SYMBOL "?relay", UartInit
??memset?relay      SYMBOL "?relay", memset
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??printf?relay      SYMBOL "?relay", printf
??strlen?relay      SYMBOL "?relay", strlen
??strstr?relay      SYMBOL "?relay", strstr
SendToWiFiNetwork   SYMBOL "SendToWiFiNetwork"
??SendToWiFiNetwork?relay SYMBOL "?relay", SendToWiFiNetwork
WiFiGate_Init       SYMBOL "WiFiGate_Init"
??WiFiGate_Init?relay SYMBOL "?relay", WiFiGate_Init
WiFiGate_ProcessEvent SYMBOL "WiFiGate_ProcessEvent"
??WiFiGate_ProcessEvent?relay SYMBOL "?relay", WiFiGate_ProcessEvent
WiFi_Send_ATCommand SYMBOL "WiFi_Send_ATCommand"
??WiFi_Send_ATCommand?relay SYMBOL "?relay", WiFi_Send_ATCommand

        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN UartInit
        FUNCTION UartInit,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTResetRxQueue
        FUNCTION HalUARTResetRxQueue,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strlen
        FUNCTION strlen,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_UART_RxBufLen
        FUNCTION Hal_UART_RxBufLen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTRead
        FUNCTION HalUARTRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strstr
        FUNCTION strstr,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Send_LEDCtrl
        FUNCTION Send_LEDCtrl,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??HalUARTRead?relay
        FUNCTION ??HalUARTRead?relay,00H
        EXTERN ??HalUARTResetRxQueue?relay
        FUNCTION ??HalUARTResetRxQueue?relay,00H
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??Hal_UART_RxBufLen?relay
        FUNCTION ??Hal_UART_RxBufLen?relay,00H
        EXTERN ??Send_LEDCtrl?relay
        FUNCTION ??Send_LEDCtrl?relay,00H
        EXTERN ??UartInit?relay
        FUNCTION ??UartInit?relay,00H
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??printf?relay
        FUNCTION ??printf?relay,00H
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H
        EXTERN ??strstr?relay
        FUNCTION ??strstr?relay,00H

// D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-LED¿ØÖÆ\Components\HARDWARE\WiFiGate.c
//    1 #include "WiFiGate.h"

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
//    2 
//    3 #define WIFI_RECV_DATA_BUFFER_LEN 128

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    4 uint8 WiFiRecvDataBuffer[ WIFI_RECV_DATA_BUFFER_LEN ];
WiFiRecvDataBuffer:
        DS 128
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    5 uint8 WiFiRecvLenght = 0;
WiFiRecvLenght:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    6 uint8 NextEvent=0;
NextEvent:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    7 uint8 WiFiCmdHandle = 0;
WiFiCmdHandle:
        DS 1
        REQUIRE __INIT_XDATA_Z
//    8 
//    9 #define GET_RECV_LENGHT()        Hal_UART_RxBufLen(HAL_UART_PORT_0);
//   10 #define GET_RECV_DATA(b,l)       HalUARTRead(HAL_UART_PORT_0,b,l);
//   11 /*
//   12 WIFIÄ£¿é³õÊ¼»¯
//   13 */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   14 uint8 WiFiGate_TaskId = 0;
WiFiGate_TaskId:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   15 uint8 WiFiModeInitDone = 0;
WiFiModeInitDone:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   16 void WiFiGate_Init( uint8 task_id )
WiFiGate_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function WiFiGate_Init
        CODE
//   17 {
        FUNCALL WiFiGate_Init, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_Init, UartInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_Init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//   18   WiFiGate_TaskId = task_id;
        MOV     DPTR,#WiFiGate_TaskId
        MOVX    @DPTR,A
//   19   osal_start_timerEx( WiFiGate_TaskId, WIFI_PROCESS_PRODIC,2000); 
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x30
        MOV     R5,#0x7
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//   20   UartInit(HAL_UART_PORT_0,HAL_UART_BR_115200);
        ; Setup parameters for call to function UartInit
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   ??UartInit?relay
//   21   P1SEL &= ~(BV(5)|BV(6));
        ANL     0xf4,#0x9f
//   22   P1DIR |= BV(5)|BV(6);
        ORL     0xfe,#0x60
//   23   P1_5 = 1;
        SETB    0x90.5
//   24   P1_6 = 0;
        CLR     0x90.6
//   25   printf("wifi connect start\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "wifi connect start\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "wifi connect start\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//   26 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
        REQUIRE P1SEL
        REQUIRE P1DIR
        REQUIRE _A_P1
//   27 /*
//   28 send_times ·¢ËÍ´ÎÊý
//   29 */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   30 uint32 Ticks_SendATCmd_Count = 0;
Ticks_SendATCmd_Count:
        DS 4
        REQUIRE __INIT_XDATA_Z
//   31 static uint8 len;  

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   32 uint8 WiFi_Send_ATCommand(uint8 *buf,uint32 timeout,uint8 send_times,uint8 *expect)
WiFi_Send_ATCommand:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function WiFi_Send_ATCommand
        CODE
//   33 {
        FUNCALL WiFi_Send_ATCommand, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, HalUARTResetRxQueue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFi_Send_ATCommand, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 1,R1
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//   34     uint8 ret = WIFI_RSP_NULL;
        MOV     ?V0 + 0,#0x0
//   35     static uint8 state0 = 0,count = 0;
//   36     if(state0 == 0){
        MOV     DPTR,#??state0
        MOVX    A,@DPTR
        JNZ     ??WiFi_Send_ATCommand_0
//   37 		memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 4,#-0x80
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
//   38 		WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//   39 		HalUARTResetRxQueue();
        ; Setup parameters for call to function HalUARTResetRxQueue
        LCALL   ??HalUARTResetRxQueue?relay
//   40 		SEND_TO_WIFI(buf,strlen((const char*)buf)); 
        ; Setup parameters for call to function HalUARTWrite
        ; Setup parameters for call to function strlen
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??strlen?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//   41         printf("WiFi>>>:%s\r\n",buf);
        ; Setup parameters for call to function printf
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R2,#`?<Constant "WiFi>>>:%s\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "WiFi>>>:%s\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
//   42         state0 = 1;
        MOV     DPTR,#??state0
        MOV     A,#0x1
        MOVX    @DPTR,A
//   43         count++;
        MOV     DPTR,#??count
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
//   44 		Ticks_SendATCmd_Count = 0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPTR,#Ticks_SendATCmd_Count
        LCALL   ?XSTORE_R2345
//   45 		WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
??WiFi_Send_ATCommand_1:
        CLR     A
        LJMP    ??WiFi_Send_ATCommand_2 & 0xFFFF
//   46     }
//   47     else if(state0 == 1){
??WiFi_Send_ATCommand_0:
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??WiFi_Send_ATCommand_3 & 0xFFFF
//   48         if((++Ticks_SendATCmd_Count) >= timeout){ 
        MOV     DPTR,#__Constant_1
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     DPTR,#Ticks_SendATCmd_Count
        MOV     R0,#?V0 + 8
        LCALL   ?L_ADD_TO_X
        MOV     DPTR,#Ticks_SendATCmd_Count
        MOV     R0,#?V0 + 4
        LCALL   ?UL_GT_X
        JC      ??WiFi_Send_ATCommand_4
//   49             if(send_times == count){//¶à´Î·¢ËÍÖ®ºó »¹ÊÇÃ»ÓÐ·´Ó¦¾Í·µ»Ø
        MOV     DPTR,#??count
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
        JNZ     ??WiFi_Send_ATCommand_5
//   50                 ret = WIFI_RSP_TIMEOUT;
        MOV     ?V0 + 0,#0x1
//   51                 count = 0;
        CLR     A
        MOVX    @DPTR,A
//   52             }
//   53             state0 = 0;            
??WiFi_Send_ATCommand_5:
        MOV     DPTR,#??state0
        SJMP    ??WiFi_Send_ATCommand_1
//   54         }
//   55         else{
//   56 		  len = GET_RECV_LENGHT();
??WiFi_Send_ATCommand_4:
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV     R1,#0x0
        LCALL   ??Hal_UART_RxBufLen?relay
        MOV     A,R2
        MOV     DPTR,#len
        MOVX    @DPTR,A
//   57 		  if(len){
        MOVX    A,@DPTR
        JZ      ??WiFi_Send_ATCommand_6
//   58 			GET_RECV_DATA(&WiFiRecvDataBuffer[WiFiRecvLenght],len);
        ; Setup parameters for call to function HalUARTRead
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     DPTR,#WiFiRecvLenght
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#WiFiRecvDataBuffer & 0xff
        ADD     A,R0
        MOV     R2,A
        MOV     A,#(WiFiRecvDataBuffer >> 8) & 0xff
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#0x0
        LCALL   ??HalUARTRead?relay
//   59 			WiFiRecvLenght += len;
        MOV     DPTR,#len
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#WiFiRecvLenght
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
//   60 			if(WiFiRecvLenght >= WIFI_RECV_DATA_BUFFER_LEN){
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#-0x80
        JC      ??WiFi_Send_ATCommand_6
//   61 				WiFiRecvLenght = 0;
        CLR     A
        MOVX    @DPTR,A
//   62 			}				
//   63 		  }
//   64 		  	
//   65 		  if((expect)&&strstr((const char*)WiFiRecvDataBuffer,(const char*)expect)){
??WiFi_Send_ATCommand_6:
        MOV     A,R6
        ORL     A,R7
        JZ      ??WiFi_Send_ATCommand_3
        ; Setup parameters for call to function strstr
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??WiFi_Send_ATCommand_3
//   66 			ret = WIFI_RSP_OK;
        MOV     ?V0 + 0,#0x2
//   67 			state0 = 0;
        MOV     DPTR,#??state0
        CLR     A
        MOVX    @DPTR,A
//   68 			count = 0;      
        MOV     DPTR,#??count
??WiFi_Send_ATCommand_2:
        MOVX    @DPTR,A
//   69 		  }			
//   70         }//else
//   71     }
//   72     
//   73     return ret;
??WiFi_Send_ATCommand_3:
        MOV     R1,?V0 + 0
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//   74 }

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??state0:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??count:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   75 /*
//   76 wifiÍø¹Ø´¦ÀíÈÎÎñ£¬°üÀ¨³õÊ¼»¯WiFiÄ£¿é£¬½ÓÊÕÊý¾Ý
//   77 */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   78 static uint8 ConnectState = 0,len,*cptr;
ConnectState:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
len:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
cptr:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   79 uint16 WiFiGate_ProcessEvent( uint8 task_id, uint16 events )
WiFiGate_ProcessEvent:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function WiFiGate_ProcessEvent
        CODE
//   80 {
        FUNCALL WiFiGate_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, WiFi_Send_ATCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, WiFi_Send_ATCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, WiFi_Send_ATCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, WiFi_Send_ATCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, WiFi_Send_ATCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, WiFi_Send_ATCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, strstr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, Send_LEDCtrl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL WiFiGate_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   81 
//   82   (void)task_id;  // Intentionally unreferenced parameter
//   83 
//   84   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??WiFiGate_ProcessEvent_0
//   85   {//Èç¹ûÊÇÏµÍ³ÈÎÎñ
//   86     return (events ^ SYS_EVENT_MSG);
        MOV     A,R7
        XRL     A,#0x80
??WiFiGate_ProcessEvent_1:
        MOV     R3,A
        LJMP    ??WiFiGate_ProcessEvent_2 & 0xFFFF
//   87   }
//   88   else
//   89   {//Èç¹ûÊÇÓÃ»§×Ô¶¨ÒåÈÎÎñ
//   90 	if(events & WIFI_PROCESS_PRODIC){
??WiFiGate_ProcessEvent_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JC      $+5
        LJMP    ??WiFiGate_ProcessEvent_3 & 0xFFFF
//   91 	    osal_start_timerEx( WiFiGate_TaskId, WIFI_PROCESS_PRODIC,100);
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0x64
        MOV     R5,#0x0
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#WiFiGate_TaskId
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//   92 		switch(ConnectState)
        MOV     DPTR,#ConnectState
        MOVX    A,@DPTR
        JZ      ??WiFiGate_ProcessEvent_4
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_5
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_6 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_6 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_6 & 0xFFFF
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_7
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_8
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_9 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_10 & 0xFFFF
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_11 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_12 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_13 & 0xFFFF
        DEC     A
        JNZ     $+5
        LJMP    ??WiFiGate_ProcessEvent_14 & 0xFFFF
        LJMP    ??WiFiGate_ProcessEvent_15 & 0xFFFF
//   93 		{
//   94 			case 0:
//   95 				P1_5 = 0;
??WiFiGate_ProcessEvent_4:
        CLR     0x90.5
//   96 				ConnectState++;
        MOV     A,#0x1
??WiFiGate_ProcessEvent_16:
        MOVX    @DPTR,A
//   97 				break; 
        LJMP    ??WiFiGate_ProcessEvent_15 & 0xFFFF
//   98 			case 1:
//   99 				P1_5 = 1;
??WiFiGate_ProcessEvent_5:
        SETB    0x90.5
//  100 				ConnectState++; 
        MOV     A,#0x2
        SJMP    ??WiFiGate_ProcessEvent_16
//  101 				break;
//  102 			case 2:
//  103 			case 3:
//  104 			case 4:
//  105 				ConnectState++; 
//  106 				break;
//  107 			break;	  
//  108 			case 5:
//  109 				  switch(WiFi_Send_ATCommand("AT\r\n",20,5,"OK"))
??WiFiGate_ProcessEvent_7:
        ; Setup parameters for call to function WiFi_Send_ATCommand
        MOV     DPTR,#__Constant_14
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "OK">` & 0xff
        MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
        MOV     R1,#0x5
        MOV     R2,#`?<Constant "AT\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "AT\\r\\n">` >> 8) & 0xff
??WiFiGate_ProcessEvent_17:
        LCALL   ??WiFi_Send_ATCommand?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_18
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_6
        LJMP    ??WiFiGate_ProcessEvent_15 & 0xFFFF
//  110 				  {
//  111 					case WIFI_RSP_OK:
//  112 						 ConnectState++;
//  113 					break;
//  114 					case WIFI_RSP_TIMEOUT:
//  115 						 ConnectState = 0xff;
??WiFiGate_ProcessEvent_18:
        MOV     DPTR,#ConnectState
        MOV     A,#-0x1
        SJMP    ??WiFiGate_ProcessEvent_16
//  116 					break;  				  
//  117 				  }
//  118 				break;
//  119 			case 6:
//  120 				  switch(WiFi_Send_ATCommand("AT+CWMODE=3\r\n",20,5,"OK"))
??WiFiGate_ProcessEvent_8:
        ; Setup parameters for call to function WiFi_Send_ATCommand
        MOV     DPTR,#__Constant_14
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "OK">` & 0xff
        MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
        MOV     R1,#0x5
        MOV     R2,#`?<Constant "AT+CWMODE=3\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "AT+CWMODE=3\\r\\n">` >> 8) & 0xff
        LCALL   ??WiFi_Send_ATCommand?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_18
        DEC     A
        JZ      $+5
        LJMP    ??WiFiGate_ProcessEvent_15 & 0xFFFF
??WiFiGate_ProcessEvent_6:
        MOV     DPTR,#ConnectState
        MOVX    A,@DPTR
        INC     A
        SJMP    ??WiFiGate_ProcessEvent_16
//  121 				  {
//  122 					case WIFI_RSP_OK:
//  123 						 ConnectState++;
//  124 					break;
//  125 					case WIFI_RSP_TIMEOUT:
//  126 						 ConnectState = 0xff;
//  127 					break;  				  
//  128 				  }
//  129 				break;	
//  130 			case 7:
//  131 				  switch(WiFi_Send_ATCommand(WIFI_AP,30,10,"OK"))
??WiFiGate_ProcessEvent_9:
        ; Setup parameters for call to function WiFi_Send_ATCommand
        MOV     DPTR,#__Constant_1e
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "OK">` & 0xff
        MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
        MOV     R1,#0xa
        MOV     R2,#`?<Constant "AT+CWJAP=\\"zkk_2.4g\\",\\"...">` & 0xff
        MOV     R3,#(`?<Constant "AT+CWJAP=\\"zkk_2.4g\\",\\"...">` >> 8) & 0xff
        SJMP    ??WiFiGate_ProcessEvent_17
        CFI CFA_XSP16 add(XSP16, 10)
//  132 				  {
//  133 					case WIFI_RSP_OK:
//  134 						 ConnectState++;
//  135 					break;
//  136 					case WIFI_RSP_TIMEOUT:
//  137 						 ConnectState = 0xff;
//  138 					break;  				  
//  139 				  }
//  140 				break;
//  141 			case 8:
//  142 				  switch(WiFi_Send_ATCommand(OneNET_IP,20,5,"OK"))
??WiFiGate_ProcessEvent_10:
        ; Setup parameters for call to function WiFi_Send_ATCommand
        MOV     DPTR,#__Constant_14
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "OK">` & 0xff
        MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
        MOV     R1,#0x5
        MOV     R2,#`?<Constant "AT+CIPSTART=\\"TCP\\",\\"19...">` & 0xff
        MOV     R3,#(`?<Constant "AT+CIPSTART=\\"TCP\\",\\"19...">` >> 8) & 0xff
        LCALL   ??WiFi_Send_ATCommand?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        DEC     A
        JZ      ??WiFiGate_ProcessEvent_18
        DEC     A
        JZ      $+5
        LJMP    ??WiFiGate_ProcessEvent_15 & 0xFFFF
//  143 				  {
//  144 					case WIFI_RSP_OK:
//  145 						 ConnectState = 10;
        MOV     DPTR,#ConnectState
        MOV     A,#0xa
        LJMP    ??WiFiGate_ProcessEvent_16 & 0xFFFF
//  146 					break;
//  147 					case WIFI_RSP_TIMEOUT:
//  148 						 ConnectState = 0xff;
//  149 					break;  				  
//  150 				  }
//  151 				break;		
//  152 	
//  153 			case 10:
//  154 				  switch(WiFi_Send_ATCommand(CIPMODE,20,0,"OK"))
??WiFiGate_ProcessEvent_11:
        ; Setup parameters for call to function WiFi_Send_ATCommand
        MOV     DPTR,#__Constant_14
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "OK">` & 0xff
        MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
        MOV     R1,#0x0
        MOV     R2,#`?<Constant "AT+CIPMODE=1\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "AT+CIPMODE=1\\r\\n">` >> 8) & 0xff
        LJMP    ??WiFiGate_ProcessEvent_17 & 0xFFFF
        CFI CFA_XSP16 add(XSP16, 10)
//  155 				  {
//  156 					case WIFI_RSP_OK:
//  157 						 ConnectState++;
//  158 					break;
//  159 					case WIFI_RSP_TIMEOUT:
//  160 						 ConnectState = 0xff;
//  161 					break;  				  
//  162 				  }
//  163 				break;	
//  164 			case 11:
//  165 				  switch(WiFi_Send_ATCommand(CIPSEND,20,0,"OK"))
??WiFiGate_ProcessEvent_12:
        ; Setup parameters for call to function WiFi_Send_ATCommand
        MOV     DPTR,#__Constant_14
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "OK">` & 0xff
        MOV     R5,#(`?<Constant "OK">` >> 8) & 0xff
        MOV     R1,#0x0
        MOV     R2,#`?<Constant "AT+CIPSEND\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "AT+CIPSEND\\r\\n">` >> 8) & 0xff
        LJMP    ??WiFiGate_ProcessEvent_17 & 0xFFFF
        CFI CFA_XSP16 add(XSP16, 10)
//  166 				  {
//  167 					case WIFI_RSP_OK:
//  168 						 ConnectState++;
//  169 					break;
//  170 					case WIFI_RSP_TIMEOUT:
//  171 						 ConnectState = 0xff;
//  172 					break;  				  
//  173 				  }
//  174 				break;		
//  175 			case 12:
//  176 				 // WiFi_Send_ATCommand(CONNECT_ONENET_KEYSTRING,20,0,"");
//  177 				  ConnectState++;
??WiFiGate_ProcessEvent_13:
        MOV     A,#0xd
        MOVX    @DPTR,A
//  178 				  WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  179 				  WiFiModeInitDone = 1;
        MOV     DPTR,#WiFiModeInitDone
        INC     A
        MOVX    @DPTR,A
//  180 				  memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  181 				break;	
        LJMP    ??WiFiGate_ProcessEvent_15 & 0xFFFF
//  182 			case 13:
//  183 				  len = GET_RECV_LENGHT();
??WiFiGate_ProcessEvent_14:
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV     R1,#0x0
        LCALL   ??Hal_UART_RxBufLen?relay
        MOV     A,R2
        MOV     DPTR,#len
        MOVX    @DPTR,A
//  184 				  if(len){
        MOVX    A,@DPTR
        JZ      ??WiFiGate_ProcessEvent_19
//  185 					if((WiFiRecvLenght+len) >= (WIFI_RECV_DATA_BUFFER_LEN-1)){
        MOV     DPTR,#WiFiRecvLenght
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#len
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R0
        ADD     A,R2
        MOV     R0,A
        CLR     A
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        SUBB    A,#0x7f
        MOV     A,R1
        SUBB    A,#0x0
        CLR     C
        XRL     A,PSW
        RLC     A
        JC      ??WiFiGate_ProcessEvent_20
//  186 						WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  187 						memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  188 						printf("overflow\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "overflow\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "overflow\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  189 					}						
//  190 					GET_RECV_DATA(&WiFiRecvDataBuffer[WiFiRecvLenght],len);
??WiFiGate_ProcessEvent_20:
        ; Setup parameters for call to function HalUARTRead
        MOV     DPTR,#len
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     DPTR,#WiFiRecvLenght
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#WiFiRecvDataBuffer & 0xff
        ADD     A,R0
        MOV     R2,A
        MOV     A,#(WiFiRecvDataBuffer >> 8) & 0xff
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#0x0
        LCALL   ??HalUARTRead?relay
//  191 					WiFiRecvLenght = WiFiRecvLenght + len;			
        MOV     DPTR,#len
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#WiFiRecvLenght
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
//  192 				  }
//  193 				  if((WiFiRecvLenght)&&(!strstr((const char*)WiFiRecvDataBuffer,(const char*)"$"))){//Ã»ÓÐ~Õâ¸ö·ûºÅ
??WiFiGate_ProcessEvent_19:
        MOV     DPTR,#WiFiRecvLenght
        MOVX    A,@DPTR
        JZ      ??WiFiGate_ProcessEvent_21
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$">` & 0xff
        MOV     R5,#(`?<Constant "$">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??WiFiGate_ProcessEvent_21
//  194 				  	WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  195 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  196 				  }
//  197 			      cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED1,1");				
??WiFiGate_ProcessEvent_21:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED1,1">` & 0xff
        MOV     R5,#(`?<Constant "$LED1,1">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  198 				  if(cptr){
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_22
//  199 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  200 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  201 					Send_LEDCtrl(0,1);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x1
        MOV     R1,#0x0
        LCALL   ??Send_LEDCtrl?relay
//  202 					printf("~LED_ON_1");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_ON_1">` & 0xff
        MOV     R3,#(`?<Constant "~LED_ON_1">` >> 8) & 0xff
        LCALL   ??printf?relay
//  203 				  }	
//  204 				  cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED1,0");	
??WiFiGate_ProcessEvent_22:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED1,0">` & 0xff
        MOV     R5,#(`?<Constant "$LED1,0">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  205 				  if(cptr){  
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_23
//  206 					Send_LEDCtrl(0,0);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   ??Send_LEDCtrl?relay
//  207 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  208 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  209 					printf("~LED_OFF_1");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_OFF_1">` & 0xff
        MOV     R3,#(`?<Constant "~LED_OFF_1">` >> 8) & 0xff
        LCALL   ??printf?relay
//  210 				  }	
//  211 			      cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED2,1");				
??WiFiGate_ProcessEvent_23:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED2,1">` & 0xff
        MOV     R5,#(`?<Constant "$LED2,1">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  212 				  if(cptr){
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_24
//  213 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  214 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  215 					Send_LEDCtrl(1,1);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??Send_LEDCtrl?relay
//  216 					printf("~LED_ON_2");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_ON_2">` & 0xff
        MOV     R3,#(`?<Constant "~LED_ON_2">` >> 8) & 0xff
        LCALL   ??printf?relay
//  217 				  }	
//  218 				  cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED2,0");	
??WiFiGate_ProcessEvent_24:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED2,0">` & 0xff
        MOV     R5,#(`?<Constant "$LED2,0">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  219 				  if(cptr){  
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_25
//  220 					Send_LEDCtrl(1,0);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x0
        MOV     R1,#0x1
        LCALL   ??Send_LEDCtrl?relay
//  221 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  222 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);	
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  223 					printf("~LED_OFF_2");					
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_OFF_2">` & 0xff
        MOV     R3,#(`?<Constant "~LED_OFF_2">` >> 8) & 0xff
        LCALL   ??printf?relay
//  224 				  }	
//  225 			      cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED3,1");				
??WiFiGate_ProcessEvent_25:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED3,1">` & 0xff
        MOV     R5,#(`?<Constant "$LED3,1">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  226 				  if(cptr){
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_26
//  227 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  228 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  229 					Send_LEDCtrl(2,1);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??Send_LEDCtrl?relay
//  230 					printf("~LED_ON_3");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_ON_3">` & 0xff
        MOV     R3,#(`?<Constant "~LED_ON_3">` >> 8) & 0xff
        LCALL   ??printf?relay
//  231 
//  232 				  }	
//  233 				  cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED3,0");	
??WiFiGate_ProcessEvent_26:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED3,0">` & 0xff
        MOV     R5,#(`?<Constant "$LED3,0">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  234 				  if(cptr){  
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_27
//  235 					Send_LEDCtrl(2,0);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x0
        MOV     R1,#0x2
        LCALL   ??Send_LEDCtrl?relay
//  236 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  237 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  238 					printf("~LED_OFF_3");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_OFF_3">` & 0xff
        MOV     R3,#(`?<Constant "~LED_OFF_3">` >> 8) & 0xff
        LCALL   ??printf?relay
//  239 				  }	
//  240 			      cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED4,1");				
??WiFiGate_ProcessEvent_27:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED4,1">` & 0xff
        MOV     R5,#(`?<Constant "$LED4,1">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  241 				  if(cptr){
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_28
//  242 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  243 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  244 					Send_LEDCtrl(3,1);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x1
        MOV     R1,#0x3
        LCALL   ??Send_LEDCtrl?relay
//  245 					printf("~LED_ON_4");	
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_ON_4">` & 0xff
        MOV     R3,#(`?<Constant "~LED_ON_4">` >> 8) & 0xff
        LCALL   ??printf?relay
//  246 				  }	
//  247 				  cptr = (uint8*)strstr((const char*)WiFiRecvDataBuffer,(const char*)"$LED4,0");	
??WiFiGate_ProcessEvent_28:
        ; Setup parameters for call to function strstr
        MOV     R4,#`?<Constant "$LED4,0">` & 0xff
        MOV     R5,#(`?<Constant "$LED4,0">` >> 8) & 0xff
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??strstr?relay
        MOV     DPTR,#cptr
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  248 				  if(cptr){  
        MOV     DPTR,#cptr
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??WiFiGate_ProcessEvent_15
//  249 					Send_LEDCtrl(3,0);
        ; Setup parameters for call to function Send_LEDCtrl
        MOV     R2,#0x0
        MOV     R1,#0x3
        LCALL   ??Send_LEDCtrl?relay
//  250 					WiFiRecvLenght = 0;
        MOV     DPTR,#WiFiRecvLenght
        CLR     A
        MOVX    @DPTR,A
//  251 					memset((void*)WiFiRecvDataBuffer,0,WIFI_RECV_DATA_BUFFER_LEN);	
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#-0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#WiFiRecvDataBuffer & 0xff
        MOV     R3,#(WiFiRecvDataBuffer >> 8) & 0xff
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  252 					printf("~LED_OFF_4");					
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "~LED_OFF_4">` & 0xff
        MOV     R3,#(`?<Constant "~LED_OFF_4">` >> 8) & 0xff
        LCALL   ??printf?relay
//  253 				  }					  
//  254 			break;
//  255 		}		
//  256 		return (events ^ WIFI_PROCESS_PRODIC);
??WiFiGate_ProcessEvent_15:
        MOV     A,R6
        XRL     A,#0x1
        MOV     R2,A
        MOV     A,R7
        LJMP    ??WiFiGate_ProcessEvent_1 & 0xFFFF
//  257 	}
//  258   }//if(events & WIFI_PROCESS_PRODIC){
//  259   return 0;
??WiFiGate_ProcessEvent_3:
        MOV     R2,#0x0
        MOV     R3,#0x0
??WiFiGate_ProcessEvent_2:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
        REQUIRE _A_P1
//  260 } 
//  261 /*
//  262 ·¢ËÍÊý¾Ýµ½WIFIÍøÂçÉÏ
//  263 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  264 uint8  SendToWiFiNetwork(uint8 *pData,uint8 len)
SendToWiFiNetwork:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function SendToWiFiNetwork
        CODE
//  265 {
        FUNCALL SendToWiFiNetwork, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  266   if(WiFiModeInitDone)
        MOV     DPTR,#WiFiModeInitDone
        MOVX    A,@DPTR
        JZ      ??SendToWiFiNetwork_0
//  267   {
//  268     SEND_TO_WIFI(pData,len);
        ; Setup parameters for call to function HalUARTWrite
        MOV     ?V0 + 0,R6
        MOV     R4,?V0 + 0
        MOV     R5,#0x0
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  269 	return 1;
        MOV     R1,#0x1
        SJMP    ??SendToWiFiNetwork_1
//  270   }
//  271   return 0;
??SendToWiFiNetwork_0:
        MOV     R1,#0x0
??SendToWiFiNetwork_1:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3
//  272 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??WiFiGate_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    WiFiGate_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??WiFi_Send_ATCommand?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    WiFi_Send_ATCommand

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??WiFiGate_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    WiFiGate_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SendToWiFiNetwork?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SendToWiFiNetwork

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "wifi connect start\\r\\n">`:
        DB "wifi connect start\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "WiFi>>>:%s\\r\\n">`:
        DB "WiFi>>>:%s\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "AT\\r\\n">`:
        DB "AT\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "OK">`:
        DB "OK"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "AT+CWMODE=3\\r\\n">`:
        DB "AT+CWMODE=3\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "AT+CWJAP=\\"zkk_2.4g\\",\\"...">`:
        DB "AT+CWJAP=\"zkk_2.4g\",\"18696560024\"\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "AT+CIPSTART=\\"TCP\\",\\"19...">`:
        DB "AT+CIPSTART=\"TCP\",\"192.168.3.213\",9080\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "AT+CIPMODE=1\\r\\n">`:
        DB "AT+CIPMODE=1\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "AT+CIPSEND\\r\\n">`:
        DB "AT+CIPSEND\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "overflow\\r\\n">`:
        DB "overflow\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
`?<Constant "$">`:
        DB "$"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED1,1">`:
        DB "$LED1,1"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_ON_1">`:
        DB "~LED_ON_1"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED1,0">`:
        DB "$LED1,0"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_OFF_1">`:
        DB "~LED_OFF_1"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED2,1">`:
        DB "$LED2,1"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_ON_2">`:
        DB "~LED_ON_2"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED2,0">`:
        DB "$LED2,0"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_OFF_2">`:
        DB "~LED_OFF_2"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED3,1">`:
        DB "$LED3,1"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_ON_3">`:
        DB "~LED_ON_3"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED3,0">`:
        DB "$LED3,0"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_OFF_3">`:
        DB "~LED_OFF_3"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED4,1">`:
        DB "$LED4,1"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_ON_4">`:
        DB "~LED_ON_4"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "$LED4,0">`:
        DB "$LED4,0"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "~LED_OFF_4">`:
        DB "~LED_OFF_4"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1:
        DD 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_14:
        DD 20

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_1e:
        DD 30

        END
// 
// 1 523 bytes in segment BANKED_CODE
//    24 bytes in segment BANK_RELAYS
//     3 bytes in segment SFR_AN
//   338 bytes in segment XDATA_ROM_C
//   143 bytes in segment XDATA_Z
// 
// 1 547 bytes of CODE  memory
//   322 bytes of CONST memory (+ 16 bytes shared)
//     0 bytes of DATA  memory (+  3 bytes shared)
//   143 bytes of XDATA memory
//
//Errors: none
//Warnings: 1
