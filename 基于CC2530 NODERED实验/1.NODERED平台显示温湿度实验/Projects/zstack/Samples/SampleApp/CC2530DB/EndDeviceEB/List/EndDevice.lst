###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         02/May/2023  14:00:28 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\Source\End #
#                          Device.c                                           #
#    Command line       =  -f D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂ #
#                          Êª¶È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530D #
#                          B\..\..\..\Tools\CC2530DB\f8wEndev.cfg             #
#                          (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS) -f    #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0   #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF11                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\Source\End #
#                          Device.c -D NWK_AUTO_POLL -D ZTOOL_P1 -D           #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -lC D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-Î #
#                          ÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530 #
#                          DB\EndDeviceEB\List\ -lA                           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\E #
#                          ndDeviceEB\List\ --diag_suppress Pe001,Pa010 -o    #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\E #
#                          ndDeviceEB\Obj\ -e --no_unroll --no_inline         #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂ #
#                          Êª¶È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530D #
#                          B\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED #
#                          -ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleApp\CC25 #
#                          30DB\..\SOURCE\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\C #
#                          C2530\NODERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I      #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MT\ -I                    #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\OSAL\INCLUDE\ -I          #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\AF\ -I              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\NWK\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\SEC\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\SAPI\ -I            #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\SYS\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\ZDO\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\ZMAC\F8W\ -I              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\ZMAC\ -I                  #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\SERVICES\SADDR\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\SERVICES\SDATA\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\INCLUDE\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGL #
#                          E_CHIP\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NO #
#                          DERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleApp #
#                          \CC2530DB\..\..\..\..\..\COMPONENTS\HARDWARE\ -Om  #
#    List file          =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\E #
#                          ndDeviceEB\List\EndDevice.lst                      #
#    Object file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\E #
#                          ndDeviceEB\Obj\EndDevice.r51                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleApp\Source\EndDevice.c
      1          #include "ZComDef.h"
                                    ^
Warning[Pa050]: non-native end of line sequence detected (this diagnostic is
          only issued once)
      2          #include "hal_drivers.h"
      3          #include "OSAL.h"
      4          #include "OSAL_Tasks.h"
      5          #include "nwk.h"
      6          #include "APS.h"
      7          #include "ZDApp.h"
      8          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
      9            #include "ZDNwkMgr.h"
     10          #endif
     11          #if defined ( ZIGBEE_FRAGMENTATION )
     12            #include "aps_frag.h"
     13          #endif
     14          
     15          #include "SampleApp.h"
     16          #include "WiFiGate.h"
     17          #include "OSAL.h"
     18          #include "ZGlobals.h"
     19          #include "AF.h"
     20          #include "aps_groups.h"
     21          #include "ZDApp.h"
     22          #include "SampleApp.h"
     23          #include "SampleAppHw.h"
     24          #include "OnBoard.h"
     25          
     26          /* HAL */
     27          #include "hal_lcd.h"
     28          #include "hal_led.h"
     29          #include "hal_key.h"
     30          #include "string.h"
     31          
     32          #include "MT_UART.h"
     33          #include "MT_APP.h"
     34          #include "MT.h"
     35          #include "OLED.h"
     36          #include "SHT20.h"
     37          #include "bottom_led.h"
     38          #include "stdio.h"
     39          #include "UART2RS485.h"
     40          #include "WiFiGate.h"
     41          #include "_bind.h"
     42          #include "Fan.h"
     43          #include "led_mode.h"
     44          
     45          #define READ_TEMP_HUMI_MSG_EVT  0x0001
     46          #define SEND_TEMP_HUMI_MSG_EVT  0x0002
     47          void SendTemperatureHumityToCoordinator(void);
     48          // The order in this table must be identical to the task initialization calls below in osalInitTask.

   \                                 In  segment XDATA_ROM_C, align 1
     49          const pTaskEventHandlerFn tasksArr[] = {
   \                     tasksArr:
   \   000000   ....         DW ??macEventLoop?relay
   \   000002   ....         DW ??nwk_event_loop?relay
   \   000004   ....         DW ??Hal_ProcessEvent?relay
   \   000006   ....         DW ??APS_event_loop?relay
   \   000008   ....         DW ??ZDApp_event_loop?relay
   \   00000A   ....         DW ??SampleApp_ProcessEvent?relay
     50            macEventLoop,
     51            nwk_event_loop,
     52            Hal_ProcessEvent,
     53          #if defined( MT_TASK )
     54            MT_ProcessEvent,
     55          #endif
     56            APS_event_loop,
     57          #if defined ( ZIGBEE_FRAGMENTATION )
     58            APSF_ProcessEvent,
     59          #endif
     60            ZDApp_event_loop,
     61          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     62            ZDNwkMgr_event_loop,
     63          #endif
     64            SampleApp_ProcessEvent, 
     65          };

   \                                 In  segment XDATA_ROM_C, align 1
     66          const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
   \                     tasksCnt:
   \   000000   06           DB 6

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     67          uint16 *tasksEvents;
   \                     tasksEvents:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     68          /*********************************************************************
     69           * @fn      osalInitTasks
     70           *
     71           * @brief   This function invokes the initialization function for each task.
     72           *
     73           * @param   void
     74           *
     75           * @return  none
     76           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     77          void osalInitTasks( void )
   \                     osalInitTasks:
     78          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     79            uint8 taskID = 0;
     80          
     81            tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
   \   000004                ; Setup parameters for call to function osal_mem_alloc
   \   000004   7A0C         MOV     R2,#0xc
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   ??osal_mem_alloc?relay
   \   00000B   90....       MOV     DPTR,#tasksEvents
   \   00000E   EA           MOV     A,R2
   \   00000F   F0           MOVX    @DPTR,A
   \   000010   A3           INC     DPTR
   \   000011   EB           MOV     A,R3
   \   000012   F0           MOVX    @DPTR,A
     82            osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
   \   000013                ; Setup parameters for call to function osal_memset
   \   000013   7C0C         MOV     R4,#0xc
   \   000015   7D00         MOV     R5,#0x0
   \   000017   7900         MOV     R1,#0x0
   \   000019   90....       MOV     DPTR,#tasksEvents
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   FA           MOV     R2,A
   \   00001E   A3           INC     DPTR
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   FB           MOV     R3,A
   \   000021   12....       LCALL   ??osal_memset?relay
     83          
     84            macTaskInit( taskID++ );
   \   000024                ; Setup parameters for call to function macTaskInit
   \   000024   7900         MOV     R1,#0x0
   \   000026   12....       LCALL   ??macTaskInit?relay
     85            nwk_init( taskID++ );
   \   000029                ; Setup parameters for call to function nwk_init
   \   000029   7901         MOV     R1,#0x1
   \   00002B   12....       LCALL   ??nwk_init?relay
     86            Hal_Init( taskID++ );
   \   00002E                ; Setup parameters for call to function Hal_Init
   \   00002E   7902         MOV     R1,#0x2
   \   000030   12....       LCALL   ??Hal_Init?relay
     87          #if defined( MT_TASK )
     88            MT_TaskInit( taskID++ );
     89          #endif
     90            APS_Init( taskID++ );
   \   000033                ; Setup parameters for call to function APS_Init
   \   000033   7903         MOV     R1,#0x3
   \   000035   12....       LCALL   ??APS_Init?relay
     91          #if defined ( ZIGBEE_FRAGMENTATION )
     92            APSF_Init( taskID++ );
     93          #endif
     94            ZDApp_Init( taskID++ );
   \   000038                ; Setup parameters for call to function ZDApp_Init
   \   000038   7904         MOV     R1,#0x4
   \   00003A   12....       LCALL   ??ZDApp_Init?relay
     95          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     96            ZDNwkMgr_Init( taskID++ );
     97          #endif
     98            SampleApp_Init( taskID++ ); 
   \   00003D                ; Setup parameters for call to function SampleApp_Init
   \   00003D   7905         MOV     R1,#0x5
   \   00003F   12....       LCALL   ??SampleApp_Init?relay
     99          }
   \   000042   D083         POP     DPH
   \   000044   D082         POP     DPL
   \   000046   02....       LJMP    ?BRET
    100          

   \                                 In  segment XDATA_ROM_C, align 1
    101          const cId_t OutClusterList[1] =
   \                     OutClusterList:
   \   000000   0100         DW 1
    102          {
    103            TEMP_HUMI_CLUSTERID
    104          };
    105          

   \                                 In  segment XDATA_ROM_C, align 1
    106          const SimpleDescriptionFormat_t EndDevice_SimpleDesc = 
   \                     EndDevice_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   00           DB 0
   \   000007   0000         DW 0H
   \   000009   01           DB 1
   \   00000A   ....         DW OutClusterList
    107          {
    108            SAMPLEAPP_ENDPOINT,                 //  int Endpoint;
    109            SAMPLEAPP_PROFID,                   //  uint16 AppProfId[2];
    110            SAMPLEAPP_DEVICEID,                 //  uint16 AppDeviceId[2];
    111            SAMPLEAPP_DEVICE_VERSION,           //  int   AppDevVer:4;
    112            SAMPLEAPP_FLAGS,                    //  int   AppFlags:4;
    113            0,                                  //  uint8  AppNumInClusters;
    114            (cId_t *)NULL,                      //  uint8 *pAppInClusterList;
    115            1,                                  //  uint8  AppNumOutClusters;
    116            (cId_t *)OutClusterList             //  uint8 *pAppOutClusterList;
    117          };
    118          // This is the Endpoint/Interface description.  It is defined here, but
    119          // filled-in in SampleApp_Init().  Another way to go would be to fill
    120          // in the structure here and make it a "const" (in code space).  The
    121          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    122          endPointDesc_t EndDevice_epDesc;
   \                     EndDevice_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    123          /*********************************************************************
    124           * EXTERNAL VARIABLES
    125           */
    126          
    127          /*********************************************************************
    128           * EXTERNAL FUNCTIONS
    129           */
    130          
    131          /*********************************************************************
    132           * LOCAL VARIABLES
    133           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    135                                    // This variable will be received when
    136                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    137          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    138          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    139          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    140          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    141          afAddrType_t Point_To_Point_DstAddr;//µã¶ÔµãÍ¨ÐÅ¶¨Òå
   \                     Point_To_Point_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    142          afAddrType_t Boardcast_DstAddr;//µã¶ÔµãÍ¨ÐÅ¶¨Òå
   \                     Boardcast_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    143          /*********************************************************************
    144           * LOCAL FUNCTIONS
    145           */
    146          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    147          /*********************************************************************
    148           * @fn      SampleApp_Init
    149           *
    150           * @brief   Initialization function for the Generic App Task.
    151           *          This is called during initialization and should contain
    152           *          any application specific initialization (ie. hardware
    153           *          initialization/setup, table initialization, power up
    154           *          notificaiton ... ).
    155           *
    156           * @param   task_id - the ID assigned by OSAL.  This ID should be
    157           *                    used to send messages and set timers.
    158           *
    159           * @return  none
    160           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    161          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    162          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    163            SampleApp_TaskID   = task_id;
   \   000006   90....       MOV     DPTR,#SampleApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
    164            SampleApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000D   7401         MOV     A,#0x1
   \   00000F   F0           MOVX    @DPTR,A
    165            SampleApp_TransID  = 0; 
   \   000010   90....       MOV     DPTR,#SampleApp_TransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    166            UartInit(HAL_UART_PORT_1,HAL_UART_BR_115200);//µ÷ÊÔ´®¿Ú³õÊ¼»¯
   \   000015                ; Setup parameters for call to function UartInit
   \   000015   7A04         MOV     R2,#0x4
   \   000017   7901         MOV     R1,#0x1
   \   000019   12....       LCALL   ??UartInit?relay
    167            SHT2x_Init();      //³õÊ¼»¯ÎÂÊª¶È´«¸ÐÆ÷
   \   00001C                ; Setup parameters for call to function SHT2x_Init
   \   00001C   12....       LCALL   ??SHT2x_Init?relay
    168            printf("i am end device\r\n");//´®¿Ú´òÓ¡
   \   00001F                ; Setup parameters for call to function printf
   \   00001F   7A..         MOV     R2,#`?<Constant "i am end device\\r\\n">` & 0xff
   \   000021   7B..         MOV     R3,#(`?<Constant "i am end device\\r\\n">` >> 8) & 0xff
   \   000023   12....       LCALL   ??printf?relay
    169            // µã¶ÔµãÍ¨Ñ¶¶¨Òå
    170            Point_To_Point_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥
   \   000026   90....       MOV     DPTR,#Point_To_Point_DstAddr + 8
   \   000029   7402         MOV     A,#0x2
   \   00002B   F0           MOVX    @DPTR,A
    171            Point_To_Point_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;     //Ä¿±ê¶ËµãºÅ
   \   00002C   A3           INC     DPTR
   \   00002D   7414         MOV     A,#0x14
   \   00002F   F0           MOVX    @DPTR,A
    172          	/*·¢¸øÐ­µ÷Æ÷,Ð­µ÷Æ÷µØÖ·¹Ì¶¨Îª0x0000*/
    173            Point_To_Point_DstAddr.addr.shortAddr = 0x0000;
   \   000030   90....       MOV     DPTR,#Point_To_Point_DstAddr
   \   000033   E4           CLR     A
   \   000034   F0           MOVX    @DPTR,A
   \   000035   A3           INC     DPTR
   \   000036   F0           MOVX    @DPTR,A
    174            // ÌîÐ´¶Ëµã
    175            EndDevice_epDesc.endPoint   = SAMPLEAPP_ENDPOINT;
   \   000037   90....       MOV     DPTR,#EndDevice_epDesc
   \   00003A   7414         MOV     A,#0x14
   \   00003C   F0           MOVX    @DPTR,A
    176            EndDevice_epDesc.task_id    = &SampleApp_TaskID;
   \   00003D   A3           INC     DPTR
   \   00003E   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000040   F0           MOVX    @DPTR,A
   \   000041   A3           INC     DPTR
   \   000042   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000044   F0           MOVX    @DPTR,A
    177            EndDevice_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&EndDevice_SimpleDesc;
   \   000045   A3           INC     DPTR
   \   000046   74..         MOV     A,#EndDevice_SimpleDesc & 0xff
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   74..         MOV     A,#(EndDevice_SimpleDesc >> 8) & 0xff
   \   00004C   F0           MOVX    @DPTR,A
    178            EndDevice_epDesc.latencyReq = noLatencyReqs;
   \   00004D   A3           INC     DPTR
   \   00004E   E4           CLR     A
   \   00004F   F0           MOVX    @DPTR,A
    179            // ×¢²á¶Ëµã
    180            afRegister( &EndDevice_epDesc );
   \   000050                ; Setup parameters for call to function afRegister
   \   000050   7A..         MOV     R2,#EndDevice_epDesc & 0xff
   \   000052   7B..         MOV     R3,#(EndDevice_epDesc >> 8) & 0xff
   \   000054   12....       LCALL   ??afRegister?relay
    181            //¿ªÊ¼±¾µØÏÔÊ¾ÎÂÊª¶ÈÊýÖµ
    182            osal_start_timerEx( SampleApp_TaskID, READ_TEMP_HUMI_MSG_EVT,1000);
   \   000057                ; Setup parameters for call to function osal_start_timerEx
   \   000057   7CE8         MOV     R4,#-0x18
   \   000059   7D03         MOV     R5,#0x3
   \   00005B   7A01         MOV     R2,#0x1
   \   00005D   7B00         MOV     R3,#0x0
   \   00005F   90....       MOV     DPTR,#SampleApp_TaskID
   \   000062   E0           MOVX    A,@DPTR
   \   000063   F9           MOV     R1,A
   \   000064   12....       LCALL   ??osal_start_timerEx?relay
    183          }
   \   000067   7F01         MOV     R7,#0x1
   \   000069   02....       LJMP    ?BANKED_LEAVE_XDATA
    184          
    185          /*********************************************************************
    186           * @fn      SampleApp_ProcessEvent
    187           *
    188           * @brief   Generic Application Task event processor.  This function
    189           *          is called to process all events for the task.  Events
    190           *          include timers, messages and any other user defined events.
    191           *
    192           * @param   task_id  - The OSAL assigned task ID.
    193           * @param   events - events to process.  This is a bit map and can
    194           *                   contain more than one event.
    195           *
    196           * @return  none
    197           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
    198          uint8 SendTemperatureIndicate = 1;
   \                     SendTemperatureIndicate:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for SendTemperatureIndicate>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    199          uint8 TempHumiShowSwitch = 0;
   \                     TempHumiShowSwitch:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    200          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    201          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    202            afIncomingMSGPacket_t *MSGpkt;
    203            (void)task_id;  // Intentionally unreferenced parameter
    204          
    205            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6064         JZ      ??SampleApp_ProcessEvent_0
    206            {
    207              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   802E         SJMP    ??SampleApp_ProcessEvent_1
    208              while ( MSGpkt )
    209              {
    210                switch ( MSGpkt->hdr.event )
    211                {
    212                  // Received when a messages is received (OTA) for this endpoint
    213                  case AF_INCOMING_MSG_CMD:
    214                    SampleApp_MessageMSGCB( MSGpkt );
    215                    break;
    216          
    217                  // Received whenever the device changes state in the network
    218                  case ZDO_STATE_CHANGE:          
    219                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   F0           MOVX    @DPTR,A
    220                    if ((SampleApp_NwkState == DEV_ROUTER)
    221                       ||(SampleApp_NwkState == DEV_END_DEVICE) )
   \   000015   E0           MOVX    A,@DPTR
   \   000016   6407         XRL     A,#0x7
   \   000018   6005         JZ      ??SampleApp_ProcessEvent_3
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   6406         XRL     A,#0x6
   \   00001D   7017         JNZ     ??SampleApp_ProcessEvent_4
    222                    {
    223                      printf("connect coordinator\r\n");            
   \                     ??SampleApp_ProcessEvent_3:
   \   00001F                ; Setup parameters for call to function printf
   \   00001F   7A..         MOV     R2,#`?<Constant "connect coordinator\\r\\n">` & 0xff
   \   000021   7B..         MOV     R3,#(`?<Constant "connect coordinator\\r\\n">` >> 8) & 0xff
   \   000023   12....       LCALL   ??printf?relay
    224                      osal_start_timerEx( SampleApp_TaskID, SEND_TEMP_HUMI_MSG_EVT,2000);
   \   000026                ; Setup parameters for call to function osal_start_timerEx
   \   000026   7CD0         MOV     R4,#-0x30
   \   000028   7D07         MOV     R5,#0x7
   \   00002A   7A02         MOV     R2,#0x2
   \   00002C   7B00         MOV     R3,#0x0
   \   00002E   90....       MOV     DPTR,#SampleApp_TaskID
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F9           MOV     R1,A
   \   000033   12....       LCALL   ??osal_start_timerEx?relay
    225                    }
    226                    break;
    227          
    228                  default:
    229                    break;
    230                }
    231          
    232                // Release the memory
    233                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_4:
   \   000036                ; Setup parameters for call to function osal_msg_deallocate
   \   000036   AA..         MOV     R2,?V0 + 0
   \   000038   AB..         MOV     R3,?V0 + 1
   \   00003A   12....       LCALL   ??osal_msg_deallocate?relay
    234          
    235                // Next - if one is available
    236                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00003D                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   00003D   90....       MOV     DPTR,#SampleApp_TaskID
   \   000040   E0           MOVX    A,@DPTR
   \   000041   F9           MOV     R1,A
   \   000042   12....       LCALL   ??osal_msg_receive?relay
   \   000045   8A..         MOV     ?V0 + 0,R2
   \   000047   8B..         MOV     ?V0 + 1,R3
   \   000049   E5..         MOV     A,?V0 + 0
   \   00004B   45..         ORL     A,?V0 + 1
   \   00004D   601A         JZ      ??SampleApp_ProcessEvent_5
   \   00004F   85..82       MOV     DPL,?V0 + 0
   \   000052   85..83       MOV     DPH,?V0 + 1
   \   000055   E0           MOVX    A,@DPTR
   \   000056   24E6         ADD     A,#-0x1a
   \   000058   6006         JZ      ??SampleApp_ProcessEvent_6
   \   00005A   2449         ADD     A,#0x49
   \   00005C   60B1         JZ      ??SampleApp_ProcessEvent_2
   \   00005E   80D6         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_6:
   \   000060                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000060   AA..         MOV     R2,?V0 + 0
   \   000062   AB..         MOV     R3,?V0 + 1
   \   000064   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000067   80CD         SJMP    ??SampleApp_ProcessEvent_4
    237              }
    238          
    239              // return unprocessed events
    240              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_5:
   \   000069   EE           MOV     A,R6
   \   00006A   FA           MOV     R2,A
   \   00006B   EF           MOV     A,R7
   \   00006C   6480         XRL     A,#0x80
   \   00006E   FB           MOV     R3,A
   \   00006F   8046         SJMP    ??SampleApp_ProcessEvent_7
    241            }//if ( events & SYS_EVENT_MSG )
    242          	
    243            if(events & READ_TEMP_HUMI_MSG_EVT)//READ_TEMP_HUMI_MSG_EVT
   \                     ??SampleApp_ProcessEvent_0:
   \   000071   EE           MOV     A,R6
   \   000072   A2E0         MOV     C,0xE0 /* A   */.0
   \   000074   5025         JNC     ??SampleApp_ProcessEvent_8
    244            {//¶ÁÈ¡´«¸ÐÆ÷Êý¾Ý²¢ÏÔÊ¾ÔÚÊýÂë¹ÜÉÏ
    245              TempHumiShowSwitch = 1 - TempHumiShowSwitch;
   \   000076   90....       MOV     DPTR,#TempHumiShowSwitch
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   F8           MOV     R0,A
   \   00007B   7401         MOV     A,#0x1
   \   00007D   C3           CLR     C
   \   00007E   98           SUBB    A,R0
   \   00007F   F0           MOVX    @DPTR,A
    246          		/*¶ÁÈ¡ÎÂÊª¶È²¢ÊýÂë¹ÜÏÔÊ¾*/
    247              TempHumiShowSwitch?SHT2x_DisplayHumi():SHT2x_DisplayTemp();
   \   000080   E0           MOVX    A,@DPTR
   \   000081   6005         JZ      ??SampleApp_ProcessEvent_9
   \   000083                ; Setup parameters for call to function SHT2x_DisplayHumi
   \   000083   12....       LCALL   ??SHT2x_DisplayHumi?relay
   \   000086   8003         SJMP    ??SampleApp_ProcessEvent_10
   \                     ??SampleApp_ProcessEvent_9:
   \   000088                ; Setup parameters for call to function SHT2x_DisplayTemp
   \   000088   12....       LCALL   ??SHT2x_DisplayTemp?relay
    248          		/*Æô¶¯¶¨Ê±Æ÷1000msºó³¬Ê±,´¥·¢Ò»´ÎREAD_TEMP_HUMI_MSG_EVTÊÂ¼þ*/
    249              osal_start_timerEx( SampleApp_TaskID, READ_TEMP_HUMI_MSG_EVT,1000);
   \                     ??SampleApp_ProcessEvent_10:
   \   00008B                ; Setup parameters for call to function osal_start_timerEx
   \   00008B   7CE8         MOV     R4,#-0x18
   \   00008D   7D03         MOV     R5,#0x3
   \   00008F   7A01         MOV     R2,#0x1
   \   000091   7B00         MOV     R3,#0x0
   \   000093   90....       MOV     DPTR,#SampleApp_TaskID
   \   000096   E0           MOVX    A,@DPTR
   \   000097   F9           MOV     R1,A
   \   000098   12....       LCALL   ??osal_start_timerEx?relay
    250            }
    251            
    252            if(events & SEND_TEMP_HUMI_MSG_EVT)//ÊÇSEND_TEMP_HUMI_MSG_EVTÊÂ¼þ
   \                     ??SampleApp_ProcessEvent_8:
   \   00009B   EE           MOV     A,R6
   \   00009C   5402         ANL     A,#0x2
   \   00009E   6013         JZ      ??SampleApp_ProcessEvent_11
    253            {
    254              SendTemperatureHumityToCoordinator();//ÏòÐ­µ÷Æ÷·¢ËÍÎÂÊª¶ÈÊý¾Ý  
   \   0000A0                ; Setup parameters for call to function SendTemperatureHumityToCoordinator
   \   0000A0   12....       LCALL   ??SendTemperatureHumityToCoordinator?relay
    255          		/*Æô¶¯¶¨Ê±Æ÷2000msºó³¬Ê±£¬´¥·¢Ò»´ÎSEND_TEMP_HUMI_MSG_EVTÊÂ¼þ*/    
    256              osal_start_timerEx( SampleApp_TaskID, SEND_TEMP_HUMI_MSG_EVT,2000);
   \   0000A3                ; Setup parameters for call to function osal_start_timerEx
   \   0000A3   7CD0         MOV     R4,#-0x30
   \   0000A5   7D07         MOV     R5,#0x7
   \   0000A7   7A02         MOV     R2,#0x2
   \   0000A9   7B00         MOV     R3,#0x0
   \   0000AB   90....       MOV     DPTR,#SampleApp_TaskID
   \   0000AE   E0           MOVX    A,@DPTR
   \   0000AF   F9           MOV     R1,A
   \   0000B0   12....       LCALL   ??osal_start_timerEx?relay
    257            }
    258            return 0;
   \                     ??SampleApp_ProcessEvent_11:
   \   0000B3   7A00         MOV     R2,#0x0
   \   0000B5   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_7:
   \   0000B7   7F04         MOV     R7,#0x4
   \   0000B9   02....       LJMP    ?BANKED_LEAVE_XDATA
    259          }
    260          /*********************************************************************
    261           * LOCAL FUNCTIONS
    262           */
    263          
    264          /*********************************************************************
    265           * @fn      SampleApp_MessageMSGCB
    266           *
    267           * @brief   Data message processor callback.  This function processes
    268           *          any incoming data - probably from other devices.  So, based
    269           *          on cluster ID, perform the intended action.
    270           *
    271           * @param   none
    272           *
    273           * @return  none
    274           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    275          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    276          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    277            switch ( pkt->clusterId )
    278            {
    279              ;
    280            }
    281          }
   \   000000   02....       LJMP    ?BRET
    282          /*
    283          ÖÕ¶ËÏòÐ­µ÷Æ÷·¢ËÍÊý¾Ý
    284          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    285          void SendTemperatureHumityToCoordinator(void)
   \                     SendTemperatureHumityToCoordinator:
    286          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    287            uint8 sendbuf[2];
    288            sendbuf[0] = SHT2x_GetTemp();
   \   00000A                ; Setup parameters for call to function SHT2x_GetTemp
   \   00000A   12....       LCALL   ??SHT2x_GetTemp?relay
   \   00000D   E9           MOV     A,R1
   \   00000E   85..82       MOV     DPL,?XSP + 0
   \   000011   85..83       MOV     DPH,?XSP + 1
   \   000014   F0           MOVX    @DPTR,A
    289            sendbuf[1] = SHT2x_GetHumi();
   \   000015                ; Setup parameters for call to function SHT2x_GetHumi
   \   000015   12....       LCALL   ??SHT2x_GetHumi?relay
   \   000018   E9           MOV     A,R1
   \   000019   C0E0         PUSH    A
   \   00001B   7401         MOV     A,#0x1
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   D0E0         POP     A
   \   000022   F0           MOVX    @DPTR,A
    290            if ( AF_DataRequest( &Point_To_Point_DstAddr,&EndDevice_epDesc,
    291                                 TEMP_HUMI_CLUSTERID,
    292                                 2,
    293                                 sendbuf,
    294                                 &SampleApp_TransID,
    295                                 AF_DISCV_ROUTE,
    296                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000023                ; Setup parameters for call to function AF_DataRequest
   \   000023   75..1E       MOV     ?V0 + 0,#0x1e
   \   000026   78..         MOV     R0,#?V0 + 0
   \   000028   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002B   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00002E   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000031   78..         MOV     R0,#?V0 + 0
   \   000033   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000036   7403         MOV     A,#0x3
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   8582..       MOV     ?V0 + 0,DPL
   \   00003E   8583..       MOV     ?V0 + 1,DPH
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000046   75..02       MOV     ?V0 + 0,#0x2
   \   000049   75..00       MOV     ?V0 + 1,#0x0
   \   00004C   78..         MOV     R0,#?V0 + 0
   \   00004E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000051   75..01       MOV     ?V0 + 0,#0x1
   \   000054   78..         MOV     R0,#?V0 + 0
   \   000056   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000059   7920         MOV     R1,#0x20
   \   00005B   7C..         MOV     R4,#EndDevice_epDesc & 0xff
   \   00005D   7D..         MOV     R5,#(EndDevice_epDesc >> 8) & 0xff
   \   00005F   7A..         MOV     R2,#Point_To_Point_DstAddr & 0xff
   \   000061   7B..         MOV     R3,#(Point_To_Point_DstAddr >> 8) & 0xff
   \   000063   12....       LCALL   ??AF_DataRequest?relay
   \   000066   7409         MOV     A,#0x9
   \   000068   12....       LCALL   ?DEALLOC_XSTACK8
    297            {
    298              //printf("tx success\r\n");//´®¿Ú´òÓ¡ÌáÊ¾£¬·¢ËÍ³É¹¦
    299            }
    300          }
   \   00006B   7402         MOV     A,#0x2
   \   00006D   12....       LCALL   ?DEALLOC_XSTACK8
   \   000070   7F02         MOV     R7,#0x2
   \   000072   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for SendTemperatureIndicate>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??osalInitTasks?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osalInitTasks

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SendTemperatureHumityToCoordinator?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SendTemperatureHumityToCoordinator

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "i am end device\\r\\n">`:
   \   000000   6920616D     DB "i am end device\015\012"
   \            20656E64
   \            20646576
   \            6963650D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "connect coordinator\\r\\n">`:
   \   000000   636F6E6E     DB "connect coordinator\015\012"
   \            65637420
   \            636F6F72
   \            64696E61
   \            746F720D
   \            0A00    
    301          
    302          
    303          
    304          /*********************************************************************
    305          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     SampleApp_Init                     0      0      9
       -> UartInit                      0      0     18
       -> SHT2x_Init                    0      0     18
       -> printf                        0      0     18
       -> afRegister                    0      0     18
       -> osal_start_timerEx            0      0     18
     SampleApp_MessageMSGCB             0      0     12
     SampleApp_ProcessEvent             0      0     12
       -> osal_msg_receive              0      0     24
       -> printf                        0      0     24
       -> osal_start_timerEx            0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> SampleApp_MessageMSGCB        0      0     24
       -> SHT2x_DisplayHumi             0      0     24
       -> SHT2x_DisplayTemp             0      0     24
       -> osal_start_timerEx            0      0     24
       -> SendTemperatureHumityToCoordinator
                                        0      0     24
       -> osal_start_timerEx            0      0     24
     SendTemperatureHumityToCoordinator
                                        1      0     33
       -> SHT2x_GetTemp                 0      0     24
       -> SHT2x_GetHumi                 0      0     24
       -> AF_DataRequest                0      0     42
     osalInitTasks                      2      0      0
       -> osal_mem_alloc                4      0      0
       -> osal_memset                   4      0      0
       -> macTaskInit                   4      0      0
       -> nwk_init                      4      0      0
       -> Hal_Init                      4      0      0
       -> APS_Init                      4      0      0
       -> ZDApp_Init                    4      0      0
       -> SampleApp_Init                4      0      0


   Segment part sizes:

     Function/Label                             Bytes
     --------------                             -----
     tasksArr                                     12
     tasksCnt                                      1
     tasksEvents                                   2
     osalInitTasks                                73
     OutClusterList                                2
     EndDevice_SimpleDesc                         12
     EndDevice_epDesc                              6
     SampleApp_TaskID                              1
     SampleApp_NwkState                            1
     SampleApp_TransID                             1
     Point_To_Point_DstAddr                       12
     Boardcast_DstAddr                            12
     SampleApp_Init                              108
     SendTemperatureIndicate                       1
     TempHumiShowSwitch                            1
     SampleApp_ProcessEvent                      188
     SampleApp_MessageMSGCB                        3
     SendTemperatureHumityToCoordinator
                                                 117
     ?<Initializer for SendTemperatureIndicate>    1
     ??osalInitTasks?relay                         6
     ??SampleApp_Init?relay                        6
     ??SampleApp_ProcessEvent?relay                6
     ??SampleApp_MessageMSGCB?relay                6
     ??SendTemperatureHumityToCoordinator?relay    6
     ?<Constant "i am end device\r\n">            18
     ?<Constant "connect coordinator\r\n">        22

 
 489 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
  67 bytes in segment XDATA_ROM_C
  36 bytes in segment XDATA_Z
 
 520 bytes of CODE  memory
  67 bytes of CONST memory
  37 bytes of XDATA memory

Errors: none
Warnings: 1
