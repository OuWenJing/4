###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         02/May/2023  14:05:12 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\Source\Coo #
#                          rdinator.c                                         #
#    Command line       =  -f D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂ #
#                          Êª¶È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530D #
#                          B\..\..\..\Tools\CC2530DB\f8wCoord.cfg             #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wConfig.cfg (-DSECURE=0   #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFF11                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\Source\Coo #
#                          rdinator.c -D ZIGBEEPRO -D ZTOOL_P1 -D             #
#                          MT_SYS_FUNC -D xMT_ZDO_FUNC -D                     #
#                          LCD_SUPPORTED=DEBUG -D NV_RESTORE -lC              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\C #
#                          oordinatorEB\List\ -lA D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì #
#                          ³Ì\CC2530\NODERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\CoordinatorEB\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\C #
#                          oordinatorEB\Obj\ -e --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½ #
#                          Ì³Ì\CC2530\NODERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\ -I                         #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\SOURCE\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\ #
#                          NODERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleA #
#                          pp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I            #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MT\ -I                    #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\OSAL\INCLUDE\ -I          #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\AF\ -I              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\NWK\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\SEC\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\SAPI\ -I            #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\SYS\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\STACK\ZDO\ -I             #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\ZMAC\F8W\ -I              #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\ZMAC\ -I                  #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\SERVICES\SADDR\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\SERVICES\SDATA\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\INCLUDE\ -I           #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I        #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I   #
#                          D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGL #
#                          E_CHIP\ -I D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NO #
#                          DERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleApp #
#                          \CC2530DB\..\..\..\..\..\COMPONENTS\HARDWARE\ -Ohz #
#    List file          =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\C #
#                          oordinatorEB\List\Coordinator.lst                  #
#    Object file        =  D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶ #
#                          È¼ì²â\Projects\zstack\Samples\SampleApp\CC2530DB\C #
#                          oordinatorEB\Obj\Coordinator.r51                   #
#                                                                             #
#                                                                             #
###############################################################################

D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶È¼ì²â\Projects\zstack\Samples\SampleApp\Source\Coordinator.c
      1          #include "ZComDef.h"

  /**************************************************************************************************
                                                                                                    ^
"D:\×ÊÁÏ\°Ë³Ç-V2\·ä³²\ÐÂ±à½Ì³Ì\CC2530\NODERED-ÎÂÊª¶È¼ì²â\COMPONENTS\OSAL\INCLUDE\ZComDef.h",1  Warning[Pa050]: 
          non-native end of line sequence detected (this diagnostic is only
          issued once)
      2          #include "hal_drivers.h"
      3          #include "OSAL.h"
      4          #include "OSAL_Tasks.h"
      5          #include "nwk.h"
      6          #include "APS.h"
      7          #include "ZDApp.h"
      8          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
      9            #include "ZDNwkMgr.h"
     10          #endif
     11          #if defined ( ZIGBEE_FRAGMENTATION )
     12            #include "aps_frag.h"
     13          #endif
     14          
     15          #include "SampleApp.h"
     16          #include "WiFiGate.h"
     17          #include "OSAL.h"
     18          #include "ZGlobals.h"
     19          #include "AF.h"
     20          #include "aps_groups.h"
     21          #include "ZDApp.h"
     22          
     23          #include "SampleApp.h"
     24          #include "SampleAppHw.h"
     25          
     26          #include "OnBoard.h"
     27          
     28          /* HAL */
     29          #include "hal_lcd.h"
     30          //#include "hal_led.h"
     31          #include "hal_key.h"
     32          #include "string.h"
     33          
     34          #include "MT_UART.h"
     35          #include "MT_APP.h"
     36          #include "MT.h"
     37          #include "OLED.h"
     38          #include "SHT20.h"
     39          #include "bottom_led.h"
     40          #include "stdio.h"
     41          #include "UART2RS485.h"
     42          #include "WiFiGate.h"
     43          #include "_bind.h"
     44          #include "led_mode.h"
     45          
     46          // The order in this table must be identical to the task initialization calls below in osalInitTask.

   \                                 In  segment XDATA_ROM_C, align 1
     47          const pTaskEventHandlerFn tasksArr[] = {
   \                     tasksArr:
   \   000000   ....         DW ??macEventLoop?relay
   \   000002   ....         DW ??nwk_event_loop?relay
   \   000004   ....         DW ??Hal_ProcessEvent?relay
   \   000006   ....         DW ??APS_event_loop?relay
   \   000008   ....         DW ??APSF_ProcessEvent?relay
   \   00000A   ....         DW ??ZDApp_event_loop?relay
   \   00000C   ....         DW ??ZDNwkMgr_event_loop?relay
   \   00000E   ....         DW ??WiFiGate_ProcessEvent?relay
   \   000010   ....         DW ??SampleApp_ProcessEvent?relay
     48            macEventLoop,
     49            nwk_event_loop,
     50            Hal_ProcessEvent,
     51          #if defined( MT_TASK )
     52            MT_ProcessEvent,
     53          #endif
     54            APS_event_loop,
     55          #if defined ( ZIGBEE_FRAGMENTATION )
     56            APSF_ProcessEvent,
     57          #endif
     58            ZDApp_event_loop,
     59          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     60            ZDNwkMgr_event_loop,
     61          #endif
     62            WiFiGate_ProcessEvent,
     63            SampleApp_ProcessEvent,  
     64          };

   \                                 In  segment XDATA_ROM_C, align 1
     65          const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
   \                     tasksCnt:
   \   000000   09           DB 9

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     66          uint16 *tasksEvents;
   \                     tasksEvents:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     67          
     68          /*********************************************************************
     69           * @fn      osalInitTasks
     70           *
     71           * @brief   This function invokes the initialization function for each task.
     72           *
     73           * @param   void
     74           *
     75           * @return  none
     76           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     77          void osalInitTasks( void )
   \                     osalInitTasks:
     78          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     79            uint8 taskID = 0;
     80          
     81            tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
   \   000004                ; Setup parameters for call to function osal_mem_alloc
   \   000004   7A12         MOV     R2,#0x12
   \   000006   7B00         MOV     R3,#0x0
   \   000008   12....       LCALL   ??osal_mem_alloc?relay
   \   00000B   90....       MOV     DPTR,#tasksEvents
   \   00000E   EA           MOV     A,R2
   \   00000F   F0           MOVX    @DPTR,A
   \   000010   A3           INC     DPTR
   \   000011   EB           MOV     A,R3
   \   000012   F0           MOVX    @DPTR,A
     82            osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
   \   000013                ; Setup parameters for call to function osal_memset
   \   000013   7C12         MOV     R4,#0x12
   \   000015   7D00         MOV     R5,#0x0
   \   000017   7900         MOV     R1,#0x0
   \   000019   12....       LCALL   ??osal_memset?relay
     83          
     84            macTaskInit( taskID++ );
   \   00001C                ; Setup parameters for call to function macTaskInit
   \   00001C   7900         MOV     R1,#0x0
   \   00001E   12....       LCALL   ??macTaskInit?relay
     85            nwk_init( taskID++ );
   \   000021                ; Setup parameters for call to function nwk_init
   \   000021   7901         MOV     R1,#0x1
   \   000023   12....       LCALL   ??nwk_init?relay
     86            Hal_Init( taskID++ );
   \   000026                ; Setup parameters for call to function Hal_Init
   \   000026   7902         MOV     R1,#0x2
   \   000028   12....       LCALL   ??Hal_Init?relay
     87          #if defined( MT_TASK )
     88            MT_TaskInit( taskID++ );
     89          #endif
     90            APS_Init( taskID++ );
   \   00002B                ; Setup parameters for call to function APS_Init
   \   00002B   7903         MOV     R1,#0x3
   \   00002D   12....       LCALL   ??APS_Init?relay
     91          #if defined ( ZIGBEE_FRAGMENTATION )
     92            APSF_Init( taskID++ );
   \   000030                ; Setup parameters for call to function APSF_Init
   \   000030   7904         MOV     R1,#0x4
   \   000032   12....       LCALL   ??APSF_Init?relay
     93          #endif
     94            ZDApp_Init( taskID++ );
   \   000035                ; Setup parameters for call to function ZDApp_Init
   \   000035   7905         MOV     R1,#0x5
   \   000037   12....       LCALL   ??ZDApp_Init?relay
     95          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     96            ZDNwkMgr_Init( taskID++ );
   \   00003A                ; Setup parameters for call to function ZDNwkMgr_Init
   \   00003A   7906         MOV     R1,#0x6
   \   00003C   12....       LCALL   ??ZDNwkMgr_Init?relay
     97          #endif
     98            WiFiGate_Init( taskID++ );
   \   00003F                ; Setup parameters for call to function WiFiGate_Init
   \   00003F   7907         MOV     R1,#0x7
   \   000041   12....       LCALL   ??WiFiGate_Init?relay
     99            SampleApp_Init( taskID++ ); 
   \   000044                ; Setup parameters for call to function SampleApp_Init
   \   000044   7908         MOV     R1,#0x8
   \   000046   12....       LCALL   ??SampleApp_Init?relay
    100          }
   \   000049   D083         POP     DPH
   \   00004B   D082         POP     DPL
   \   00004D   02....       LJMP    ?BRET
    101          

   \                                 In  segment XDATA_ROM_C, align 1
    102          const cId_t InClusterList[1] =
   \                     InClusterList:
   \   000000   0100         DW 1
    103          {
    104            TEMP_HUMI_CLUSTERID
    105          };
    106          

   \                                 In  segment XDATA_ROM_C, align 1
    107          const SimpleDescriptionFormat_t Coordinator_SimpleDesc =
   \                     Coordinator_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW InClusterList
   \   000009   00           DB 0
   \   00000A   0000         DW 0H
    108          {
    109            SAMPLEAPP_ENDPOINT,                 //  int Endpoint;
    110            SAMPLEAPP_PROFID,                   //  uint16 AppProfId[2];
    111            SAMPLEAPP_DEVICEID,                 //  uint16 AppDeviceId[2];
    112            SAMPLEAPP_DEVICE_VERSION,           //  int   AppDevVer:4;
    113            SAMPLEAPP_FLAGS,                    //  int   AppFlags:4;
    114            1,                                  //  uint8  AppNumInClusters;
    115            (cId_t *)InClusterList,             //  uint8 *pAppInClusterList;
    116            0,                                  //  uint8  AppNumOutClusters;
    117            (cId_t *)NULL                       //  uint8 *pAppOutClusterList;
    118          };
    119          // This is the Endpoint/Interface description.  It is defined here, but
    120          // filled-in in SampleApp_Init().  Another way to go would be to fill
    121          // in the structure here and make it a "const" (in code space).  The
    122          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    123          endPointDesc_t Coordinator_epDesc;
   \                     Coordinator_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    124          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    125          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    126                                    // This variable will be received when
    127                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    128          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    129          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    130          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    131          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    132          afAddrType_t Point_To_Point_DstAddr;//µã¶ÔµãÍ¨ÐÅ¶¨Òå
   \                     Point_To_Point_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    133          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          afAddrType_t Boardcast_DstAddr;//µã¶ÔµãÍ¨ÐÅ¶¨Òå
   \                     Boardcast_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    135          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );//½ÓÊÕµ½ÎÞÏßÏûÏ¢»Øµ÷º¯Êý
    136          /*********************************************************************
    137           * @fn      SampleApp_Init
    138           *
    139           * @brief   Initialization function for the Generic App Task.
    140           *          This is called during initialization and should contain
    141           *          any application specific initialization (ie. hardware
    142           *          initialization/setup, table initialization, power up
    143           *          notificaiton ... ).
    144           *
    145           * @param   task_id - the ID assigned by OSAL.  This ID should be
    146           *                    used to send messages and set timers.
    147           *
    148           * @return  none
    149           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    150          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    151          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    152            SampleApp_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#SampleApp_TaskID
   \   000009   F0           MOVX    @DPTR,A
    153            SampleApp_NwkState = DEV_INIT;
   \   00000A   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000D   7401         MOV     A,#0x1
   \   00000F   F0           MOVX    @DPTR,A
    154            SampleApp_TransID = 0;  
   \   000010   90....       MOV     DPTR,#SampleApp_TransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    155          	UartInit(HAL_UART_PORT_1,HAL_UART_BR_115200);//µ÷ÊÔ´®¿Ú³õÊ¼»¯
   \   000015                ; Setup parameters for call to function UartInit
   \   000015   7A04         MOV     R2,#0x4
   \   000017   7901         MOV     R1,#0x1
   \   000019   12....       LCALL   ??UartInit?relay
    156            //OLED_Init();                    //³õÊ¼»¯OLED 
    157            //OLED_P8x16Str(0,0,"coordinator");//OLEDÏÔÊ¾ÌáÊ¾ÐÅÏ¢
    158             
    159            // ÌîÐ´¶Ëµã
    160            Coordinator_epDesc.endPoint   = SAMPLEAPP_ENDPOINT;
   \   00001C   90....       MOV     DPTR,#Coordinator_epDesc
   \   00001F   7414         MOV     A,#0x14
   \   000021   F0           MOVX    @DPTR,A
    161            Coordinator_epDesc.task_id    = &SampleApp_TaskID;
   \   000022   A3           INC     DPTR
   \   000023   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000025   F0           MOVX    @DPTR,A
   \   000026   A3           INC     DPTR
   \   000027   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   000029   F0           MOVX    @DPTR,A
    162            Coordinator_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&Coordinator_SimpleDesc;
   \   00002A   A3           INC     DPTR
   \   00002B   74..         MOV     A,#Coordinator_SimpleDesc & 0xff
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   74..         MOV     A,#(Coordinator_SimpleDesc >> 8) & 0xff
   \   000031   F0           MOVX    @DPTR,A
    163            Coordinator_epDesc.latencyReq = noLatencyReqs;
   \   000032   A3           INC     DPTR
   \   000033   E4           CLR     A
   \   000034   F0           MOVX    @DPTR,A
    164            // ×¢²á¶Ëµã
    165            afRegister( &Coordinator_epDesc );
   \   000035                ; Setup parameters for call to function afRegister
   \   000035   7A..         MOV     R2,#Coordinator_epDesc & 0xff
   \   000037   7B..         MOV     R3,#(Coordinator_epDesc >> 8) & 0xff
   \   000039   12....       LCALL   ??afRegister?relay
    166          }
   \   00003C   7F01         MOV     R7,#0x1
   \   00003E   02....       LJMP    ?BANKED_LEAVE_XDATA
    167          
    168          /*********************************************************************
    169           * @fn      SampleApp_ProcessEvent
    170           *
    171           * @brief   Generic Application Task event processor.  This function
    172           *          is called to process all events for the task.  Events
    173           *          include timers, messages and any other user defined events.
    174           *
    175           * @param   task_id  - The OSAL assigned task ID.
    176           * @param   events - events to process.  This is a bit map and can
    177           *                   contain more than one event.
    178           *
    179           * @return  none
    180           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
    181          uint8 SendTemperatureIndicate = 1;
   \                     SendTemperatureIndicate:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for SendTemperatureIndicate>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    182          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    183          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
    184            afIncomingMSGPacket_t *MSGpkt;
    185            (void)task_id;  // Intentionally unreferenced parameter
    186          
    187            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   604F         JZ      ??SampleApp_ProcessEvent_0
    188            {
    189              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000E                ; Setup parameters for call to function osal_msg_receive
   \   00000E   8018         SJMP    ??SampleApp_ProcessEvent_1
    190              while ( MSGpkt )
    191              {
    192                switch ( MSGpkt->hdr.event )
    193                {        
    194                  // Received when a messages is received (OTA) for this endpoint
    195                  case AF_INCOMING_MSG_CMD:
    196                    SampleApp_MessageMSGCB( MSGpkt );
    197                    break;
    198          
    199                  // Received whenever the device changes state in the network
    200                  case ZDO_STATE_CHANGE:
    201                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   90....       MOV     DPTR,#SampleApp_NwkState
   \   000015   F0           MOVX    @DPTR,A
    202                    if(SampleApp_NwkState == DEV_ZB_COORD)
   \   000016   6409         XRL     A,#0x9
   \   000018   7007         JNZ     ??SampleApp_ProcessEvent_3
    203                    {
    204                      printf("coord ready!");
   \   00001A                ; Setup parameters for call to function printf
   \   00001A   7A..         MOV     R2,#`?<Constant "coord ready!">` & 0xff
   \   00001C   7B..         MOV     R3,#(`?<Constant "coord ready!">` >> 8) & 0xff
   \   00001E   12....       LCALL   ??printf?relay
    205                    }
    206                    break;
    207          
    208                  default:
    209                    break;
    210                }
    211          
    212                // Release the memory
    213                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_3:
   \   000021                ; Setup parameters for call to function osal_msg_deallocate
   \   000021   EE           MOV     A,R6
   \   000022   FA           MOV     R2,A
   \   000023   EF           MOV     A,R7
   \   000024   FB           MOV     R3,A
   \   000025   12....       LCALL   ??osal_msg_deallocate?relay
    214          
    215                // Next - if one is available
    216                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000028                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   000028   90....       MOV     DPTR,#SampleApp_TaskID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   12....       LCALL   ??osal_msg_receive?relay
   \   000030   8A..         MOV     ?V0 + 2,R2
   \   000032   8B..         MOV     ?V0 + 3,R3
   \   000034   AE..         MOV     R6,?V0 + 2
   \   000036   AF..         MOV     R7,?V0 + 3
   \   000038   EE           MOV     A,R6
   \   000039   4F           ORL     A,R7
   \   00003A   6018         JZ      ??SampleApp_ProcessEvent_4
   \   00003C   8E82         MOV     DPL,R6
   \   00003E   8F83         MOV     DPH,R7
   \   000040   E0           MOVX    A,@DPTR
   \   000041   24E6         ADD     A,#-0x1a
   \   000043   6006         JZ      ??SampleApp_ProcessEvent_5
   \   000045   2449         ADD     A,#0x49
   \   000047   60C7         JZ      ??SampleApp_ProcessEvent_2
   \   000049   80D6         SJMP    ??SampleApp_ProcessEvent_3
   \                     ??SampleApp_ProcessEvent_5:
   \   00004B                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   00004B   EE           MOV     A,R6
   \   00004C   FA           MOV     R2,A
   \   00004D   EF           MOV     A,R7
   \   00004E   FB           MOV     R3,A
   \   00004F   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000052   80CD         SJMP    ??SampleApp_ProcessEvent_3
    217              }
    218          
    219              // return unprocessed events
    220              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_4:
   \   000054   AA..         MOV     R2,?V0 + 0
   \   000056   E5..         MOV     A,?V0 + 1
   \   000058   6480         XRL     A,#0x80
   \   00005A   FB           MOV     R3,A
   \   00005B   8004         SJMP    ??SampleApp_ProcessEvent_6
    221            }//if ( events & SYS_EVENT_MSG )
    222          
    223            // Discard unknown events
    224            return 0;
   \                     ??SampleApp_ProcessEvent_0:
   \   00005D   7A00         MOV     R2,#0x0
   \   00005F   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_6:
   \   000061   7F04         MOV     R7,#0x4
   \   000063   02....       LJMP    ?BANKED_LEAVE_XDATA
    225          }
    226          /*********************************************************************
    227           * LOCAL FUNCTIONS
    228           */
    229          
    230          /*********************************************************************
    231           * @fn      SampleApp_MessageMSGCB
    232           *
    233           * @brief   Data message processor callback.  This function processes
    234           *          any incoming data - probably from other devices.  So, based
    235           *          on cluster ID, perform the intended action.
    236           *
    237           * @param   none
    238           *
    239           * @return  none
    240          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    241          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    242          { 
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 4
   \   000005   74FC         MOV     A,#-0x4
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    243            uint8 ShowTemperatureBuf[ ]="temperture=xxC";
                         ^
Warning[Pe550]: variable "ShowTemperatureBuf" was set but never used
    244            uint8 ShowHumiBuf[ ]="humidity=xx%";
                         ^
Warning[Pe550]: variable "ShowHumiBuf" was set but never used
    245            uint8 Tem_hum_Buf[4];
    246            switch ( pkt->clusterId )
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   6401         XRL     A,#0x1
   \   000015   7002         JNZ     ??SampleApp_MessageMSGCB_0
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \                     ??SampleApp_MessageMSGCB_0:
   \   000019   6003         JZ      $+5
   \   00001B   02....       LJMP    ??SampleApp_MessageMSGCB_1 & 0xFFFF
    247            {
    248              case TEMP_HUMI_CLUSTERID://ÊÇÎÂÊª¶ÈÊý¾ÝÃüÁîÂë
    249                  ShowTemperatureBuf[11] = pkt->cmd.Data[0]/10 + 0x30;//HEX ×ª³ÉASCII
    250                  ShowTemperatureBuf[12] = pkt->cmd.Data[0]%10 + 0x30;//HEX ×ª³ÉASCII 
    251                  Tem_hum_Buf[0]=pkt->cmd.Data[0]/10 + 0x30;
   \   00001E   EA           MOV     A,R2
   \   00001F   2421         ADD     A,#0x21
   \   000021   F8           MOV     R0,A
   \   000022   EB           MOV     A,R3
   \   000023   3400         ADDC    A,#0x0
   \   000025   F9           MOV     R1,A
   \   000026   E8           MOV     A,R0
   \   000027   FE           MOV     R6,A
   \   000028   E9           MOV     A,R1
   \   000029   FF           MOV     R7,A
   \   00002A   75F00A       MOV     B,#0xa
   \   00002D   12....       LCALL   ??Subroutine3_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000030   84           DIV     AB
   \   000031   2430         ADD     A,#0x30
   \   000033   85..82       MOV     DPL,?XSP + 0
   \   000036   85..83       MOV     DPH,?XSP + 1
   \   000039   12....       LCALL   ?Subroutine1 & 0xFFFF
    252                  Tem_hum_Buf[1]=pkt->cmd.Data[0]%10 + 0x30;
   \                     ??CrossCallReturnLabel_0:
   \   00003C   75F00A       MOV     B,#0xa
   \   00003F   84           DIV     AB
   \   000040   E5F0         MOV     A,B
   \   000042   2430         ADD     A,#0x30
   \   000044   C0E0         PUSH    A
   \   000046   7401         MOV     A,#0x1
   \   000048   12....       LCALL   ?XSTACK_DISP0_8
   \   00004B   D0E0         POP     A
   \   00004D   12....       LCALL   ?Subroutine1 & 0xFFFF
    253                  printf("Temperature=%dC\r\n",pkt->cmd.Data[0]);//´®¿Ú´òÓ¡
   \                     ??CrossCallReturnLabel_1:
   \   000050   F5..         MOV     ?V0 + 0,A
   \   000052   75..00       MOV     ?V0 + 1,#0x0
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   7A..         MOV     R2,#`?<Constant "Temperature=%dC\\r\\n">` & 0xff
   \   00005C   7B..         MOV     R3,#(`?<Constant "Temperature=%dC\\r\\n">` >> 8) & 0xff
   \   00005E   12....       LCALL   ??printf?relay
   \   000061   7402         MOV     A,#0x2
   \   000063   12....       LCALL   ?DEALLOC_XSTACK8
    254                  //OLED_P8x16Str(0,4,ShowTemperatureBuf);//OLEDÆÁÏÔÊ¾ 
    255                  
    256                  ShowHumiBuf[9]  = pkt->cmd.Data[1]/10 + 0x30;//HEX ×ª³ÉASCII
    257                  ShowHumiBuf[10] = pkt->cmd.Data[1]%10 + 0x30;//HEX ×ª³ÉASCII 
    258                  Tem_hum_Buf[2]=pkt->cmd.Data[1]/10 + 0x30;
   \   000066   75F00A       MOV     B,#0xa
   \   000069   12....       LCALL   ??Subroutine4_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   00006C   84           DIV     AB
   \   00006D   2430         ADD     A,#0x30
   \   00006F   C0E0         PUSH    A
   \   000071   7402         MOV     A,#0x2
   \   000073   12....       LCALL   ?XSTACK_DISP0_8
   \   000076   D0E0         POP     A
   \   000078   12....       LCALL   ?Subroutine0 & 0xFFFF
    259                  Tem_hum_Buf[3]=pkt->cmd.Data[1]%10 + 0x30;
   \                     ??CrossCallReturnLabel_3:
   \   00007B   75F00A       MOV     B,#0xa
   \   00007E   84           DIV     AB
   \   00007F   E5F0         MOV     A,B
   \   000081   2430         ADD     A,#0x30
   \   000083   C0E0         PUSH    A
   \   000085   7403         MOV     A,#0x3
   \   000087   12....       LCALL   ?XSTACK_DISP0_8
   \   00008A   D0E0         POP     A
   \   00008C   12....       LCALL   ?Subroutine0 & 0xFFFF
    260                  printf("Humidity=%d%%\r\n",pkt->cmd.Data[1]);//´®¿Ú´òÓ¡        
   \                     ??CrossCallReturnLabel_4:
   \   00008F   F5..         MOV     ?V0 + 0,A
   \   000091   78..         MOV     R0,#?V0 + 0
   \   000093   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000096   7A..         MOV     R2,#`?<Constant "Humidity=%d%%\\r\\n">` & 0xff
   \   000098   7B..         MOV     R3,#(`?<Constant "Humidity=%d%%\\r\\n">` >> 8) & 0xff
   \   00009A   12....       LCALL   ??printf?relay
   \   00009D   7402         MOV     A,#0x2
   \   00009F   12....       LCALL   ?DEALLOC_XSTACK8
    261                  //OLED_P8x16Str(0,6,ShowHumiBuf);//OLEDÆÁÏÔÊ¾  
    262                  SendToWiFiNetwork(&Tem_hum_Buf[0],4);
   \   0000A2                ; Setup parameters for call to function SendToWiFiNetwork
   \   0000A2   7904         MOV     R1,#0x4
   \   0000A4   85..82       MOV     DPL,?XSP + 0
   \   0000A7   85..83       MOV     DPH,?XSP + 1
   \   0000AA   AA82         MOV     R2,DPL
   \   0000AC   AB83         MOV     R3,DPH
   \   0000AE   12....       LCALL   ??SendToWiFiNetwork?relay
    263              break;
    264            }
    265          }
   \                     ??SampleApp_MessageMSGCB_1:
   \   0000B1   7404         MOV     A,#0x4
   \   0000B3   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B6   7F02         MOV     R7,#0x2
   \   0000B8   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function printf
   \   000001                REQUIRE ??Subroutine3_0
   \   000001                ; // Fall through to label ??Subroutine3_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine3_0:
   \   000000   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function printf
   \   000001                REQUIRE ??Subroutine4_0
   \   000001                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000003   A3           INC     DPTR
   \   000004   E0           MOVX    A,@DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004   E0           MOVX    A,@DPTR
   \   000005   F8           MOV     R0,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8882         MOV     DPL,R0
   \   00000C   22           RET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for SendTemperatureIndicate>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??osalInitTasks?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osalInitTasks

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "coord ready!">`:
   \   000000   636F6F72     DB "coord ready!"
   \            64207265
   \            61647921
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temperature=%dC\\r\\n">`:
   \   000000   54656D70     DB "Temperature=%dC\015\012"
   \            65726174
   \            7572653D
   \            2564430D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Humidity=%d%%\\r\\n">`:
   \   000000   48756D69     DB "Humidity=%d%%\015\012"
   \            64697479
   \            3D256425
   \            250D0A00
    266          /*********************************************************************
    267          *********************************************************************/

   Maximum stack usage in bytes:

     Function                    ISTACK PSTACK XSTACK
     --------                    ------ ------ ------
     SampleApp_Init                  0      0      9
       -> UartInit                   0      0     18
       -> afRegister                 0      0     18
     SampleApp_MessageMSGCB          1      0     28
       -> printf                     0      0     32
       -> printf                     0      0     32
       -> SendToWiFiNetwork          0      0     28
     SampleApp_ProcessEvent          0      0     12
       -> osal_msg_receive           0      0     24
       -> printf                     0      0     24
       -> osal_msg_deallocate        0      0     24
       -> osal_msg_receive           0      0     24
       -> SampleApp_MessageMSGCB     0      0     24
     osalInitTasks                   2      0      0
       -> osal_mem_alloc             4      0      0
       -> osal_memset                4      0      0
       -> macTaskInit                4      0      0
       -> nwk_init                   4      0      0
       -> Hal_Init                   4      0      0
       -> APS_Init                   4      0      0
       -> APSF_Init                  4      0      0
       -> ZDApp_Init                 4      0      0
       -> ZDNwkMgr_Init              4      0      0
       -> WiFiGate_Init              4      0      0
       -> SampleApp_Init             4      0      0


   Segment part sizes:

     Function/Label                             Bytes
     --------------                             -----
     tasksArr                                     18
     tasksCnt                                      1
     tasksEvents                                   2
     osalInitTasks                                80
     InClusterList                                 2
     Coordinator_SimpleDesc                       12
     Coordinator_epDesc                            6
     SampleApp_TaskID                              1
     SampleApp_NwkState                            1
     SampleApp_TransID                             1
     Point_To_Point_DstAddr                       12
     Boardcast_DstAddr                            12
     SampleApp_Init                               65
     SendTemperatureIndicate                       1
     SampleApp_ProcessEvent                      102
     SampleApp_MessageMSGCB                      187
     ?Subroutine1                                  1
     ??Subroutine3_0                               5
     ?Subroutine0                                  1
     ??Subroutine4_0                               6
     ?Subroutine2                                 13
     ?<Initializer for SendTemperatureIndicate>    1
     ??osalInitTasks?relay                         6
     ??SampleApp_Init?relay                        6
     ??SampleApp_ProcessEvent?relay                6
     ??SampleApp_MessageMSGCB?relay                6
     ?<Constant "coord ready!">                   13
     ?<Constant "Temperature=%dC\r\n">            18
     ?<Constant "Humidity=%d%%\r\n">              16

 
 460 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
  80 bytes in segment XDATA_ROM_C
  35 bytes in segment XDATA_Z
 
 485 bytes of CODE  memory
  80 bytes of CONST memory
  36 bytes of XDATA memory

Errors: none
Warnings: 3
